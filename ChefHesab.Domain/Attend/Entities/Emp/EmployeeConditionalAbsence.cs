// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.EmployeeBase;
using Ksc.HR.Domain.Entities.Personal;
using KSC.Domain;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Ksc.HR.Domain.Entities.Emp
{
    // EmployeeConditionalAbsence
    public class EmployeeConditionalAbsence : IEntityBase<int>
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmployeeId { get; set; } // EmployeeId
        public int ConditionalAbsenceSubjectTypeId { get; set; } // ConditionalAbsenceSubjectTypeId
        public DateTime StartDate { get; set; } // StartDate
        public DateTime EndDate { get; set; } // EndDate
        public bool IsActive { get; set; } // IsActive

        /// <summary>
        /// شناسه family
        /// </summary>
        public int? FamilyId { get; set; } // FamilyId
        public DateTime? InsertDate { get; set; } // InsertDate
        public string InsertUser { get; set; } // InsertUser (length: 50)

        /// <summary>
        /// تاریخ ویرایش
        /// </summary>
        public DateTime? UpdateDate { get; set; } // UpdateDate

        /// <summary>
        /// کاربر ویرایش کننده
        /// </summary>
        public string UpdateUser { get; set; } // UpdateUser (length: 50)
        public bool IsDeleted { get; set; } // IsDeleted
        // Foreign keys

        /// <summary>
        /// Parent Emp_Family pointed by [EmployeeConditionalAbsence].([FamilyId]) (FK_EmployeeConditionalAbsence_Family)
        /// </summary>
        public virtual Family Family { get; set; } // FK_EmployeeConditionalAbsence_Family

        /// <summary>
        /// Parent Employee pointed by [EmployeeConditionalAbsence].([EmployeeId]) (FK_EmployeeConditionalAbsence_Employee)
        /// </summary>
        public virtual Employee Employee { get; set; } // FK_EmployeeConditionalAbsence_Employee

        /// <summary>
        /// Parent EmployeeBase_ConditionalAbsenceSubjectType pointed by [EmployeeConditionalAbsence].([ConditionalAbsenceSubjectTypeId]) (FK_EmployeeConditionalAbsence_ConditionalAbsenceSubjectType)
        /// </summary>
        public virtual ConditionalAbsenceSubjectType ConditionalAbsenceSubjectType { get; set; } // FK_EmployeeConditionalAbsence_ConditionalAbsenceSubjectType
    }

}
// </auto-generated>
