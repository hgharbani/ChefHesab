// <auto-generated>
// ReSharper disable All

using Ksc.Hr.Domain.Entities;
using Ksc.HR.Domain.Entities.Chart;
using Ksc.HR.Domain.Entities.Personal;
using Ksc.HR.Domain.Entities.Workshift;
using KSC.Domain;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Ksc.HR.Domain.Entities
{
    // Family
    /// <summary>
    /// تحت تکفل
    /// </summary>
    public class EmployeeJobPosition : IEntityBase<int>
    {
        // EmployeeJobPosition
        /// <summary>
        /// سوابق پست سازمانی پرسنل
        /// </summary>
        public int Id { get; set; } // Id (Primary key)
        /// <summary>
        /// پرسنل
        /// </summary>
        public int EmployeeId { get; set; } // EmployeeId
        /// <summary>
        /// شغل
        /// </summary>
        public int JobPositionId { get; set; } // JobPositionId

        /// <summary>
        /// شناسه حکم
        /// </summary>
        public int? EmployeeInterdictId { get; set; } // EmployeeInterdictId
        /// <summary>
        /// تاریخ شروع
        /// </summary>
        public DateTime StartDate { get; set; } // StartDate
        /// <summary>
        /// تاریخ پایان
        /// </summary>
        public DateTime? EndDate { get; set; } // EndDate

        /// <summary>
        /// تاریخ درج
        /// </summary>
        public DateTime? InsertDate { get; set; } // InsertDate

        /// <summary>
        /// کاربر درج کننده
        /// </summary>
        public string InsertUser { get; set; } // InsertUser (length: 50)

        /// <summary>
        /// تاریخ ویرایش
        /// </summary>
        public DateTime? UpdateDate { get; set; } // UpdateDate

        /// <summary>
        /// کاربر ویرایش کننده
        /// </summary>
        public string UpdateUser { get; set; } // UpdateUser (length: 50)

        /// <summary>
        /// فعال؟
        /// </summary>
        public bool IsActive { get; set; } // IsActive

        // Foreign keys

        /// <summary>
        /// Parent Chart_JobPosition pointed by [EmployeeJobPosition].([JobPositionId]) (FK_EmployeeJobPosition_JobPosition)
        /// </summary>
        public virtual Chart_JobPosition Chart_JobPosition { get; set; } // FK_EmployeeJobPosition_JobPosition

        /// <summary>
        /// Parent Employee pointed by [EmployeeJobPosition].([EmployeeId]) (FK_EmployeeJobPosition_Employee1)
        /// </summary>
        public virtual Employee Employee { get; set; } // FK_EmployeeJobPosition_Employee1
    }

}
// </auto-generated>