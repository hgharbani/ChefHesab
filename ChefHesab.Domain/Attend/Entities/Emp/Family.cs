// <auto-generated>
// ReSharper disable All

using Ksc.Hr.Domain.Entities;
using Ksc.HR.Domain.Entities.Emp;
using Ksc.HR.Domain.Entities.Pay;
using Ksc.HR.Domain.Entities.Personal;
using Ksc.HR.Domain.Entities.Workshift;
using KSC.Domain;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Ksc.HR.Domain.Entities
{
    // Family
    /// <summary>
    /// تحت تکفل
    /// </summary>
    public class Family : IEntityBase<int>
    {
        /// <summary>
        /// کلید جدول
        /// </summary>
        public int Id { get; set; } // id (Primary key)

        /// <summary>
        /// آی دی شماره پرسنلی
        /// </summary>
        public int EmployeeId { get; set; } // EmployeeId (Primary key)

        /// <summary>
        /// شماره ردیف تحت تکفل
        /// </summary>
        public int SequenceNumber { get; set; } // SequenceNumber (Primary key)

        /// <summary>
        /// کد ملی تحت تکفل
        /// </summary>
        public string NationalCode { get; set; } // NationalCode (Primary key) (length: 10)

        /// <summary>
        /// نام تحت تکفل
        /// </summary>
        public string FirstName { get; set; } // Name (Primary key) (length: 500)

        /// <summary>
        /// نام خانوادگی تحت تکفل
        /// </summary>
        public string LastName { get; set; } // Family (Primary key) (length: 500)

        /// <summary>
        /// جنسیت تحت تکفل
        /// </summary>
        public int GenderId { get; set; } // GenderId (Primary key)

        /// <summary>
        /// نوع وابستگی تحت تکفل
        /// </summary>
        public int DependenceTypeId { get; set; } // DependenceTypeId (Primary key)

        /// <summary>
        /// ادامه تکفل دارد؟
        /// </summary>
        public bool IsContinuesDependent { get; set; } // IsContinuesDependent (Primary key)

        /// <summary>
        /// تاریخ تولد تحت تکفل
        /// </summary>
        public DateTime BirthDate { get; set; } // BirthDate (Primary key)

        /// <summary>
        /// شهر محل تولد
        /// </summary>
        public int BirthCityId { get; set; } // BirthCityId (Primary key)

        /// <summary>
        /// شماره شناسنامه تحت تکفل
        /// </summary>
        public string CertificateNumber { get; set; } // CertificateNumber (Primary key) (length: 50)

        /// <summary>
        /// تاریخ صدور شناسنامه
        /// </summary>
        public DateTime CertificateDate { get; set; } // CertificateDate (Primary key)

        /// <summary>
        /// محل صدور شناسنامه
        /// </summary>
        public int CertificateCityId { get; set; } // CertificateCityId (Primary key)

        /// <summary>
        /// ملیت تحت تکفل
        /// </summary>
        public int NationalityId { get; set; } // NationalityId (Primary key)
        public int? DependenceJobId { get; set; } // DependenceJobId (Primary key)

        /// <summary>
        /// علت ادامه تکفل
        /// </summary>
        public int? DependenceReasonId { get; set; } // DependenceReasonId

        /// <summary>
        /// علت خاتمه تکفل
        /// </summary>
        public int? DependentExitDateReasonId { get; set; } // DependentExitDateReasonId

        /// <summary>
        /// تاریخ صدور شناسنامه
        /// </summary>
        public DateTime StartDateDependent { get; set; } // StartDateDependent (Primary key)

        /// <summary>
        /// تاریخ پایان تکفل
        /// </summary>
        public DateTime? EndDateDependent { get; set; } // EndDateDependent
        public bool IsCompleteInsurance { get; set; } // IsCompleteInsurance (Primary key)

        /// <summary>
        /// تاریخ صدور شناسنامه
        /// </summary>
        public DateTime? ValidDateInsurance { get; set; } // ValidDateInsurance (Primary key)
        public DateTime? InsertDate { get; set; } // InsertDate
        public string InsertUser { get; set; } // InsertUser (length: 50)
        public DateTime? UpdateDate { get; set; } // UpdateDate
        public string UpdateUser { get; set; } // UpdateUser (length: 50)
        public bool IsActive { get; set; } // IsActive (Primary key)

        // Foreign keys

        /// <summary>
        /// Parent City pointed by [Family].([BirthCityId]) (FK_Family_City)
        /// </summary>
        public virtual City BirthCity { get; set; } // FK_Family_City

        /// <summary>
        /// Parent City pointed by [Family].([CertificateCityId]) (FK_Family_City1)
        /// </summary>
        public virtual City CertificateCity { get; set; } // FK_Family_City1

        /// <summary>
        /// Parent Employee pointed by [Family].([EmployeeId]) (FK_Family_Employee)
        /// </summary>
        public virtual Employee Employee { get; set; } // FK_Family_Employee

        /// <summary>
        /// Parent EmployeeBase_DependenceJob pointed by [Family].([DependenceJobId]) (FK_Family_DependenceJob)
        /// </summary>
        public virtual DependenceJob DependenceJob { get; set; } // FK_Family_DependenceJob

        /// <summary>
        /// Parent EmployeeBase_DependenceReason pointed by [Family].([DependenceReasonId]) (FK_Family_DependenceReason)
        /// </summary>
        public virtual DependenceReason DependenceReason { get; set; } // FK_Family_DependenceReason

        /// <summary>
        /// Parent EmployeeBase_DependenceType pointed by [Family].([DependenceTypeId]) (FK_Family_DependenceType)
        /// </summary>
        public virtual DependenceType DependenceType { get; set; } // FK_Family_DependenceType

        /// <summary>
        /// Parent EmployeeBase_DependentExitDateReason pointed by [Family].([DependentExitDateReasonId]) (FK_Family_DependentExitDateReason)
        /// </summary>
        public virtual DependentExitDateReason DependentExitDateReason { get; set; } // FK_Family_DependentExitDateReason

        /// <summary>
        /// Parent EmployeeBase_Gender pointed by [Family].([GenderId]) (FK_Family_Gender)
        /// </summary>
        public virtual GenderType Gender { get; set; } // FK_Family_Gender

        /// <summary>
        /// Parent EmployeeBase_Nationality pointed by [Family].([NationalityId]) (FK_Family_Nationality)
        /// </summary>
        public virtual Nationality Nationality { get; set; } // FK_Family_Nationality

        public virtual ICollection<InsuranceBooklet> InsuranceBooklets { get; set; }
        /// <summary>
        /// Child StudentRewardRequests where [StudentRewardRequest].[FamilyId] point to this entity (FK_StudentRewardRequest_Family)
        /// </summary>
        public virtual ICollection<StudentRewardRequest> StudentRewardRequests { get; set; } // StudentRewardRequest.FK_StudentRewardRequest_Family
        public virtual ICollection<EmployeeConditionalAbsence> EmployeeConditionalAbsences { get; set; } // EmployeeConditionalAbsence.FK_EmployeeConditionalAbsence_Family

        public Family()
        {
            InsuranceBooklets = new List<InsuranceBooklet>();
            StudentRewardRequests = new List<StudentRewardRequest>();
            EmployeeConditionalAbsences = new List<EmployeeConditionalAbsence>();
        }
    }

}
// </auto-generated>