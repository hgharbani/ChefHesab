// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Personal;
using Ksc.HR.Domain.Entities.WorkFlow;
using Ksc.HR.Domain.Entities.Workshift;
using KSC.Domain;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Ksc.HR.Domain.Entities.BusinessTrip
{
    // Request
    /// <summary>
    /// درخواست ماموریت
    /// </summary>
    public class Mission_Request : IEntityBase<int>
    {
        public int Id { get; set; } // Id (Primary key)

        /// <summary>
        /// تاریخ شروع ماموریت
        /// </summary>
        public DateTime MissionStartDate { get; set; } // MissionStartDate

        /// <summary>
        /// تاریخ پایان ماموریت
        /// </summary>
        public DateTime MissionEndDate { get; set; } // MissionEndDate

        /// <summary>
        /// موضوع ماموریت
        /// </summary>
        public string MissionSubject { get; set; } // MissionSubject
        public string MissionNumber { get; set; } // MissionNumber (length: 50)
        public string MissionNumberOld { get; set; } // MissionNumberOld (length: 50)



        /// <summary>
        /// تاریخ صدور ماموریت
        /// </summary>
        public DateTime? IssuanceMissionDate { get; set; } // IssuanceMissionDate

        public DateTime? IssuanceMissionDateOld { get; set; } // IssuanceMissionDateOld
        /// <summary>
        /// مدت ماموریت
        /// </summary>
        public int MissionDuration { get; set; } // MissionDuration

        /// <summary>
        /// همکار جانشین
        /// </summary>
        public int? StandbyEmployeeId { get; set; } // StandbyEmployeeId

        /// <summary>
        /// شماره درخواست فلو
        /// </summary>
        public int WfRequestId { get; set; } // WFRequestId

        /// <summary>
        /// نوع ماموریت
        /// </summary>
        public int MissionTypeId { get; set; } // MissionTypeId

        /// <summary>
        /// شهر محل ماموریت
        /// </summary>
        public int MissionCityId { get; set; } // MissionCityId
        /// <summary>
        /// بلیط نیاز دارد
        /// </summary>
        public bool? NeededTicket { get; set; } // NeededTicket
        /// <summary>
        /// هتل نیاز دارد؟
        /// </summary>
        public bool NeededHotel { get; set; } // NeededHotel

        /// <summary>
        /// بلیط رفت نیاز دارد؟
        /// </summary>
        public bool NeededEntryTicket { get; set; } // NeededEntryTicket

        /// <summary>
        /// بلیط برگشت نیاز دارد؟
        /// </summary>
        public bool NeededExitTicket { get; set; } // NeededExitTicket

        /// <summary>
        /// زمان بلیط رفت
        /// </summary>
        public int? EntryDayTimeSettingId { get; set; } // EntryDayTimeSettingId

        /// <summary>
        /// زمان بلیط برگشت
        /// </summary>
        public int? ExitDayTimeSettingId { get; set; } // ExitDayTimeSettingId

        /// <summary>
        /// نیاز به خودرو دارد؟
        /// </summary>
        public bool NeededCar { get; set; } // NeededCar

        /// <summary>
        /// مکان انجام ماموریت
        /// </summary>
        public int MissionLocationId { get; set; } // MissionLocationId
        /// <summary>
        /// هدف ماموریت
        /// </summary>
        public int MissionGoalId { get; set; } // MissionGoalId
        /// <summary>
        /// هزینه ایاب وذهاب
        /// </summary>
        public decimal? CostTravelInside { get; set; } // CostTravelInside

        /// <summary>
        /// هزینه هتل  
        /// </summary>
        public decimal? CostHotel { get; set; } // CostHotel
        /// <summary>
        ///هزینه بلیط 
        /// </summary>
        public decimal? CostTicket { get; set; } // CostTicket


        /// <summary>
        /// هتل دارد
        /// </summary>
        public bool? UsedHotel { get; set; } // UsedHotel

        /// <summary>
        /// بلیط رفت دارد
        /// </summary>
        public bool? UsedEntryTicket { get; set; } // UsedEntryTicket

        /// <summary>
        /// بلیط برگشت دارد
        /// </summary>
        public bool? UsedExitTicket { get; set; } // UsedExitTicket

        /// <summary>
        /// صبحانه دارد
        /// </summary>
        public bool? UsedBreakfast { get; set; } // UsedBreakfast

        /// <summary>
        /// ناهار دارد
        /// </summary>
        public bool? UsedLunch { get; set; } // UsedLunch

        /// <summary>
        /// شام دارد
        /// </summary>
        public bool? UsedDinner { get; set; } // UsedDinner

        /// <summary>
        /// تعداد بلیط
        /// </summary>
        public int? TicketCount { get; set; } // TicketCount

        /// <summary>
        /// مبلغ بلیط
        /// </summary>
        public decimal? TicketPrice { get; set; } // TicketPrice
        /// <summary>
        /// مبلغ هتل
        /// </summary>
        public decimal? HotelPrice { get; set; } // HotelPrice
        /// <summary>
        /// مبلغ اقامت
        /// </summary>
        public decimal? PlacePrice { get; set; } // PlacePrice
        /// <summary>
        /// هزینه سفر
        /// </summary>
        public decimal? TravelPrice { get; set; } // TravelPrice

        /// <summary>
        /// شهر مقصد
        /// </summary>
        public string DestinationCity { get; set; } // DestinationCity (length: 50)

        /// <summary>
        /// جمع هزینه ایاب و  ذهاب
        /// </summary>
        public decimal? SumCostTravel { get; set; } // SumCostTravel

        /// <summary>
        /// جمع سایر هزینه ها
        /// </summary>
        public decimal? SumOtherCost { get; set; } // SumOtherCost
        /// <summary>
        /// شناسه کلاس
        /// </summary>
        public int? ClassId { get; set; }         //ClassId
        /// <summary>
        /// خلاصه ماموریت
        /// </summary>
        public string MissionSummary { get; set; }         //MissionSummary
        /// <summary>
        /// ثبت مستقیم ماموریت
        /// </summary>
        public bool MissionCreateDirectly { get; set; } // MissionCreateDirectly
        /// <summary>
        ///هزینه های ماموریت دارد؟
        /// </summary>
        public bool? HasMissionCost { get; set; } // UsedHotel
        public bool? HasNoMissionReport { get; set; } // HasNoMissionReport
        /// <summary>
        /// وضعیت ثبت گزارش و هزینها توسط فرد مامور
        /// </summary>
        public int? DocumentCostStatusCode { get; set; } // DocumentCostStatusCode
        // Reverse navigation
        /// <summary>
        /// Child EmployeeAttendAbsenceItems where [EmployeeAttendAbsenceItem].[MissionRequestId] point to this entity (FK_EmployeeAttendAbsenceItem_Request)
        /// </summary>
        public virtual ICollection<EmployeeAttendAbsenceItem> EmployeeAttendAbsenceItems { get; set; } // EmployeeAttendAbsenceItem.FK_EmployeeAttendAbsenceItem_Request

        // Foreign keys

        /// <summary>
        /// Parent City pointed by [Request].([MissionCityId]) (FK_Request_City)
        /// </summary>
        public virtual City City { get; set; } // FK_Request_City

        /// <summary>
        /// Parent DayTimeSetting pointed by [Request].([EntryDayTimeSettingId]) (FK_Request_EntryDayTimeSetting)
        /// </summary>
        public virtual DayTimeSetting EntryDayTimeSetting { get; set; } // FK_Request_EntryDayTimeSetting

        /// <summary>
        /// Parent DayTimeSetting pointed by [Request].([ExitDayTimeSettingId]) (FK_Request_ExitDayTimeSetting)
        /// </summary>
        public virtual DayTimeSetting ExitDayTimeSetting { get; set; } // FK_Request_ExitDayTimeSetting

        /// <summary>
        /// Parent Employee pointed by [Request].([StandbyEmployeeId]) (FK_Request_Employee)
        /// </summary>
        public virtual Employee Employee { get; set; } // FK_Request_Employee

        /// <summary>
        /// Parent Mission_Location pointed by [Request].([MissionLocationId]) (FK_Request_Location)
        /// </summary>
        public virtual Mission_Location Mission_Location { get; set; } // FK_Request_Location
        /// <summary>
        /// Parent Mission_Goal pointed by [Request].([MissionGoalId]) (FK_Request_Goal)
        /// </summary>
        public virtual Mission_Goal Mission_Goal { get; set; } // FK_Request_Goal

        /// <summary>
        /// Parent Mission_Type pointed by [Request].([MissionTypeId]) (FK_Request_Type)
        /// </summary>
        public virtual Mission_Type Mission_Type { get; set; } // FK_Request_Type

        /// <summary>
        /// Parent WF_Request pointed by [Request].([WfRequestId]) (FK_Request_WfRequest)
        /// </summary>
        public virtual WF_Request WF_Request { get; set; } // FK_Request_WfRequest
        /// <summary>
        /// ماه پرداختی
        /// </summary>
        public int? PeymentDate { get; set; }
        /// <summary>
        /// پرداخت شده؟
        /// </summary>
        public bool? IsPaid { get; set; }
        /// <summary>
        /// تاریخ ارسال به mis
        /// </summary>
        public DateTime? PaidDate { get; set; }
        /// <summary>
        /// تاریخ شروع بدون پرداخت
        /// </summary>
        public DateTime? NotPayStartDate { get; set; }
        /// <summary>
        /// تاریخ پایان بدون پرداخت
        /// </summary>
        public DateTime? NotPayEndDate { get; set; }
        /// <summary>
        /// تعداد روزهای قابل پرداخت در حقوق-دستمزد
        /// </summary>
        public int? MissionPaymentDayCount { get; set; }
        public string ChangeRollCallMissionUser { get; set; } // ChangeRollCallMissionUser (length: 50)
        public DateTime? ChangeRollCallMissionDate { get; set; } // ChangeRollCallMissionDate
        /// <summary>
        /// تایید پرداخت بالاتر از سقف ماموریت 
        /// </summary>
        public bool? ConfirmMissionPaymentOverMaxDay { get; set; } //  
        /// <summary>
        ///کاربر تایید پرداخت بالاتر از سقف ماموریت 
        /// </summary>
        public string UserConfirmMissionPaymentOverMaxDay { get; set; } //  
        public string ChangeRollCallMissionAuthenticateUserName { get; set; } // ChangeRollCallMissionAuthenticateUserName (length: 50)

        public Mission_Request()
        {
            EmployeeAttendAbsenceItems = new List<EmployeeAttendAbsenceItem>();
        }
    }

}
// </auto-generated>
