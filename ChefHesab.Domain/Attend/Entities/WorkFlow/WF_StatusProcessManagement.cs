// <auto-generated>
// ReSharper disable All

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using KSC.Domain;
namespace Ksc.HR.Domain.Entities.WorkFlow
{
    // StatusProcessManagement
    public class WF_StatusProcessManagement : IEntityBase<int>
    {
        /// <summary>
        /// شناسه مدیریت وضعیت فرآیند
        /// </summary>
        public int Id { get; set; } // Id (Primary key)

        /// <summary>
        /// فرآیند
        /// </summary>
        public int ProcessId { get; set; } // ProcessId

        /// <summary>
        /// وضعیت
        /// </summary>
        public int StatusId { get; set; } // StatusId

        /// <summary>
        /// اولین وضعیت؟
        /// </summary>
        public bool IsFirstStatus { get; set; } // IsFirstStatus

        /// <summary>
        /// آخرین وضعیت؟
        /// </summary>
        public bool IsLastStatus { get; set; } // IsLastStatus

        /// <summary>
        /// نیاز به شرح؟
        /// </summary>
        public bool IsNeedDescription { get; set; } // IsNeedDescription

        /// <summary>
        /// مسیر اصلی ؟
        /// </summary>
        public bool IsMainDirection { get; set; } // IsMainDirection

        /// <summary>
        /// ارجاع؟
        /// </summary>
        public bool IsReference { get; set; } // IsReference

        /// <summary>
        /// وضعیت ورود؟
        /// </summary>
        public bool IsEntryStatus { get; set; } // IsEntryStatus

        /// <summary>
        /// مسیر ممکن؟
        /// </summary>
        public bool IsPossibleDirection { get; set; } // IsPossibleDirection

        /// <summary>
        /// ترتیب
        /// </summary>
        public int Order { get; set; } // Order

        /// <summary>
        /// نقش
        /// </summary>
        public int RoleId { get; set; } // RoleId

        /// <summary>
        /// چارت سازمانی؟
        /// </summary>
        public bool IsChartResponse { get; set; } // IsChartResponse

        /// <summary>
        /// فعال؟
        /// </summary>
        public bool IsActive { get; set; } // IsActive

        /// <summary>
        /// تاریخ ثبت
        /// </summary>
        public DateTime InsertDate { get; set; } // InsertDate

        /// <summary>
        /// کاربر ثبت
        /// </summary>
        public string InsertUser { get; set; } // InsertUser (length: 50)

        /// <summary>
        /// تاریخ ویرایش
        /// </summary>
        public DateTime? UpdateDate { get; set; } // UpdateDate

        /// <summary>
        /// کاربر ویرایش
        /// </summary>
        public string UpdateUser { get; set; } // UpdateUser (length: 50)

        /// <summary>
        /// صندوق دریافت؟
        /// </summary>
        public bool IsInbox { get; set; } // IsInbox

        /// <summary>
        /// صتدوق رسیدگی شده؟
        /// </summary>
        public bool IsNotInbox { get; set; } // IsNotInbox

        /// <summary>
        /// درخواست؟
        /// </summary>
        public bool IsRequest { get; set; } // IsRequest

        /// <summary>
        /// ETR?
        /// </summary>
        public bool IsEtr { get; set; } // IsEtr

        /// <summary>
        /// دسترسی به فایل های ضمیمه؟
        /// </summary>
        public bool IsAccessAttachFiles { get; set; } // IsAccessAttachFiles

        /// <summary>
        /// اولویت؟
        /// </summary>
        public int? PriorityId { get; set; } // PriorityId

        /// <summary>
        /// ارجاع جهت نمایش؟
        /// </summary>
        public bool IsReferToShow { get; set; } // IsReferToShow

        /// <summary>
        /// کارتابل عمومی است؟
        /// </summary>
        public bool IsPublicKartabl { get; set; } // IsPublicKartabl
        /// <summary>
        /// در کارتابل سیستم ها نمایش داده شود؟
        /// </summary>
        public bool ShowInISKartabl { get; set; }
        /// <summary>
        /// کارتابل پورتال شخصی است؟
        /// </summary>
        public bool IsPortalKartabl { get; set; }

        // Foreign keys

        /// <summary>
        /// Parent WF_Priority pointed by [StatusProcessManagement].([PriorityId]) (FK_WF_StatusProcessManagement_WF_Priority)
        /// </summary>
        public virtual WF_Priority WF_Priority { get; set; } // FK_WF_StatusProcessManagement_WF_Priority

        /// <summary>
        /// Parent WF_Process pointed by [StatusProcessManagement].([ProcessId]) (FK_WF_StatusProcessManagement_WF_Process)
        /// </summary>
        public virtual WF_Process WF_Process { get; set; } // FK_WF_StatusProcessManagement_WF_Process

        /// <summary>
        /// Parent WF_Role pointed by [StatusProcessManagement].([RoleId]) (FK_WF_StatusProcessManagement_WF_Role)
        /// </summary>
        public virtual WF_Role WF_Role { get; set; } // FK_WF_StatusProcessManagement_WF_Role

        /// <summary>
        /// Parent WF_Status pointed by [StatusProcessManagement].([StatusId]) (FK_WF_StatusProcessManagement_WF_Status)
        /// </summary>
        public virtual WF_Status WF_Status { get; set; } // FK_WF_StatusProcessManagement_WF_Status
    }
}
// </auto-generated>
