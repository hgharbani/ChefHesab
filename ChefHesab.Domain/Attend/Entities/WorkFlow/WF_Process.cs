// <auto-generated>
// ReSharper disable All

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using KSC.Domain;
namespace Ksc.HR.Domain.Entities.WorkFlow
{
    // Process
    public class WF_Process : IEntityBase<int>
    {
        /// <summary>
        /// شناسه فرآیند
        /// </summary>
        public int Id { get; set; } // Id (Primary key)

        /// <summary>
        /// عنوان
        /// </summary>
        public string Title { get; set; } // Title (length: 100)
        public int? ParentProcessId { get; set; } // ParentProcessId

        /// <summary>
        /// فعال؟
        /// </summary>
        public bool IsActive { get; set; } // IsActive

        /// <summary>
        /// تاریخ ثبت
        /// </summary>
        public DateTime InsertDate { get; set; } // InsertDate

        /// <summary>
        /// کاربر ثبت
        /// </summary>
        public string InsertUser { get; set; } // InsertUser (length: 50)

        /// <summary>
        /// تاریخ ویرایش
        /// </summary>
        public DateTime? UpdateDate { get; set; } // UpdateDate

        /// <summary>
        /// کاربر ویرایش
        /// </summary>
        public string UpdateUser { get; set; } // UpdateUser (length: 50)

        /// <summary>
        /// عنوان انگلیسی
        /// </summary>
        public string EnglishTitle { get; set; } // EnglishTitle (length: 100)

        // Reverse navigation

        /// <summary>
        /// Child WF_AccessManagements where [AccessManagement].[ProcessId] point to this entity (FK_WF_AccessManagement_WF_Process)
        /// </summary>
        public virtual ICollection<WF_AccessManagement> WF_AccessManagements { get; set; } // AccessManagement.FK_WF_AccessManagement_WF_Process

        /// <summary>
        /// Child WF_JobCategoryRanges where [JobCategoryRange].[WorkFlowProcessId] point to this entity (FK_JobCategoryRange_Process)
        /// </summary>
        public virtual ICollection<WF_JobCategoryRange> WF_JobCategoryRanges { get; set; } // JobCategoryRange.FK_JobCategoryRange_Process

        /// <summary>
        /// Child WF_Processes where [Process].[ParentProcessId] point to this entity (FK_Process_ParentProcess)
        /// </summary>
        public virtual ICollection<WF_Process> WF_Processes { get; set; } // Process.FK_Process_ParentProcess

        /// <summary>
        /// Child WF_Requests where [Request].[ProcessId] point to this entity (FK_WF_Request_WF_Process)
        /// </summary>
        public virtual ICollection<WF_Request> WF_Requests { get; set; } // Request.FK_WF_Request_WF_Process

        /// <summary>
        /// Child WF_StatusProcessManagements where [StatusProcessManagement].[ProcessId] point to this entity (FK_WF_StatusProcessManagement_WF_Process)
        /// </summary>
        public virtual ICollection<WF_StatusProcessManagement> WF_StatusProcessManagements { get; set; } // StatusProcessManagement.FK_WF_StatusProcessManagement_WF_Process
        /// <summary>
        /// Child WF_WorkFlowActions where [WorkFlowAction].[ProcessId] point to this entity (FK_WorkFlowAction_Process)
        /// </summary>
        public virtual ICollection<WF_WorkFlowAction> WF_WorkFlowActions { get; set; } // WorkFlowAction.FK_WorkFlowAction_Process

        /// <summary>
        /// Child WF_WorkFlowManagements where [WorkFlowManagement].[ProcessId] point to this entity (FK_WF_WorkFlowManagement_WF_Process)
        /// </summary>
        public virtual ICollection<WF_WorkFlowManagement> WF_WorkFlowManagements { get; set; } // WorkFlowManagement.FK_WF_WorkFlowManagement_WF_Process

        // Foreign keys

        /// <summary>
        /// Parent WF_Process pointed by [Process].([ParentProcessId]) (FK_Process_ParentProcess)
        /// </summary>
        public virtual WF_Process ParentProcess { get; set; } // FK_Process_ParentProcess

        public WF_Process()
        {
            WF_AccessManagements = new List<WF_AccessManagement>();
            WF_JobCategoryRanges = new List<WF_JobCategoryRange>();
            WF_Processes = new List<WF_Process>();
            WF_Requests = new List<WF_Request>();
            WF_StatusProcessManagements = new List<WF_StatusProcessManagement>();
            WF_WorkFlowActions = new List<WF_WorkFlowAction>();
            WF_WorkFlowManagements = new List<WF_WorkFlowManagement>();
        }
    }
}
// </auto-generated>
