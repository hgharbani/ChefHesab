// <auto-generated>
// ReSharper disable All

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using KSC.Domain;
namespace Ksc.HR.Domain.Entities.WorkFlow
{
    // WorkFlowManagement
    public class WF_WorkFlowManagement : IEntityBase<int>
    {
        /// <summary>
        /// شناسه مدیریت گردش درخواست
        /// </summary>
        public int Id { get; set; } // Id (Primary key)

        /// <summary>
        /// وضعیت جاری
        /// </summary>
        public int CurrentStatusId { get; set; } // CurrentStatusId

        /// <summary>
        /// وضعیت بعدی
        /// </summary>
        public int NextStatusId { get; set; } // NextStatusId

        /// <summary>
        /// دستی؟
        /// </summary>
        public bool IsManual { get; set; } // IsManual

        /// <summary>
        /// بازگشتی؟
        /// </summary>
        public bool IsRecursive { get; set; } // IsRecursive

        /// <summary>
        /// فعال؟
        /// </summary>
        public bool IsActive { get; set; } // IsActive

        /// <summary>
        /// تاریخ ثبت
        /// </summary>
        public DateTime InsertDate { get; set; } // InsertDate

        /// <summary>
        /// کاربر ثبت کننده
        /// </summary>
        public string InsertUser { get; set; } // InsertUser (length: 50)

        /// <summary>
        /// تاریخ ویرایش
        /// </summary>
        public DateTime? UpdateDate { get; set; } // UpdateDate

        /// <summary>
        /// کاربر ویرایش کننده
        /// </summary>
        public string UpdateUser { get; set; } // UpdateUser (length: 50)

        /// <summary>
        /// فرآیند
        /// </summary>
        public int ProcessId { get; set; } // ProcessId

        /// <summary>
        /// درخواست؟
        /// </summary>
        public bool IsRequest { get; set; } // IsRequest

        /// <summary>
        /// صندوق دریافت؟
        /// </summary>
        public bool IsInbox { get; set; } // IsInbox

        /// <summary>
        /// ارجاع به؟
        /// </summary>
        public bool IsReferTo { get; set; } // IsReferTo

        /// <summary>
        /// ارجاع به زیر فعالیت ؟
        /// </summary>
        public bool IsReferToSubActivity { get; set; } // IsReferToSubActivity

        /// <summary>
        /// اولویت
        /// </summary>
        public int? PriorityId { get; set; } // PriorityId
        /// <summary>
        /// ارجاع به چارت سازمانی؟
        /// </summary>
        public bool IsToChart { get; set; } // IsToChart   
        /// <summary>
        /// سازگار با وضعیت ارجاع به چارت سازمانی؟
        /// </summary>
        public bool CompatibleWithToChart { get; set; } // CompatibleWithToChart    
        /// <summary>
        /// ارسال به درخواست شونده؟
        /// </summary>
        public bool IsReferToRequestEmployeeId { get; set; } // IsReferToRequestEmployeeId   
        /// <summary>
        /// ارجاع به تیم؟
        /// </summary>
        public bool IsToTeam { get; set; } // IsToTeam  
        /// <summary>
        /// فانکشنی که برای بررسی کارتابل صدا زده میشود؟
        /// </summary>
        public string JavaScriptFunction { get; set; } // JavaScriptFunction
        /// <summary>
        /// تغییر وضعیت والد با تغییر وضعیت زیر درخواست
        /// </summary>
        public bool ChangeParentStatus { get; set; } // ChangeParentStatus

        /// <summary>
        /// تغییر وضعیت والد با در آخرین وضعیت بودن تمام زیر درخواستها
        /// </summary>
        public bool ChangeParentStatusAfterAllChildInLastStatus { get; set; } // ChangeParentStatusAfterAllChildInLastStatus

        /// <summary>
        /// تغییر وضعیت زیر درخواستهای اتمام نیافته با تغییر وضعیت والد
        /// </summary>
        public bool ChangeChildStatus { get; set; } // ChangeChildStatus

        /// <summary>
        /// ایجاد زیردرخواست بصورت دستی
        /// </summary>
        public bool GenerateChildIsManual { get; set; } // GenerateChildIsManual
        public int? WorkFlowActionId { get; set; } // GenerateChildIsManual
        //public bool IsReversible { get; set; } // IsReversible

        // Reverse navigation

        /// <summary>
        /// Child WF_WorkFlowStatusReasons where [WorkFlowStatusReason].[WorkFlowManagementId] point to this entity (FK_WF_WorkFlowStatusReason_WF_WorkFlowManagement)
        /// </summary>
        public virtual ICollection<WF_WorkFlowStatusReason> WF_WorkFlowStatusReasons { get; set; } // WorkFlowStatusReason.FK_WF_WorkFlowStatusReason_WF_WorkFlowManagement

        // Foreign keys

        /// <summary>
        /// Parent WF_Priority pointed by [WorkFlowManagement].([PriorityId]) (FK_WF_WorkFlowManagement_WF_Priority)
        /// </summary>
        public virtual WF_Priority WF_Priority { get; set; } // FK_WF_WorkFlowManagement_WF_Priority

        /// <summary>
        /// Parent WF_Process pointed by [WorkFlowManagement].([ProcessId]) (FK_WF_WorkFlowManagement_WF_Process)
        /// </summary>
        public virtual WF_Process WF_Process { get; set; } // FK_WF_WorkFlowManagement_WF_Process

        /// <summary>
        /// Parent WF_Status pointed by [WorkFlowManagement].([CurrentStatusId]) (FK_WorkFlowManagement_Status)
        /// </summary>
        public virtual WF_Status CurrentStatus { get; set; } // FK_WorkFlowManagement_Status

        /// <summary>
        /// Parent WF_Status pointed by [WorkFlowManagement].([NextStatusId]) (FK_WF_WorkFlowManagement_Status)
        /// </summary>
        public virtual WF_Status NextStatus { get; set; } // FK_WF_WorkFlowManagement_Status
        public virtual WF_WorkFlowAction WF_WorkFlowAction { get; set; } // FK_WorkFlowManagement_WorkFlowAction
        public WF_WorkFlowManagement()
        {
            WF_WorkFlowStatusReasons = new HashSet<WF_WorkFlowStatusReason>();
        }
    }

}
// </auto-generated>
