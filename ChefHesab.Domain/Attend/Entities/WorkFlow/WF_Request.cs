// <auto-generated>
// ReSharper disable All

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using KSC.Domain;
using Ksc.HR.Domain.Entities.Personal;
using Ksc.HR.Domain.Entities.Oncall;
using Ksc.HR.Domain.Entities.Transfer;
using Ksc.HR.Domain.Entities.Workshift;
using Ksc.HR.Domain.Entities.Dismissal;
using Ksc.HR.Domain.Entities.BusinessTrip;
using Ksc.HR.Domain.Entities.Rule;
using Ksc.HR.Domain.Entities.StandBy;

namespace Ksc.HR.Domain.Entities.WorkFlow
{
    // Request
    public class WF_Request : IEntityBase<int>
    {
        /// <summary>
        /// شناسه درخواست
        /// </summary>
        public int Id { get; set; } // Id (Primary key)
        public int? PriorityId { get; set; } // PriorityId
        public string Description { get; set; } // Description
        public DateTime? RequiredDate { get; set; } // RequiredDate
        public string CostCenter { get; set; } // CostCenter (length: 20)
        public string Phone { get; set; } // Phone (length: 20)
        public int ProcessId { get; set; } // ProcessId
        public int StatusId { get; set; } // StatusId
        public int? EmployeeId { get; set; } // EmployeeId

        /// <summary>
        /// کد پست مقام مافوق
        /// </summary>
        public string SuperiorJobPositionCode { get; set; } // SuperiorJobPositionCode (length: 13)

        /// <summary>
        /// کد پست مقام مافوق (فیلد موقت)
        /// </summary>
        public string SuperiorJobPositionCodeTemp { get; set; } // SuperiorJobPositionCodeTemp (length: 13)
        public int? RefereToTeamWorkId { get; set; } // RefereToTeamWorkId
        public int? ParentRequestId { get; set; } // ParentRequestId
        public bool IsActive { get; set; } // IsActive
        public DateTime InsertDate { get; set; } // InsertDate
        public string InsertUser { get; set; } // InsertUser (length: 50)
        public DateTime? UpdateDate { get; set; } // UpdateDate
        public string UpdateUser { get; set; } // UpdateUser (length: 50)
        public string RequestUser { get; set; } // RequestUser (length: 50)
        public string ReferTo { get; set; } // ReferTo (length: 50)
        public string DeleteUser { get; set; } // DeleteUser (length: 50)
        public DateTime? DeleteDate { get; set; } // DeleteDate
        public string RequestTypeTitle { get; set; } // RequestTypeTitle (length: 500)
        /// <summary>
        /// ارسال به درخواست شونده 
        /// </summary>
        public bool IsReferToRequestEmployeeId { get; set; } // IsReferToRequestEmployeeId
        public string InsertAuthenticateUserName { get; set; } // InsertAuthenticateUserName (length: 50)
        public string UpdateAuthenticateUserName { get; set; } // UpdateAuthenticateUserName (length: 50)
        public int? WorkFlowActionId { get; set; } // WorkFlowActionId
        public int? LastStatusId { get; set; } // LastStatusId
        public byte[] RowVersion { get; set; }

        /// <summary>
        /// کد پست مقام مافوق
        /// </summary>
        public string LastSuperiorJobPositionCode { get; set; } // LastSuperiorJobPositionCode (length: 13)
        public string LastSuperiorJobPositionCodeTemp { get; set; } // LastSuperiorJobPositionCodeTemp (length: 13)
        // Reverse navigation

        /// <summary>
        /// Child Dismissal_Requests where [Request].[WFRequestId] point to this entity (FK_Request_Request)
        /// </summary>
        public virtual ICollection<Dismissal_Request> Dismissal_Requests { get; set; } // Request.FK_Request_Request

        /// <summary>
        /// Child Mission_Requests where [Request].[WFRequestId] point to this entity (FK_Request_WfRequest)
        /// </summary>
        public virtual ICollection<Mission_Request> Mission_Requests { get; set; } // Request.FK_Request_WfRequest

        /// <summary>
        /// Child OnCall_Requests where [Request].[RequestId] point to this entity (FK_OnCallRequest_WF_Request)
        /// </summary>
        public virtual ICollection<OnCall_Request> OnCall_Requests { get; set; } // Request.FK_OnCallRequest_WF_Request

        /// <summary>
        /// Child Transfer_Requests where [Request].[WFRequestId] point to this entity (FK_Request_Request)
        /// </summary>
        public virtual ICollection<Transfer_Request> Transfer_Requests { get; set; } // Request.FK_Request_Request

        /// <summary>
        /// Child WF_Requests where [Request].[ParentRequestId] point to this entity (FK_Request_ParentRequest)
        /// </summary>
        public virtual ICollection<WF_Request> WF_Requests { get; set; } // Request.FK_Request_ParentRequest

        /// <summary>
        /// Child WF_RequestHistories where [RequestHistory].[RequestId] point to this entity (FK_WF_RequestHistory_WF_Request)
        /// </summary>
        public virtual ICollection<WF_RequestHistory> WF_RequestHistories { get; set; } // RequestHistory.FK_WF_RequestHistory_WF_Request
        public virtual ICollection<EmployeePromotion> EmployeePromotions { get; set; } // 
        /// <summary>
        /// Child StandbyHeaders where [StandbyHeader].[WfRequestId] point to this entity (FK_StandbyHeader_Request)
        /// </summary>
        public virtual ICollection<StandbyHeader> StandbyHeaders { get; set; } // StandbyHeader.FK_StandbyHeader_Request
        // Foreign keys

        /// <summary>
        /// Parent Employee pointed by [Request].([EmployeeId]) (FK_WF_Request_Employee)
        /// </summary>
        public virtual Employee Employee { get; set; } // FK_WF_Request_Employee

        /// <summary>
        /// Parent TeamWork pointed by [Request].([RefereToTeamWorkId]) (FK_Request_TeamWork)
        /// </summary>
        public virtual TeamWork TeamWork { get; set; } // FK_Request_TeamWork

        /// <summary>
        /// Parent WF_Priority pointed by [Request].([PriorityId]) (FK_WF_Request_WF_Priority)
        /// </summary>
        public virtual WF_Priority WF_Priority { get; set; } // FK_WF_Request_WF_Priority

        /// <summary>
        /// Parent WF_Process pointed by [Request].([ProcessId]) (FK_WF_Request_WF_Process)
        /// </summary>
        public virtual WF_Process WF_Process { get; set; } // FK_WF_Request_WF_Process

        /// <summary>
        /// Parent WF_Request pointed by [Request].([ParentRequestId]) (FK_Request_ParentRequest)
        /// </summary>
        public virtual WF_Request ParentRequest { get; set; } // FK_Request_ParentRequest
        /// <summary>
        /// Parent WF_Status pointed by [Request].([LastStatusId]) (FK_Request_LastStatus)
        /// </summary>
        public virtual WF_Status LastStatus { get; set; } // FK_Request_LastStatus
        /// <summary>
        /// Parent WF_Status pointed by [Request].([StatusId]) (FK_Request_Status)
        /// </summary>
        public virtual WF_Status WF_Status { get; set; } // FK_Request_Status
        /// <summary>
        /// Parent WF_WorkFlowAction pointed by [Request].([WorkFlowActionId]) (FK_Request_WorkFlowAction)
        /// </summary>
        public virtual WF_WorkFlowAction WF_WorkFlowAction { get; set; } // FK_Request_WorkFlowAction

        public virtual ICollection<StandbyReplacementRequests> StandbyReplacementRequests { get; set; }

        /// <summary>
        /// Child Relocations where [Relocation].[WFRequestId] point to this entity (FK_Relocation_Request)
        /// </summary>
        public virtual ICollection<Relocation> Relocations { get; set; } // Relocation.FK_Relocation_Request


        public WF_Request()
        {
            WF_Requests = new List<WF_Request>();
            OnCall_Requests = new List<OnCall_Request>();
            Dismissal_Requests = new List<Dismissal_Request>();
            Mission_Requests = new List<Mission_Request>();
            Transfer_Requests = new List<Transfer_Request>();
            WF_RequestHistories = new List<WF_RequestHistory>();
            EmployeePromotions = new List<EmployeePromotion>();
            StandbyHeaders = new List<StandbyHeader>();
            StandbyReplacementRequests = new List<StandbyReplacementRequests>();
            Relocations = new List<Relocation>();
        }
    }
}
// </auto-generated>
