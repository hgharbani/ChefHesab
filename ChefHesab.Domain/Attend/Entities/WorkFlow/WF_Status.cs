// <auto-generated>
// ReSharper disable All

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using KSC.Domain;
namespace Ksc.HR.Domain.Entities.WorkFlow
{
    // Status
    public class WF_Status : IEntityBase<int>
    {
        /// <summary>
        /// شناسه وضعیت
        /// </summary>
        public int Id { get; set; } // Id (Primary key)

        /// <summary>
        /// عنوان
        /// </summary>
        public string Title { get; set; } // Title (length: 100)

        /// <summary>
        /// فعال؟
        /// </summary>
        public bool IsActive { get; set; } // IsActive

        /// <summary>
        /// تاریخ ثبت
        /// </summary>
        public DateTime? InsertDate { get; set; } // InsertDate

        /// <summary>
        /// کاربر ثبت کننده
        /// </summary>
        public string InsertUser { get; set; } // InsertUser (length: 50)

        /// <summary>
        /// تاریخ ویرایش
        /// </summary>
        public DateTime? UpdateDate { get; set; } // UpdateDate

        /// <summary>
        /// کاربر ویرایش کننده
        /// </summary>
        public string UpdateUser { get; set; } // UpdateUser (length: 50)

        /// <summary>
        /// ترتیب ستون
        /// </summary>
        public byte SortColumn { get; set; } // SortColumn
        /// <summary>
        /// وضعیت مربوط به چارت شغلی است؟
        /// </summary>
        public bool IsChartStatus { get; set; } // IsChartStatus
        /// <summary>
        /// فعالیت
        /// </summary>
        public string ActionName { get; set; }

        // Reverse navigation
        /// <summary>
        /// Child WF_Requests where [Request].[LastStatusId] point to this entity (FK_Request_LastStatus)
        /// </summary>
        public virtual ICollection<WF_Request> WF_Requests_LastStatusId { get; set; } // Request.FK_Request_LastStatus
        /// <summary>
        /// Child WF_Requests where [Request].[StatusId] point to this entity (FK_Request_Status)
        /// </summary>
        public virtual ICollection<WF_Request> WF_Requests { get; set; } // Request.FK_Request_Status

        /// <summary>
        /// Child WF_RequestHistories where [RequestHistory].[StatusId] point to this entity (FK_WF_RequestHistory_WF_Status)
        /// </summary>
        public virtual ICollection<WF_RequestHistory> WF_RequestHistories { get; set; } // RequestHistory.FK_WF_RequestHistory_WF_Status

        /// <summary>
        /// Child WF_StatusProcessManagements where [StatusProcessManagement].[StatusId] point to this entity (FK_WF_StatusProcessManagement_WF_Status)
        /// </summary>
        public virtual ICollection<WF_StatusProcessManagement> WF_StatusProcessManagements { get; set; } // StatusProcessManagement.FK_WF_StatusProcessManagement_WF_Status

        /// <summary>
        /// Child WF_StatusReasons where [StatusReason].[StatusId] point to this entity (FK_WF_StatusReason_WF_Status)
        /// </summary>
        public virtual ICollection<WF_StatusReason> WF_StatusReasons { get; set; } // StatusReason.FK_WF_StatusReason_WF_Status

        /// <summary>
        /// Child WF_WorkFlowManagements where [WorkFlowManagement].[CurrentStatusId] point to this entity (FK_WorkFlowManagement_Status)
        /// </summary>
        public virtual ICollection<WF_WorkFlowManagement> WF_WorkFlowManagements_CurrentStatusId { get; set; } // WorkFlowManagement.FK_WorkFlowManagement_Status

        /// <summary>
        /// Child WF_WorkFlowManagements where [WorkFlowManagement].[NextStatusId] point to this entity (FK_WF_WorkFlowManagement_Status)
        /// </summary>
        public virtual ICollection<WF_WorkFlowManagement> WF_WorkFlowManagements_NextStatusId { get; set; } // WorkFlowManagement.FK_WF_WorkFlowManagement_Status

        public WF_Status()
        {
            WF_Requests = new HashSet<WF_Request>();
            WF_RequestHistories = new HashSet<WF_RequestHistory>();
            WF_StatusProcessManagements = new HashSet<WF_StatusProcessManagement>();
            WF_StatusReasons = new HashSet<WF_StatusReason>();
            WF_WorkFlowManagements_CurrentStatusId = new HashSet<WF_WorkFlowManagement>();
            WF_WorkFlowManagements_NextStatusId = new HashSet<WF_WorkFlowManagement>();
        }
    }

}
// </auto-generated>
