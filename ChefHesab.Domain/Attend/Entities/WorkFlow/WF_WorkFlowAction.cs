// <auto-generated>
// ReSharper disable All

using KSC.Domain;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Ksc.HR.Domain.Entities.WorkFlow
{
    // WorkFlowAction
    public class WF_WorkFlowAction : IEntityBase<int>
    {
        public int Id { get; set; } // Id (Primary key)

        /// <summary>
        /// عنوان
        /// </summary>
        public string Title { get; set; } // Title (length: 100)
        /// <summary>
        /// فرایند
        /// </summary>
        public int ProcessId { get; set; } // ProcessId
        /// <summary>
        /// کاربر ثبت کننده
        /// </summary>
        public string Description { get; set; } // InsertUser (length: 500)

        /// <summary>
        /// فعال؟
        /// </summary>
        public bool IsActive { get; set; } // IsActive

        /// <summary>
        /// تاریخ ثبت
        /// </summary>
        public DateTime? InsertDate { get; set; } // InsertDate

        /// <summary>
        /// کاربر ثبت کننده
        /// </summary>
        public string InsertUser { get; set; } // InsertUser (length: 50)

        /// <summary>
        /// تاریخ ویرایش
        /// </summary>
        public DateTime? UpdateDate { get; set; } // UpdateDate

        /// <summary>
        /// کاربر ویرایش کننده
        /// </summary>
        public string UpdateUser { get; set; } // UpdateUser (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child WF_Requests where [Request].[WorkFlowActionId] point to this entity (FK_Request_WorkFlowAction)
        /// </summary>
        public virtual ICollection<WF_Request> WF_Requests { get; set; } // Request.FK_Request_WorkFlowAction

        /// <summary>
        /// Child WF_RequestHistories where [RequestHistory].[WorkFlowActionId] point to this entity (FK_RequestHistory_WorkFlowAction)
        /// </summary>
        public virtual ICollection<WF_RequestHistory> WF_RequestHistories { get; set; } // RequestHistory.FK_RequestHistory_WorkFlowAction

        /// <summary>
        /// Child WF_WorkFlowManagements where [WorkFlowManagement].[WorkFlowActionId] point to this entity (FK_WorkFlowManagement_WorkFlowAction)
        /// </summary>
        public virtual ICollection<WF_WorkFlowManagement> WF_WorkFlowManagements { get; set; } // WorkFlowManagement.FK_WorkFlowManagement_WorkFlowAction
        // Foreign keys

        /// <summary>
        /// Parent WF_Process pointed by [WorkFlowAction].([ProcessId]) (FK_WorkFlowAction_Process)
        /// </summary>
        public virtual WF_Process WF_Process { get; set; } // FK_WorkFlowAction_Process
        public WF_WorkFlowAction()
        {
            WF_Requests = new List<WF_Request>();
            WF_RequestHistories = new List<WF_RequestHistory>();
            WF_WorkFlowManagements = new List<WF_WorkFlowManagement>();
        }
    }

}
// </auto-generated>
