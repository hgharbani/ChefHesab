// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Chart;
using Ksc.HR.Domain.Entities.Defines;
using KSC.Domain;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Ksc.HR.Domain.Entities.Reward

{
    // RewardUnitType
    public class RewardUnitType : IEntityBase<int>
    {
        public int Id { get; set; } // Id (Primary key)
        public string Title { get; set; } // Title (length: 20)
        public int CountingUnitId { get; set; } // CountingUnitId

        /// <summary>
        /// واحد های مورد نیاز برای پاداش تولید/ویژه
        /// </summary>
        public int RewardCategoryId { get; set; } // RewardCategoryId

        /// <summary>
        /// مبنا محاسبات پاداش
        /// </summary>
        public bool IsBaseData { get; set; } // IsBaseData
        public bool IsActive { get; set; } // IsActive
        public string InsertUser { get; set; } // InsertUser (length: 50)
        public DateTime? InsertDate { get; set; } // InsertDate
        public string UpdateUser { get; set; } // UpdateUser (length: 50)
        public DateTime? UpdateDate { get; set; } // UpdateDate

        // Reverse navigation

        /// <summary>
        /// Child Reward_RewardBaseDetails where [RewardBaseDetail].[RewardUnitTypeId] point to this entity (FK_RewardBaseDetail_RewardUnitType)
        /// </summary>
        public virtual ICollection<RewardBaseDetail> RewardBaseDetails { get; set; } // RewardBaseDetail.FK_RewardBaseDetail_RewardUnitType

        /// <summary>
        /// Child Reward_RewardBaseSpecificOfUnitHeaders where [RewardBaseSpecificOfUnitHeader].[RewardUnitTypeId] point to this entity (FK_RewardBaseSpecificOfUnitHeader_RewardUnitType)
        /// </summary>
        public virtual ICollection<RewardBaseSpecificOfUnitHeader> RewardBaseSpecificOfUnitHeaders { get; set; } // RewardBaseSpecificOfUnitHeader.FK_RewardBaseSpecificOfUnitHeader_RewardUnitType

        /// <summary>
        /// Child Reward_RewardInDailyProductionSales where [RewardInDailyProductionSale].[RewardUnitTypeId] point to this entity (FK_RewardInDailyProductionSale_RewardUnitType)
        /// </summary>
        public virtual ICollection<RewardInDailyProductionSale> RewardInDailyProductionSales { get; set; } // RewardInDailyProductionSale.FK_RewardInDailyProductionSale_RewardUnitType

        // Foreign keys

        /// <summary>
        /// Parent CountingUnit pointed by [RewardUnitType].([CountingUnitId]) (FK_RewardUnitType_CountingUnit)
        /// </summary>
        public virtual CountingUnit CountingUnit { get; set; } // FK_RewardUnitType_CountingUnit

        /// <summary>
        /// Parent Reward_RewardCategory pointed by [RewardUnitType].([RewardCategoryId]) (FK_RewardUnitType_RewardCategory)
        /// </summary>
        public virtual RewardCategory RewardCategory { get; set; } // FK_RewardUnitType_RewardCategory

        /// <summary>
        /// Child Reward_RewardOutDetails where [RewardOutDetail].[RewardUnitTypeId] point to this entity (FK_RewardOutDetail_RewardUnitType)
        /// </summary>
        public virtual ICollection<RewardOutDetail> RewardOutDetails { get; set; } // RewardOutDetail.FK_RewardOutDetail_RewardUnitType


        /// <summary>
        /// Child Chart_RewardSpecifics where [RewardSpecific].[RewardUnitTypeId] point to this entity (FK_RewardSpecific_RewardUnitType)
        /// </summary>
        public virtual ICollection<Chart_RewardSpecific> RewardSpecifics { get; set; } // RewardSpecific.FK_RewardSpecific_RewardUnitType

        public RewardUnitType()
        {
            RewardBaseDetails = new List<RewardBaseDetail>();
            RewardBaseSpecificOfUnitHeaders = new List<RewardBaseSpecificOfUnitHeader>();
            RewardInDailyProductionSales = new List<RewardInDailyProductionSale>();
            RewardOutDetails = new List<RewardOutDetail>();
            RewardSpecifics = new List<Chart_RewardSpecific>();

        }
    }

}
// </auto-generated>
