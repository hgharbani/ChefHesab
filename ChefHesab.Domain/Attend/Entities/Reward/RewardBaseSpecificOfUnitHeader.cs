// <auto-generated>
// ReSharper disable All

using KSC.Domain;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Ksc.HR.Domain.Entities.Reward

{
    // RewardBaseSpecificOfUnitHeader
    /// <summary>
    /// جدول مبنای پاداش تولید به ازای واحد
    /// </summary>
    public class RewardBaseSpecificOfUnitHeader : IEntityBase<int>
    {
        public int Id { get; set; } // Id (Primary key)

        public int? YearMonth { get; set; }

        public bool IsMonthly { get; set; } // IsMonthly

        /// <summary>
        /// ضریب پایه
        /// </summary>
        public double BasePercent { get; set; } // BasePercent

        /// <summary>
        /// مبلغ پایه ظرفیت
        /// </summary>
        public long? BaseAmountCapacity { get; set; } // BaseAmountCapacity

        /// <summary>
        /// ظرفیت تناژ پایه
        /// </summary>
        public decimal? WeightBaseCapacity { get; set; } // WeightBaseCapacity

        /// <summary>
        /// مبلغ پایه برنامه
        /// </summary>
        public long? BaseAmountPlan { get; set; } // BaseAmountPlan

        /// <summary>
        /// ظرفیت تناژ پایه
        /// </summary>
        public decimal? WeightBasePlan { get; set; } // WeightBasePlan

        /// <summary>
        /// ظرفیت تناژ پایه
        /// </summary>
        public decimal? WeightBaseActual { get; set; } // WeightBaseActual

        /// <summary>
        /// واحد تولیدی
        /// </summary>
        public int RewardUnitTypeId { get; set; } // RewardUnitTypeId
        public int RewardBaseSpecificId { get; set; } // RewardBaseSpecificId
                                                      //public bool IsActive { get; set; } // IsActive
        public string InsertUser { get; set; } // InsertUser (length: 50)
        public DateTime? InsertDate { get; set; } // InsertDate
        // Reverse navigation

        /// <summary>
        /// Child Reward_RewardBaseSpecificOfUnitDetails where [RewardBaseSpecificOfUnitDetail].[RewardBaseSpecificUnitHeaderId] point to this entity (FK_RewardBaseSpecificOfUnitDetail_RewardBaseSpecificOfUnitHeader)
        /// </summary>
        public virtual ICollection<RewardBaseSpecificOfUnitDetail> RewardBaseSpecificOfUnitDetails { get; set; } // RewardBaseSpecificOfUnitDetail.FK_RewardBaseSpecificOfUnitDetail_RewardBaseSpecificOfUnitHeader

        // Foreign keys

        /// <summary>
        /// Parent Reward_RewardBaseSpecific pointed by [RewardBaseSpecificOfUnitHeader].([RewardBaseSpecificId]) (FK_RewardBaseSpecificOfUnitHeader_RewardBaseSpecific)
        /// </summary>
        public virtual RewardBaseSpecific RewardBaseSpecific { get; set; } // FK_RewardBaseSpecificOfUnitHeader_RewardBaseSpecific

        /// <summary>
        /// Parent Reward_RewardUnitType pointed by [RewardBaseSpecificOfUnitHeader].([RewardUnitTypeId]) (FK_RewardBaseSpecificOfUnitHeader_RewardUnitType)
        /// </summary>
        public virtual RewardUnitType RewardUnitType { get; set; } // FK_RewardBaseSpecificOfUnitHeader_RewardUnitType

        public RewardBaseSpecificOfUnitHeader()
        {
            RewardBaseSpecificOfUnitDetails = new List<RewardBaseSpecificOfUnitDetail>();
        }
    }

}
// </auto-generated>
