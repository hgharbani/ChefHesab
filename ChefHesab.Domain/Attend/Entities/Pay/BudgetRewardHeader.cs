// <auto-generated>
// ReSharper disable All

using KSC.Domain;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Ksc.HR.Domain.Entities.Pay
{
    // BudgetRewardHeader
    public class BudgetRewardHeader : IEntityBase<int>
    {
        /// <summary>
        /// شناسه
        /// </summary>
        public int Id { get; set; } // Id (Primary key)

        /// <summary>
        /// شروع اعتبار
        /// </summary>
        public int StartYearMonth { get; set; } // StartYearMonth

        /// <summary>
        /// پایان اعتبار
        /// </summary>
        public int EndYearMonth { get; set; } // EndYearMonth

        /// <summary>
        /// حداقل مبلغ پاداش پرسنل
        /// </summary>
        public long MinRewardPerPerson { get; set; } // MinRewardPerPerson

        /// <summary>
        /// حداکثر مبلغ پاداش پرسنل
        /// </summary>
        public long MaxRewardPerPerson { get; set; } // MaxRewardPerPerson

        /// <summary>
        /// شناسه‌ی نوع بودجه
        /// </summary>
        public int BudgetRewardTypeId { get; set; } // BudgetRewardTypeId

        /// <summary>
        /// مورد تایید است؟
        /// </summary>
        public bool IsConfirmed { get; set; } // IsConfirmed

        /// <summary>
        /// فعال است؟
        /// </summary>
        public bool IsActive { get; set; } // IsActive

        /// <summary>
        /// تاریخ ثبت
        /// </summary>
        public DateTime InsertDate { get; set; } // InsertDate

        /// <summary>
        /// نام کاربری ثبت کننده
        /// </summary>
        public string InsertUser { get; set; } // InsertUser (length: 50)

        /// <summary>
        /// تاریخ برزورسانی
        /// </summary>
        public DateTime? UpdateDate { get; set; } // UpdateDate

        /// <summary>
        /// نام کاربری بروزرسانی کننده
        /// </summary>
        public string UpdateUser { get; set; } // UpdateUser (length: 50)

        /// <summary>
        /// دامنه شرکت
        /// </summary>
        public string DomainName { get; set; } // DomainName (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child Pay_BudgetRewardDetails where [BudgetRewardDetail].[BudgetRewardHeaderId] point to this entity (FK_BudgetRewardDetail_BudgetRewardHeader)
        /// </summary>
        public virtual ICollection<BudgetRewardDetail> BudgetRewardDetails { get; set; } // BudgetRewardDetail.FK_BudgetRewardDetail_BudgetRewardHeader

        // Foreign keys

        /// <summary>
        /// Parent Pay_BudgetRewardType pointed by [BudgetRewardHeader].([BudgetRewardTypeId]) (FK_BudgetRewardHeader_BudgetRewardType)
        /// </summary>
        public virtual BudgetRewardType BudgetRewardType { get; set; } // FK_BudgetRewardHeader_BudgetRewardType

        public BudgetRewardHeader()
        {
            BudgetRewardDetails = new List<BudgetRewardDetail>();
        }
    }

}
// </auto-generated>
