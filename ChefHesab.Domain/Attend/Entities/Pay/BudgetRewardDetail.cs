// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Chart;
using KSC.Domain;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Ksc.HR.Domain.Entities.Pay
{
    // BudgetRewardDetail
    public class BudgetRewardDetail : IEntityBase<int>
    {
        /// <summary>
        /// شناسه
        /// </summary>
        public int Id { get; set; } // Id (Primary key)

        /// <summary>
        /// شناسه هدر جدول بودجه
        /// </summary>
        public int BudgetRewardHeaderId { get; set; } // BudgetRewardHeaderId

        /// <summary>
        /// شناسه پست سازمانی (کد شغل)
        /// </summary>
        public int JobPositionId { get; set; } // JobPositionId

        /// <summary>
        /// مبلغ بودجه
        /// </summary>
        public long BudgetAmount { get; set; } // BudgetAmount

        /// <summary>
        /// مبلغ بودجه‌ی پیمانکاران
        /// </summary>
        public long ContractBudgetAmount { get; set; } // ContractBudgetAmount

        /// <summary>
        /// بودجه استفاده شده
        /// </summary>
        public long SpentBudget { get; set; } // SpentBudget


        /// <summary>
        /// باقی مانده بودجه
        /// </summary>
        public long RemainingBudgetAmount { get; set; } // RemainingBudgetAmount

        /// <summary>
        /// آیا نیاز به تایید معاونت دارد؟
        /// </summary>
        public bool IsNeededAssistance { get; set; } // IsNeededAssistance

        /// <summary>
        /// فعال است؟
        /// </summary>
        public bool IsActive { get; set; } // IsActive

        /// <summary>
        /// تاریخ ثبت
        /// </summary>
        public DateTime InsertDate { get; set; } // InsertDate

        /// <summary>
        /// نام کاربری ثبت کننده
        /// </summary>
        public string InsertUser { get; set; } // InsertUser (length: 50)

        /// <summary>
        /// تاریخ بروزرسانی
        /// </summary>
        public DateTime? UpdateDate { get; set; } // UpdateDate

        /// <summary>
        /// نام کاربری بروزرسانی کننده
        /// </summary>
        public string UpdateUser { get; set; } // UpdateUser (length: 50)

        /// <summary>
        /// دامنه شرکت
        /// </summary>
        public string DomainName { get; set; } // DomainName (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child Pay_BudgetRewardEmployees where [BudgetRewardEmployee].[BudgetRewardDetailId] point to this entity (FK_BudgetRewardEmployee_BudgetRewardDetail)
        /// </summary>
        public virtual ICollection<BudgetRewardEmployee> BudgetRewardEmployees { get; set; } // BudgetRewardEmployee.FK_BudgetRewardEmployee_BudgetRewardDetail

        // Foreign keys

        /// <summary>
        /// Parent Chart_JobPosition pointed by [BudgetRewardDetail].([JobPositionId]) (FK_BudgetRewardDetail_JobPosition)
        /// </summary>
        public virtual Chart_JobPosition Chart_JobPosition { get; set; } // FK_BudgetRewardDetail_JobPosition

        /// <summary>
        /// Parent Pay_BudgetRewardHeader pointed by [BudgetRewardDetail].([BudgetRewardHeaderId]) (FK_BudgetRewardDetail_BudgetRewardHeader)
        /// </summary>
        public virtual BudgetRewardHeader BudgetRewardHeader { get; set; } // FK_BudgetRewardDetail_BudgetRewardHeader

        public BudgetRewardDetail()
        {
           BudgetRewardEmployees = new List<BudgetRewardEmployee>();
        }
    }

}
// </auto-generated>
