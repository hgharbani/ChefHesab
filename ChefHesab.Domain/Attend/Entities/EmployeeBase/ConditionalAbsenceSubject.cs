// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.EmployeeBase;
using KSC.Domain;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Ksc.HR.Domain.Entities.Emp
{
    // ConditionalAbsenceSubject
    public class ConditionalAbsenceSubject : IEntityBase<int>
    {
        public int Id { get; set; } // Id (Primary key)

        /// <summary>
        /// عنوان
        /// </summary>
        public string Title { get; set; } // Title (length: 500)

        /// <summary>
        /// تاریخ درج
        /// </summary>
        public DateTime? InsertDate { get; set; } // InsertDate

        /// <summary>
        /// کاربر درج کننده
        /// </summary>
        public string InsertUser { get; set; } // InsertUser (length: 50)

        /// <summary>
        /// تاریخ ویرایش
        /// </summary>
        public DateTime? UpdateDate { get; set; } // UpdateDate

        /// <summary>
        /// کاربر ویرایش کننده
        /// </summary>
        public string UpdateUser { get; set; } // UpdateUser (length: 50)

        /// <summary>
        /// فعال؟
        /// </summary>
        public bool IsActive { get; set; } // IsActive
        public int? MaximumDurationPerYear { get; set; } // MaximumDurationPerYear

        /// <summary>
        /// اضافه کار قهری دارد؟
        /// </summary>
       // public bool HasForcedOvertime { get; set; } // HasForcedOvertime
        /// <summary>
        /// مدت زمان فرجه
        /// </summary>
        public string HourlyAbsenceToleranceTime { get; set; } // HourlyAbsenceToleranceTime (length: 5)

        /// <summary>
        /// حداقل سن کودک
        /// </summary>
        public int? MinimumDependencyYearsOld { get; set; } // MinimumDependencyYearsOld

        /// <summary>
        /// حداکثر سن کودک
        /// </summary>
        public int? MaximumDependencyYearsOld { get; set; } // MaximumDependencyYearsOld

        // Reverse navigation

        /// <summary>
        /// Child EmployeeBase_ConditionalAbsenceSubjectTypes where [ConditionalAbsenceSubjectType].[ConditionalAbsenceSubjectId] point to this entity (FK_ConditionalAbsenceSubjectType_ConditionalAbsenceSubject)
        /// </summary>
        public virtual ICollection<ConditionalAbsenceSubjectType> ConditionalAbsenceSubjectTypes { get; set; } // ConditionalAbsenceSubjectType.FK_ConditionalAbsenceSubjectType_ConditionalAbsenceSubject

        public ConditionalAbsenceSubject()
        {
            ConditionalAbsenceSubjectTypes = new List<ConditionalAbsenceSubjectType>();
        }
    }

}
// </auto-generated>
