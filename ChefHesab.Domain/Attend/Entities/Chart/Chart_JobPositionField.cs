// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Rule;
using Ksc.HR.Domain.Entities.Transfer;
using KSC.Domain;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Ksc.HR.Domain.Entities.Chart
{
    // JobPositionField
    public class Chart_JobPositionField :IEntityBase<int>
    {
        public int Id { get; set; }
        public int JobPositionId { get; set; } // JobPositionId (Primary key)
        public int StudyFieldId { get; set; } // StudyFieldId (Primary key)
        public DateTime? InsertDate { get; set; } // InsertDate
        public string InsertUser { get; set; } // InsertUser (length: 50)
        public DateTime? UpdateDate { get; set; } // UpdateDate
        public string UpdateUser { get; set; } // UpdateUser (length: 50)
        public bool? IsActive { get; set; } // IsActive

        // Foreign keys

        /// <summary>
        /// Parent Chart_JobPosition pointed by [JobPositionField].([JobPositionId]) (FK_JobPositionField_JobPosition)
        /// </summary>
        public virtual Chart_JobPosition Chart_JobPosition { get; set; } // FK_JobPositionField_JobPosition
        //public virtual Chart_JobPosition Chart_JobPosition { get; set; } // FK_JobPositionField_JobPosition

        /// <summary>
        /// Parent StudyField pointed by [JobPositionField].([StudyFieldId]) (FK_JobPositionField_StudyField)
        /// </summary>
        public virtual StudyField StudyField { get; set; } // FK_JobPositionField_StudyField
                                                           //public virtual ICollection<EmployeePromotion> EmployeePromotions { get; set; } // 

        /// <summary>
        /// Child Relocations where [Relocation].[JobPositionFieldId] point to this entity (FK_Relocation_JobPositionField)
        /// </summary>
        public virtual ICollection<Relocation> Relocations { get; set; } // Relocation.FK_Relocation_JobPositionField


        public Chart_JobPositionField()
        {
            //EmployeePromotions=new List<EmployeePromotion>();   
            Relocations = new List<Relocation>();
        }

    }

}
// </auto-generated>
