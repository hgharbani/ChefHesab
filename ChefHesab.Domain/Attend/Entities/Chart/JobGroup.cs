// <auto-generated>
// ReSharper disable All

using Ksc.Hr.Domain.Entities;
using Ksc.HR.Domain.Entities.Personal;
using Ksc.HR.Domain.Entities.Rule;
using KSC.Domain;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Ksc.HR.Domain.Entities.Chart
{
    // JobGroup
    /// <summary>
    /// گروه شغلی
    /// </summary>
    public class JobGroup:IEntityBase<int>
    {
        public int Id { get; set; } // Id (Primary key)

        /// <summary>
        /// کد
        /// </summary>
        public int? Code { get; set; } // Code

        /// <summary>
        /// سال
        /// </summary>
        public int? Year { get; set; } // Year

        /// <summary>
        /// امتیاز
        /// </summary>
        public int? Score { get; set; } // Score

        /// <summary>
        /// فعال؟
        /// </summary>
        public bool? IsActive { get; set; } // IsActive

        /// <summary>
        /// تاریخ درج
        /// </summary>
        public DateTime? InsertDate { get; set; } // InsertDate

        /// <summary>
        /// کاربر درج کننده
        /// </summary>
        public string InsertUser { get; set; } // InsertUser (length: 50)

        /// <summary>
        /// تاریخ ویرایش
        /// </summary>
        public DateTime? UpdateDate { get; set; } // UpdateDate

        /// <summary>
        /// کاربر ویرایش کننده
        /// </summary>
        public string UpdateUser { get; set; } // UpdateUser (length: 50)
        /// <summary>
        /// ضریب افزاینده
        /// </summary>
        public double? VariableCoefficient { get; set; } // VariableCoefficient

        /// <summary>
        /// حداقل نرخ پایه سنوات
        /// </summary>
        public long? MinBaseAmountYears { get; set; } // MinBaseAmountYears
        public int? CategoryCoefficientId { get; set; } // CategoryCoefficientId

        // Reverse navigation

        /// <summary>
        /// ChildAccountPaymentTypeSettings where [AccountPaymentTypeSetting].[JobGroupId] point to this entity (FK_AccountPaymentTypeSetting_JobGroup)
        /// </summary>
        public virtual ICollection<AccountPaymentTypeSetting> AccountPaymentTypeSettings { get; set; } // AccountPaymentTypeSetting.FK_AccountPaymentTypeSetting_JobGroup

        /// <summary>
        /// ChildBasisSalaryItemPerGroups where [BasisSalaryItemPerGroup].[GroupId] point to this entity (FK_BasisSalaryItemPerGroup_JobGroup)
        /// </summary>
        public virtual ICollection<BasisSalaryItemPerGroup> BasisSalaryItemPerGroups { get; set; } // BasisSalaryItemPerGroup.FK_BasisSalaryItemPerGroup_JobGroup

        /// <summary>
        /// ChildEmployeeInterdicts where [EmployeeInterdict].[CurrentJobGroupId] point to this entity (FK_EmployeeInterdict_JobGroupNew)
        /// </summary>
        public virtual ICollection<EmployeeInterdict> EmployeeInterdicts { get; set; } // EmployeeInterdict.FK_EmployeeInterdict_JobGroupNew
        public virtual ICollection<EmployeePromotion> EmployeePromotions_CurrentJobGroupId { get; set; } // EmployeePromotion.EmployeePromotions_CurrentJobGroupId
        public virtual ICollection<EmployeePromotion> EmployeePromotions_NewJobGroupId { get; set; } // EmployeePromotion.EmployeePromotions_NewJobGroupId
        public virtual ICollection<Employee> Employees { get; set; }
        // Foreign keys

        /// <summary>
        /// Parent Chart_CategoryCoefficient pointed by [JobGroup].([CategoryCoefficientId]) (FK_JobGroup_CategoryCoefficient)
        /// </summary>
        public virtual CategoryCoefficient Chart_CategoryCoefficient { get; set; } // FK_JobGroup_CategoryCoefficient

        public JobGroup()
        {
            AccountPaymentTypeSettings = new List<AccountPaymentTypeSetting>();
            BasisSalaryItemPerGroups = new List<BasisSalaryItemPerGroup>();
            EmployeeInterdicts = new List<EmployeeInterdict>();
            EmployeePromotions_CurrentJobGroupId=new List<EmployeePromotion>();
            EmployeePromotions_NewJobGroupId = new List<EmployeePromotion>();
            Employees = new List<Employee>();
        }
    }

}
// </auto-generated>
