// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Reward;
using KSC.Domain;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Ksc.HR.Domain.Entities.Chart
{
    // RewardSpecific
    public class Chart_RewardSpecific : IEntityBase<int>
    {
        public int Id { get; set; } // Id (Primary key)
        public string Title { get; set; } // Title (length: 50)

        public int RewardUnitTypeId { get; set; } // RewardUnitTypeId

        public string InsertUser { get; set; } // InsertUser (length: 50)
        public string UpdateUser { get; set; } // UpdateUser (length: 50)
        public DateTime? UpdateDate { get; set; } // UpdateDate
        public DateTime? InsertDate { get; set; } // InsertDate
        public bool IsActive { get; set; } // IsActive

        // Reverse navigation

        /// <summary>
        /// Child Chart_JobPositions where [JobPosition].[SpecificRewardId] point to this entity (FK_JobPosition_RewardSpecific)
        /// </summary>
        public virtual ICollection<Chart_JobPosition> Chart_JobPositions { get; set; } // JobPosition.FK_JobPosition_RewardSpecific

        /// <summary>
        /// Child Chart_JobPositionHistories where [JobPositionHistory].[SpecificRewardId] point to this entity (FK_JobPositionHistory_RewardSpecific)
        /// </summary>
        public virtual ICollection<Chart_JobPositionHistory> Chart_JobPositionHistories { get; set; } // JobPositionHistory.FK_JobPositionHistory_RewardSpecific
        /// <summary>
        /// Parent Reward_RewardUnitType pointed by [RewardSpecific].([RewardUnitTypeId]) (FK_RewardSpecific_RewardUnitType)
        /// </summary>
        public virtual RewardUnitType RewardUnitType { get; set; } // FK_RewardSpecific_RewardUnitType

        public Chart_RewardSpecific()
        {
            Chart_JobPositions = new List<Chart_JobPosition>();
            Chart_JobPositionHistories = new List<Chart_JobPositionHistory>();
        }
    }

}
// </auto-generated>
