// <auto-generated>
// ReSharper disable All

using Ksc.Hr.Domain.Entities;
using Ksc.HR.Domain.Entities.Pay;
using Ksc.HR.Domain.Entities.Reward;
using Ksc.HR.Domain.Entities.Rule;
using Ksc.HR.Domain.Entities.Transfer;
using KSC.Domain;

namespace Ksc.HR.Domain.Entities.Chart
{
    // JobPosition
    public class Chart_JobPosition : IEntityBase<int>
    {
        public int Id { get; set; } // Id (Primary key)
        /// <summary>
        /// کد پست
        /// </summary>
        public string Code { get; set; } // Code (length: 50)     

        public string ParentMisCode { get; set; } // Code (length: 50)
        /// <summary>
        /// عنوان پست
        /// </summary>
        public string Title { get; set; } // Title (length: 500)
        /// <summary>
        /// ساختار
        /// </summary>
        public int StructureId { get; set; } // StructureId

        public decimal? CostCenter { get; set; }

        public int? LevelNumber { get; set; }
        public int? OrderNo { get; set; }
        
        /// <summary>
        /// شناشنامه شغلی
        /// </summary>
        public int? JobIdentityId { get; set; } // JobIdentityId
        /// <summary>
        /// وضعیت پست
        /// </summary>
        public int? JobPoisitionStatusId { get; set; } // JobPoisitionStatusId
        /// <summary>
        /// تاریخ ایجاد پست
        /// </summary>
        public DateTime? StartDate { get; set; } // StartDate
        /// <summary>
        /// تاریخ خاتمه پست
        /// </summary>
        public DateTime? EndDate { get; set; } // EndDate
        /// <summary>
        /// تاریخ انقضا در ساختار
        /// </summary>
        public DateTime? StructureEndDate { get; set; } // StructureEndDate
        /// <summary>
        /// تعداد کل پست
        /// </summary>
        public int? CapacityCount { get; set; } // CapacityCount
        /// <summary>
        /// تعداد روزکار
        /// </summary>
        public int? WorkingDayCount { get; set; } // WorkingDayCount
        /// <summary>
        /// تعداد شیفت کار
        /// </summary>
        public int? WorkingShiftCount { get; set; } // WorkingShiftCount
        /// <summary>
        /// برونسپاری روزکار
        /// </summary>
        public int? WorkingDayOutsourcingCount { get; set; } // WorkingDayOutsourcingCount
        /// <summary>
        /// برونسپاری شیفت
        /// </summary>
        public int? WorkingShiftOutsourcingCount { get; set; } // WorkingShiftOutsourcingCount
        /// <summary>
        /// مجوز خروج کالا
        /// </summary>
        public int? PermissionExistCommodityCount { get; set; } // PermissionExistCommodityCount
        /// <summary>
        /// تعداد موقت
        /// </summary>
        public int? TemporaryCount { get; set; } // TemporaryCount
        /// <summary>
        /// جانشین بازنشسته
        /// </summary>
        public int? SubstituteCount { get; set; } // SubstituteCount
        /// <summary>
        /// مازاد
        /// </summary>
        public int? ExtraCount { get; set; } // ExtraCount
        /// <summary>
        /// پست قابل فراخوان
        /// </summary>
        public bool? IsOnCall { get; set; } // IsOnCall
        /// <summary>
        /// پست استراتژیک
        /// </summary>
        public bool? IsStrategic { get; set; } // IsStrategic
        /// <summary>
        /// کدشغل بیمه
        /// </summary>
        public string InsuranceJobCode { get; set; } // InsuranceJobCode (length: 50)
        /// <summary>
        /// ضریب کارانه ویژه
        /// </summary>
        public double? RewardSpecificEfficincy { get; set; } // RewardSpecificEfficincy
        /// <summary>
        /// ضریب نزدیکی به تولید
        /// </summary>
        public double? CofficientProximityProduct { get; set; } // CofficientProximityProduct
        /// <summary>
        /// پست مافوق
        /// </summary>
        public int? ParentId { get; set; } // ParentId
        /// <summary>
        /// ناحیه پاداش ویژه
        /// </summary>
        public int? SpecificRewardId { get; set; } // SpecificRewardId

        /// <summary>
        /// ماهیت پست
        /// </summary>
        public int? JobPositionNatureId { get; set; }

        /// <summary>
        /// رسته پست
        /// </summary>
        public int? JobPositionNatureSubGroupId { get; set; }

        /// <summary>
        /// توضیحات
        /// </summary>
        public string Description { get; set; } // Description


        public string MisJobPositionCode { get; set; }

        public string CodeRelations { get; set; }
        public string NewCodeRelation { get; set; }

        public int? CategoryCoefficientId { get; set; }

        public int? ProductionEfficiencyId { get; set; }

        /// <summary>
        /// ضریب نزدیکی به تولید
        /// </summary>
        public int? CofficientProximityProductId { get; set; } // CofficientProximityProductId

        public DateTime? InsertDate { get; set; } // InsertDate
        public string InsertUser { get; set; } // InsertUser (length: 50)
        public DateTime? UpdateDate { get; set; } // UpdateDate
        public string UpdateUser { get; set; } // UpdateUser (length: 50)


        public bool IsActive { get; set; }//IsActive

        // Reverse navigation
        public virtual ICollection<Chart_JobPositionHistory> JobPositionHistory { get; set; } // JobPosition.FK_JobPosition_JobPosition

        /// <summary>
        /// Child Chart_JobPositions where [JobPosition].[ParentId] point to this entity (FK_JobPosition_JobPosition)
        /// </summary>
        public virtual ICollection<Chart_JobPosition> Chart_JobPositions { get; set; } // JobPosition.FK_JobPosition_JobPosition

        public virtual ICollection<Chart_JobPositionCertificate> Chart_JobPositionCertificates { get; set; } // JobPositionCertificate.FK_JobPositionCertificate_JobCertificate1

        /// <summary>
        /// Child Chart_JobPositionFields where [JobPositionField].[JobPositionId] point to this entity (FK_JobPositionField_JobPosition)
        /// </summary>
        public virtual ICollection<Chart_JobPositionField> Chart_JobPositionFields { get; set; } // JobPositionField.FK_JobPositionField_JobPosition

        /// <summary>
        /// Child Chart_JobPositionIncreasePercents where [JobPositionIncreasePercent].[JobPositioinId] point to this entity (FK_JobPositionIncreasePerson_JobPosition)
        /// </summary>
        public virtual ICollection<Chart_JobPositionIncreasePercent> Chart_JobPositionIncreasePercents { get; set; } // JobPositionIncreasePercent.FK_JobPositionIncreasePerson_JobPosition

        /// <summary>
        /// Child Chart_JobPositionScores where [JobPositionScore].[JobPositionId] point to this entity (FK_JobPositionScore_JobPosition)
        /// </summary>
        public virtual ICollection<Chart_JobPositionScore> Chart_JobPositionScores { get; set; } // JobPositionScore.FK_JobPositionScore_JobPosition

        // Foreign keys

        /// <summary>
        /// Parent Chart_JobIdentity pointed by [JobPosition].([JobIdentityId]) (FK_JobPosition_JobIdentity)
        /// </summary>
        public virtual Chart_JobIdentity Chart_JobIdentity { get; set; } // FK_JobPosition_JobIdentity

        /// <summary>
        /// Parent Chart_JobPosition pointed by [JobPosition].([ParentId]) (FK_JobPosition_JobPosition)
        /// </summary>
        public virtual Chart_JobPosition Parent { get; set; } // FK_JobPosition_JobPosition

        /// <summary>
        /// Parent Chart_JobPositionStatu pointed by [JobPosition].([JobPoisitionStatusId]) (FK_JobPosition_JobPositionStatus)
        /// </summary>
        public virtual Chart_JobPositionStatus Chart_JobPositionStatu { get; set; } // FK_JobPosition_JobPositionStatus

        /// <summary>
        /// Parent Chart_RewardSpecific pointed by [JobPosition].([SpecificRewardId]) (FK_JobPosition_RewardSpecific)
        /// </summary>
        public virtual Chart_RewardSpecific Chart_RewardSpecific { get; set; } // FK_JobPosition_RewardSpecific

        /// <summary>
        /// Parent Chart_Structure pointed by [JobPosition].([StructureId]) (FK_JobPosition_Structure)
        /// </summary>
        public virtual Chart_Structure Chart_Structure { get; set; } // FK_JobPosition_Structure

        /// <summary>
        /// Child Chart_JobPositionTeamWorks where [JobPositionTeamWork].[JobPositionId] point to this entity (FK_JobPositionTeamWork_JobPosition)
        /// </summary>
        public virtual ICollection<Chart_JobPositionTeamWork> Chart_JobPositionTeamWorks { get; set; } // JobPositionTeamWork.FK_JobPositionTeamWork_JobPosition

        public virtual Chart_JobPositionNature JobPositionNature { get; set; }

        public virtual Chart_JobPositionNatureSubGroup JobPositionNatureSubGroup { get; set; }

        public virtual ICollection<EmployeeJobPosition> EmployeeJobPositions { get; set; }
        /// <summary>
        /// Child Rule_EmployeeInterdicts where [EmployeeInterdict].[JobPositionId] point to this entity (FK_EmployeeInterdict_JobPosition)
        /// </summary>
        public virtual ICollection<EmployeeInterdict> EmployeeInterdicts { get; set; } // EmployeeInterdict.FK_EmployeeInterdict_JobPosition
        public virtual ICollection<EmployeePromotion> EmployeePromotions { get; set; } // 
        public virtual ICollection<EmployeeReward> EmployeeRewards { get; set; } // EmployeeReward.FK_EmployeeReward_JobPosition

        public virtual CategoryCoefficient CategoryCoefficient { get; set; }
        public virtual ProductionEfficiency ProductionEfficiency { get; set; }

        public virtual CofficientProximityProduct CofficientProximityProductTable { get; set; }

        /// <summary>
        /// Child LicenseJobPositions where [LicenseJobPosition].[JobPositionId] point to this entity (FK_LicenseJobPosition_JobPosition)
        /// </summary>
        public virtual ICollection<LicenseJobPosition> LicenseJobPositions { get; set; } // LicenseJobPosition.FK_LicenseJobPosition_JobPosition

        /// <summary>
        /// Child Relocations where [Relocation].[DestinationJobPositionId] point to this entity (FK_Relocation_JobPosition1)
        /// </summary>
        public virtual ICollection<Relocation> Relocations_DestinationJobPositionId { get; set; } // Relocation.FK_Relocation_JobPosition1

        /// <summary>
        /// Child Relocations where [Relocation].[SourceJobPositionId] point to this entity (FK_Relocation_JobPosition)
        /// </summary>
        public virtual ICollection<Relocation> Relocations_SourceJobPositionId { get; set; } // Relocation.FK_Relocation_JobPosition

        /// <summary>
        /// Child Pay_BudgetRewardDetails where [BudgetRewardDetail].[JobPositionId] point to this entity (FK_BudgetRewardDetail_JobPosition)
        /// </summary>
        public virtual ICollection<BudgetRewardDetail> BudgetRewardDetails { get; set; } // BudgetRewardDetail.FK_BudgetRewardDetail_JobPosition

        /// <summary>
        /// Child Pay_BudgetRewardEmployees where [BudgetRewardEmployee].[JobPositionId] point to this entity (FK_BudgetRewardEmployee_JobPosition)
        /// </summary>
        public virtual ICollection<BudgetRewardEmployee> BudgetRewardEmployees { get; set; } // BudgetRewardEmployee.FK_BudgetRewardEmployee_JobPosition

        /// <summary>
        /// Child Pay_BudgetRewardEmployeeHistories where [BudgetRewardEmployeeHistory].[ConfirmedJobPositionId] point to this entity (FK_BudgetRewardEmployeeHistory_JobPosition)
        /// </summary>
        public virtual ICollection<BudgetRewardEmployeeHistory> BudgetRewardEmployeeHistories { get; set; } // BudgetRewardEmployeeHistory.FK_BudgetRewardEmployeeHistory_JobPosition

        public Chart_JobPosition()
        {
            BudgetRewardDetails = new List<BudgetRewardDetail>();
            BudgetRewardEmployees = new List<BudgetRewardEmployee>();
            BudgetRewardEmployeeHistories = new List<BudgetRewardEmployeeHistory>();
            Chart_JobPositions = new List<Chart_JobPosition>();
            Chart_JobPositionFields = new List<Chart_JobPositionField>();
            Chart_JobPositionIncreasePercents = new List<Chart_JobPositionIncreasePercent>();
            EmployeeRewards = new List<EmployeeReward>();
            Chart_JobPositionScores = new List<Chart_JobPositionScore>();
            JobPositionHistory = new List<Chart_JobPositionHistory>();
            EmployeeJobPositions = new List<EmployeeJobPosition>();
            EmployeeInterdicts = new List<EmployeeInterdict>();
            EmployeePromotions = new List<EmployeePromotion>();
            Chart_JobPositionTeamWorks = new List<Chart_JobPositionTeamWork>();
            LicenseJobPositions = new List<LicenseJobPosition>();
            Relocations_DestinationJobPositionId = new List<Relocation>();
            Relocations_SourceJobPositionId = new List<Relocation>();
        }
    }

}
// </auto-generated>
