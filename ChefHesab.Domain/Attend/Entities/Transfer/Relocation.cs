// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Chart;
using Ksc.HR.Domain.Entities.Emp;
using Ksc.HR.Domain.Entities.Personal;
using Ksc.HR.Domain.Entities.WorkFlow;
using Ksc.HR.Domain.Entities.Workshift;
using KSC.Domain;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Ksc.HR.Domain.Entities.Transfer
{
    // Relocation
    /// <summary>
    /// جابجایی شغل کارکنان
    /// </summary>
    public class Relocation : IEntityBase<int>
    {
        public int Id { get; set; } // Id (Primary key)
        public int? WfRequestId { get; set; } // WFRequestId
        /// <summary>
        /// شناسه پرسنل
        /// </summary>
        public int EmployeeId { get; set; } // EmployeeId

        /// <summary>
        /// شغل مبدا
        /// </summary>
        public int SourceJobPositionId { get; set; } // SourceJobPositionId

        /// <summary>
        /// شغل مقصد
        /// </summary>
        public int? DestinationJobPositionId { get; set; } // DestinationJobPositionId

        /// <summary>
        /// شرایط احراز پست (نوع رشته)
        /// </summary>
        public int? JobPositionFieldId { get; set; } // JobPositionFieldId

        /// <summary>
        /// تیم کاری مبدا
        /// </summary>
        public int SourceTeamWorkId { get; set; } // SourceTeamWorkId

        /// <summary>
        /// تیم کاری مقصد
        /// </summary>
        public int? DestinationTeamWorkId { get; set; } // DestinationTeamWorkId

        /// <summary>
        /// ساختار مقصد
        /// </summary>
        public int? StructureId { get; set; } // StructureId

        /// <summary>
        /// شیفت / روز مبدا
        /// </summary>
        public int SourceEmployeeWorkTimeId { get; set; } // SourceEmployeeWorkTimeId

        /// <summary>
        /// شیفت / روز مقصد
        /// </summary>
        public int? DestinationEmployeeWorkTimeId { get; set; } // DestinationEmployeeWorkTimeId

        /// <summary>
        /// شرایط احراز فرد (مدرک تحصیلی)
        /// </summary>
        public int EmployeeEducationDegreeId { get; set; } // EmployeeEducationDegreeId

        /// <summary>
        /// شرایط احراز پست (نوع مدرک)
        /// </summary>
        public int JobCategoryEducationId { get; set; } // JobCategoryEducationId

        /// <summary>
        /// وضعیت درخواست
        /// </summary>
        public int? RelocationStatusId { get; set; } // RelocationStatusId

        /// <summary>
        /// خاتمه یافته؟
        /// </summary>
        public bool? IsEnd { get; set; } // IsEnd

        /// <summary>
        /// تاریخ اجرا حکم
        /// </summary>
        public DateTime? ExecuteDate { get; set; } // ExecuteDate

        /// <summary>
        /// نوع درخواست جابجایی
        /// </summary>
        public int RelocationTypeId { get; set; } // RelocationTypeId

        /// <summary>
        /// فعال؟
        /// </summary>
        public bool IsActive { get; set; } // IsActive

        /// <summary>
        /// تاریخ درج
        /// </summary>
        public DateTime InsertDate { get; set; } // InsertDate

        /// <summary>
        /// کاربر درج کننده
        /// </summary>
        public string InsertUser { get; set; } // InsertUser (length: 50)

        /// <summary>
        /// تاریخ ویرایش
        /// </summary>
        public DateTime? UpdateDate { get; set; } // UpdateDate

        /// <summary>
        /// کاربر ویرایش کننده
        /// </summary>
        public string UpdateUser { get; set; } // UpdateUser (length: 50)
        public string CreateRemoteIpAddress { get; set; } // CreateRemoteIpAddress (length: 50)
        public string UpdateRemoteIpAddress { get; set; } // UpdateRemoteIpAddress (length: 50)
        public string CreateAuthenticateUserName { get; set; } // CreateAuthenticateUserName (length: 50)
        public string UpdateAuthenticateUserName { get; set; } // UpdateAuthenticateUserName (length: 50)

        // Foreign keys

        /// <summary>
        /// Parent Employee pointed by [Relocation].([EmployeeId]) (FK_Relocation_Employee)
        /// </summary>
        public virtual Employee Employee { get; set; } // FK_Relocation_Employee
        /// <summary>
        /// Parent Chart_JobCategoryEducation pointed by [Relocation].([JobCategoryEducationId]) (FK_Relocation_JobCategoryEducation)
        /// </summary>
        public virtual Chart_JobCategoryEducation Chart_JobCategoryEducation { get; set; } // FK_Relocation_JobCategoryEducation

        /// <summary>
        /// Parent Chart_JobPosition pointed by [Relocation].([DestinationJobPositionId]) (FK_Relocation_JobPosition1)
        /// </summary>
        public virtual Chart_JobPosition DestinationJobPosition { get; set; } // FK_Relocation_JobPosition1

        /// <summary>
        /// Parent Chart_JobPosition pointed by [Relocation].([SourceJobPositionId]) (FK_Relocation_JobPosition)
        /// </summary>
        public virtual Chart_JobPosition SourceJobPosition { get; set; } // FK_Relocation_JobPosition

        /// <summary>
        /// Parent Chart_JobPositionField pointed by [Relocation].([JobPositionFieldId]) (FK_Relocation_JobPositionField)
        /// </summary>
        public virtual Chart_JobPositionField Chart_JobPositionField { get; set; } // FK_Relocation_JobPositionField

        /// <summary>
        /// Parent Chart_Structure pointed by [Relocation].([StructureId]) (FK_Relocation_Structure)
        /// </summary>
        public virtual Chart_Structure Chart_Structure { get; set; } // FK_Relocation_Structure

        /// <summary>
        /// Parent EmployeeEducationDegree pointed by [Relocation].([EmployeeEducationDegreeId]) (FK_Relocation_EmployeeEducationDegree)
        /// </summary>
        public virtual EmployeeEducationDegree EmployeeEducationDegree { get; set; } // FK_Relocation_EmployeeEducationDegree

        /// <summary>
        /// Parent EmployeeWorkTime pointed by [Relocation].([DestinationEmployeeWorkTimeId]) (FK_Relocation_EmployeeWorkTime1)
        /// </summary>
        public virtual WorkTime DestinationEmployeeWorkTime { get; set; } // FK_Relocation_EmployeeWorkTime1

        /// <summary>
        /// Parent EmployeeWorkTime pointed by [Relocation].([SourceEmployeeWorkTimeId]) (FK_Relocation_EmployeeWorkTime)
        /// </summary>
        public virtual WorkTime SourceEmployeeWorkTime { get; set; } // FK_Relocation_EmployeeWorkTime
        

        /// <summary>
        /// Parent TeamWork pointed by [Relocation].([DestinationTeamWorkId]) (FK_Relocation_TeamWork1)
        /// </summary>
        public virtual TeamWork DestinationTeamWork { get; set; } // FK_Relocation_TeamWork1

        /// <summary>
        /// Parent TeamWork pointed by [Relocation].([SourceTeamWorkId]) (FK_Relocation_TeamWork)
        /// </summary>
        public virtual TeamWork SourceTeamWork { get; set; } // FK_Relocation_TeamWork

        /// <summary>
        /// Parent RelocationType pointed by [Relocation].([RelocationTypeId]) (FK_Relocation_RelocationType)
        /// </summary>
        public virtual RelocationType RelocationType { get; set; } // FK_Relocation_RelocationType

        /// <summary>
        /// Parent WF_Request pointed by [Relocation].([WfRequestId]) (FK_Relocation_Request)
        /// </summary>
        public virtual WF_Request WF_Request { get; set; } // FK_Relocation_Request

        /// <summary>
        /// Parent RelocationStatu pointed by [Relocation].([RelocationStatusId]) (FK_Relocation_RelocationStatus)
        /// </summary>
        public virtual RelocationStatus RelocationStatus { get; set; } // FK_Relocation_RelocationStatus

    }

}
// </auto-generated>
