// <auto-generated>
// ReSharper disable All

using KSC.Domain;
using Ksc.HR.Domain.Entities.Personal;
using Ksc.HR.Domain.Entities.WorkFlow;
using Ksc.HR.Domain.Entities.Workshift;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Ksc.HR.Domain.Entities.Transfer
{
    // Request
    public class Transfer_Request : IEntityBase<int>
    {
        public int Id { get; set; } // Id (Primary key)

        /// <summary>
        /// شماره درخواست
        /// </summary>
        public int WfRequestId { get; set; } // WFRequestId

        /// <summary>
        /// تیم کاری قبلی
        /// </summary>
        public int LastTeamWorkId { get; set; } // LastTeamWorkId

        /// <summary>
        /// گروه کاری قبلی
        /// </summary>
        public int LastWorkGroupId { get; set; } // LastWorkGroupId

        /// <summary>
        /// تیم کاری درخواست شده
        /// </summary>
        public int? RequestdTeamWorkId { get; set; } // RequestdTeamWorkId

        /// <summary>
        /// گروه کاری درخواست شده
        /// </summary>
        public int? RequestdWorkGroupId { get; set; } // RequestdWorkGroupId

        /// <summary>
        /// تاریخ تغییر تیم
        /// </summary>
        public DateTime TransferChangeDate { get; set; } // TransferChangeDate

        /// <summary>
        /// تاریخ برگشت
        /// </summary>
        public DateTime? TransferReturnDate { get; set; } // TransferReturnDate
        public int TransferRequestReasonTypeId { get; set; } // TransferRequestReasonTypeId
        public string RefereReason { get; set; } // RefereReason (length: 500)

        // Reverse navigation

        /// <summary>
        /// Child EmployeeTeamWorks where [EmployeeTeamWork].[TransferRequestId] point to this entity (FK_EmployeeTeamWork_Request)
        /// </summary>
        public virtual ICollection<EmployeeTeamWork> EmployeeTeamWorks { get; set; } // EmployeeTeamWork.FK_EmployeeTeamWork_Request

        /// <summary>
        /// Child EmployeeWorkGroups where [EmployeeWorkGroup].[TransferRequestId] point to this entity (FK_EmployeeWorkGroup_Request)
        /// </summary>
        public virtual ICollection<EmployeeWorkGroup> EmployeeWorkGroups { get; set; } // EmployeeWorkGroup.FK_EmployeeWorkGroup_Request

        // Foreign keys

        /// <summary>
        /// Parent TeamWork pointed by [Request].([LastTeamWorkId]) (FK_Request_TeamWork_Last)
        /// </summary>
        public virtual TeamWork LastTeamWork { get; set; } // FK_Request_TeamWork_Last

        /// <summary>
        /// Parent TeamWork pointed by [Request].([RequestdTeamWorkId]) (FK_Request_TeamWork_Requested)
        /// </summary>
        public virtual TeamWork RequestdTeamWork { get; set; } // FK_Request_TeamWork_Requested

        /// <summary>
        /// Parent Transfer_RequestReasonType pointed by [Request].([TransferRequestReasonTypeId]) (FK_Request_RequestReasonType)
        /// </summary>
        public virtual Transfer_RequestReasonType Transfer_RequestReasonType { get; set; } // FK_Request_RequestReasonType

        /// <summary>
        /// Parent WF_Request pointed by [Request].([WfRequestId]) (FK_Request_Request)
        /// </summary>
        public virtual WF_Request WF_Request { get; set; } // FK_Request_Request

        /// <summary>
        /// Parent WorkGroup pointed by [Request].([LastWorkGroupId]) (FK_Request_WorkGroup_Last)
        /// </summary>
        public virtual WorkGroup LastWorkGroup { get; set; } // FK_Request_WorkGroup_Last

        /// <summary>
        /// Parent WorkGroup pointed by [Request].([RequestdWorkGroupId]) (FK_Request_WorkGroup_Requested)
        /// </summary>
        public virtual WorkGroup RequestdWorkGroup { get; set; } // FK_Request_WorkGroup_Requested

        public Transfer_Request()
        {
            EmployeeTeamWorks = new List<EmployeeTeamWork>();
            EmployeeWorkGroups = new List<EmployeeWorkGroup>();
        }
    }

}
// </auto-generated>
