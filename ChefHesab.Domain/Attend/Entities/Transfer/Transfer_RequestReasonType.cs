// <auto-generated>
// ReSharper disable All

using KSC.Domain;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Ksc.HR.Domain.Entities.Transfer
{
    // RequestReasonType
    /// <summary>
    /// جدول واسط نوع جابه جایی و علت جابه جایی
    /// </summary>
    public class Transfer_RequestReasonType : IEntityBase<int>
    {
        public int Id { get; set; } // Id (Primary key)

        /// <summary>
        /// علت جابه جایی
        /// </summary>
        public int TransferRequestReasonId { get; set; } // TransferRequestReasonId

        /// <summary>
        /// نوع جابه جایی
        /// </summary>
        public int TransferTypeId { get; set; } // TransferTypeId

        /// <summary>
        /// نوع درخواست جابه جایی
        /// </summary>
        public int TransferRequestTypeId { get; set; } // TransferRequestTypeId
        /// <summary>
        /// فعال بودن
        /// </summary>
        public bool IsActive { get; set; } // IsActive


        /// <summary>
        /// بررسی ظرفیت موقت پست
        /// </summary>
        public bool ChartCheck { get; set; } // ChartCheck

        // Reverse navigation

        /// <summary>
        /// Child Transfer_Requests where [Request].[TransferRequestReasonTypeId] point to this entity (FK_Request_RequestReasonType)
        /// </summary>
        public virtual ICollection<Transfer_Request> Transfer_Requests { get; set; } // Request.FK_Request_RequestReasonType

        // Foreign keys

        /// <summary>
        /// Parent Transfer_RequestReason pointed by [RequestReasonType].([TransferRequestReasonId]) (FK_RequestReasonType_RequestReason)
        /// </summary>
        public virtual Transfer_RequestReason Transfer_RequestReason { get; set; } // FK_RequestReasonType_RequestReason

        /// <summary>
        /// Parent Transfer_RequestType pointed by [RequestReasonType].([TransferRequestTypeId]) (FK_RequestReasonType_RequestType)
        /// </summary>
        public virtual Transfer_RequestType Transfer_RequestType { get; set; } // FK_RequestReasonType_RequestType

        /// <summary>
        /// Parent Transfer_Type pointed by [RequestReasonType].([TransferTypeId]) (FK_RequestReasonType_Type)
        /// </summary>
        public virtual Transfer_Type Transfer_Type { get; set; } // FK_RequestReasonType_Type

        public Transfer_RequestReasonType()
        {
            Transfer_Requests = new List<Transfer_Request>();
        }
    }

}
// </auto-generated>
