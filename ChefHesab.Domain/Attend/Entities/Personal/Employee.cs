// <auto-generated>
// ReSharper disable All

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using KSC.Domain;
using Ksc.HR.Domain.Entities.WorkFlow;
using Ksc.HR.Domain.Entities.Workshift;
using Ksc.HR.Domain.Entities.Dismissal;
using Ksc.HR.Domain.Entities.BusinessTrip;
using Ksc.HR.Domain.Entities.EmployeeBase;
using Ksc.Hr.Domain.Entities;
using Ksc.HR.Domain.Entities.Emp;
using Ksc.HR.Domain.Entities.Pay;
using Ksc.HR.Domain.Entities.Rule;
using Ksc.HR.Domain.Entities.Reward;
using Ksc.HR.Domain.Entities.Chart;
using Ksc.HR.Domain.Entities.Security;
using Ksc.HR.Domain.Entities.Transfer;

namespace Ksc.HR.Domain.Entities.Personal
{
    // Employee
    public class Employee : IEntityBase<int>
    {
        public int Id { get; set; } // Id (Primary key)
        public string EmployeeNumber { get; set; } // EmployeeNumber (length: 50)
        public string Name { get; set; } // Name (length: 500)
        public string Family { get; set; } // Family (length: 500)
        public int? Gender { get; set; } // Gender

        public string GuidPicId { get; set; } // guid picture (length: 500)
        public double? UVPercent { get; set; } // UVPercent (2:2)


        /// <summary>
        /// وضعیت تاهل
        /// </summary>
        public int? MaritalStatusId { get; set; } // MaritalStatusId
        public int? TeamWorkId { get; set; } // TeamWorkId
        public int? WorkGroupId { get; set; } // WorkGroupId

        /// <summary>
        /// تاریخ شروع تیم کاری
        /// </summary>
        public DateTime? TeamWorkStartDate { get; set; } // TeamWorkStartDate

        /// <summary>
        /// تاریخ شروع گروه کاری
        /// </summary>
        public DateTime? WorkGroupStartDate { get; set; } // WorkGroupStartDate

        /// <summary>
        /// تاریخ شروع فرجه شیردهی
        /// </summary>
        public DateTime? BreastfeddingStartDate { get; set; } // BreastfeddingStartDate

        /// <summary>
        /// تاریخ پایان فرجه شیردهی
        /// </summary>
        public DateTime? BreastfeddingEndDate { get; set; } // BreastfeddingEndDate

        /// <summary>
        /// فرجه شیردهی در شروع شیفت باشد؟
        /// </summary>
        public bool IsBreastfeddingInStartShift { get; set; } // IsBreastfeddingInStartShift

        /// <summary>
        /// مانده مرخصی به دقیقه
        /// </summary>
        public int? RemianingVacationInMinute { get; set; } // RemianingVacationInMinute
        /// <summary>
        /// شهر محل خدمت
        /// </summary>
        public int? WorkCityId { get; set; } // WorkCityId

        /// <summary>
        /// نوع استخدام
        /// </summary>
        public int? EmploymentTypeId { get; set; } // EmploymentTypeId

        /// <summary>
        /// آپشن جانبازی
        /// </summary>
        public int? SacrificeOptionSettingId { get; set; } // SacrificeOptionSettingId

        /// <summary>
        /// درصد جانبازی
        /// </summary>
        public int? SacrificePercentage { get; set; } // SacrificePercentage
        public int? PaymentStatusId { get; set; } // PaymentStatusId

        /// <summary>
        /// تاریخ ترک خدمت
        /// </summary>
        public DateTime? DismissalDate { get; set; } // DismissalDate

        /// <summary>
        /// علت ترک خدمت
        /// </summary>
        public int? DismissalStatusId { get; set; } // DismissalStatusId

        /// <summary>
        /// نوع ثبت ورود و خروج
        /// </summary>
        public int? EntryExitTypeId { get; set; } // EntryExitTypeId

        /// <summary>
        /// واکسن نداشته باشد
        /// </summary>
        public bool IsValidUnVaccine { get; set; } // IsValidUnVaccine

        /// <summary>
        /// تاریخ اعتبار نداشتن واکسن
        /// </summary>
        public DateTime? UnVaccineValidDate { get; set; } // UnVaccineValidDate

        /// <summary>
        /// دزهای واکسن
        /// </summary>
        public int? VaccineDosage { get; set; } // VaccineDosage

        /// <summary>
        /// تاریخ استخدام
        /// </summary>
        public DateTime? EmploymentDate { get; set; } // EmploymentDate

        /// <summary>
        /// کد ملی
        /// </summary>
        public string NationalCode { get; set; } // NationalCode (length: 50)

        /// <summary>
        /// زمان شناور
        /// </summary>
        public int? FloatTimeSettingId { get; set; } // FloatTimeSettingId

        /// <summary>
        /// ضریب کارایی
        /// </summary>
        public decimal? Efficiency { get; set; } // Efficiency

        /// <summary>
        /// تعداد روزهای ماموریت MIS
        /// </summary>
        public int? MissionCountPerYear { get; set; } // MissionCountPerYear
        public string PhoneNumber { get; set; } // PhoneNumber (length: 20)

        /// <summary>
        /// نام قبلی
        /// </summary>
        public string PreiveName { get; set; } // PreiveName (length: 500)

        /// <summary>
        /// نام خانوادگی قبلی
        /// </summary>
        public string PreiveFamily { get; set; } // PreiveFamily (length: 500)

        /// <summary>
        /// نام پدر
        /// </summary>
        public string FatherName { get; set; } // FatherName (length: 500)

        /// <summary>
        /// تاریخ تولد
        /// </summary>
        public DateTime? BirthDate { get; set; } // BirthDate

        /// <summary>
        /// شهر محل تولد
        /// </summary>
        public int? BirthCityId { get; set; } // BirthCityId

        /// <summary>
        /// شماره شناسنامه
        /// </summary>
        public string CertificateNumber { get; set; } // CertificateNumber (length: 50)

        /// <summary>
        /// تاریخ صدور شناسنامه
        /// </summary>
        public DateTime? CertificateDate { get; set; } // CertificateDate

        /// <summary>
        /// محل صدور شناسنامه
        /// </summary>
        public int? CertificateCityId { get; set; } // CertificateCityId

        /// <summary>
        /// ملیت
        /// </summary>
        public int? NationalityId { get; set; } // NationalityId

        /// <summary>
        /// مذهب
        /// </summary>
        public int? RegionId { get; set; } // RegionId

        /// <summary>
        /// گروه خون
        /// </summary>
        public int? BloodTypeId { get; set; } // BloodTypeId

        /// <summary>
        /// تاریخ ازدواج
        /// </summary>
        public DateTime? MarriedDate { get; set; } // MarriedDate

        /// <summary>
        /// نظام وظیفه وظیفه
        /// </summary>
        public int? MilitaryStatusId { get; set; } // MilitaryStatusId

        /// <summary>
        /// تاریخ شروع سربازی
        /// </summary>
        public DateTime? MilitaryStartDate { get; set; } // MilitaryStartDate

        /// <summary>
        /// تاریخ پایان سربازی
        /// </summary>
        public DateTime? MilitaryEndDate { get; set; } // MilitaryEndDate

        /// <summary>
        /// شماره بیمه و بازنشستگی
        /// </summary>
        public string InsuranceNumber { get; set; } // InsuranceNumber (length: 50)

        /// <summary>
        /// شرکت بیمه
        /// </summary>

        public int? InsuranceListId { get; set; } // InsuranceListId

        /// <summary>
        /// تعداد فرزندان
        /// </summary>
        public int? NumberOfChildren { get; set; } // NumberOfChildren

        /// <summary>
        /// تعداد سایر افراد تحت تکفل
        /// </summary>
        public int? NumberOfDependents { get; set; } // NumberOfDependents

        /// <summary>
        /// شهر محل سکونت
        /// </summary>
        public int? HomeCityId { get; set; } // HomeCityId

        /// <summary>
        /// آدرس محل سکونت
        /// </summary>
        public string HomeAddress { get; set; } // HomeAddress (length: 500)

        /// <summary>
        /// کد پستی محل سکونت
        /// </summary>
        public string HomeZipCode { get; set; } // HomeZipCode (length: 50)

        /// <summary>
        /// وضعیت استخدام
        /// </summary>
        public int? EmploymentStatusId { get; set; } // EmploymentStatusId
        public bool? IsGenerated { get; set; } // IsGenerated
        /// <summary>
        /// تاریخ شروع قرارداد
        /// </summary>
        public DateTime? ContractStartDate { get; set; } // ContractStartDate
        /// <summary>
        /// تاریخ پایان قرارداد
        /// </summary>
        public DateTime? ContractEndDate { get; set; } // ContractEndDate
        /// <summary>
        /// کارکرد شناور
        /// </summary>
        public bool? HasFloatTime { get; set; }

        /// <summary>
        /// نوع پس انداز صندوق
        /// </summary>
        public int? SavingTypeId { get; set; } // SavingTypeId

        /// <summary>
        /// تاریخ  پس انداز صندوق
        /// </summary>
        public int? SavingTypeDate { get; set; } // SavingTypeDate
        public DateTime? InsertDate { get; set; } // InsertDate
        public string InsertUser { get; set; } // InsertUser (length: 50)
        public string RemoteIpAddress { get; set; } // RemoteIpAddress (length: 50)
        public string AuthenticateUserName { get; set; } // AuthenticateUserName (length: 50)
        public DateTime? UpdateDate { get; set; } // UpdateDate
        public string UpdateUser { get; set; } // UpdateUser (length: 50)
        public int? PersonalTypeId { get; set; }

        /// <summary>
        /// وضعیت ایثارگری
        /// </summary>
        public int? IsarStatusId { get; set; } // IsarStatusId

        /// <summary>
        /// کد پست سازمانی
        /// </summary>
        public string? JobPositionCode { get; set; } //JobPositionCode
        /// <summary>
        /// شناسه پست سازمانی
        /// </summary>
        public int? JobPositionId { get; set; } // JobPositionId

        /// <summary>
        /// تاریخ شروع پست سازمانی 
        /// </summary>
        public DateTime? JobPositionStartDate { get; set; }//JobPositionStartDate

        public int? ProductionEfficiencyId { get; set; } // ProductionEfficiencyId
        public int? JobGroupId { get; set; } // JobGroupId
                                             // Reverse navigation
        
        public int? CategoryCoefficientId { get; set; } // CategoryCoefficientId

        public int? MissionYearMis { get; set; }
        public virtual JobGroup Chart_JobGroup { get; set; } // FK_Employee_JobGroup

        /// <summary>
        /// Parent Chart_ProductionEfficiency pointed by [Employee].([ProductionEfficiencyId]) (FK_Employee_ProductionEfficiency)
        /// </summary>
        public virtual ProductionEfficiency Chart_ProductionEfficiency { get; set; } // FK_Employee_ProductionEfficiency


        /// <summary>
        /// Parent Chart_CategoryCoefficient pointed by [Employee].([CategoryCoefficientId]) (FK_Employee_CategoryCoefficient)
        /// </summary>
        public virtual CategoryCoefficient Chart_CategoryCoefficient { get; set; } // FK_Employee_CategoryCoefficient
        /// <summary>
        /// Child Emp_Families where [Family].[EmployeeId] point to this entity (FK_Family_Employee)
        /// </summary>
        public virtual ICollection<Family> Families { get; set; } // Family.FK_Family_Employee

        /// <summary>
        /// Child EmployeeAttendAbsenceItems where [EmployeeAttendAbsenceItem].[EmployeeId] point to this entity (FK_EmployeeAttendAbsenceItem_Employee)
        /// </summary>
        public virtual ICollection<EmployeeAttendAbsenceItem> EmployeeAttendAbsenceItems { get; set; } // EmployeeAttendAbsenceItem.FK_EmployeeAttendAbsenceItem_Employee

        /// <summary>
        /// Child EmployeeBreastfeddings where [EmployeeBreastfedding].[EmployeeId] point to this entity (FK_EmployeeBreastfedding_Employee)
        /// </summary>
        public virtual ICollection<EmployeeBreastfedding> EmployeeBreastfeddings { get; set; } // EmployeeBreastfedding.FK_EmployeeBreastfedding_Employee

        /// <summary>
        /// Child EmployeeEducationTimes where [EmployeeEducationTime].[EmployeeId] point to this entity (FK_EmployeeEducationTime_Employee)
        /// </summary>
        public virtual ICollection<EmployeeEducationTime> EmployeeEducationTimes { get; set; } // EmployeeEducationTime.FK_EmployeeEducationTime_Employee

        /// <summary>
        /// Child EmployeeEfficiencyHistories where [EmployeeEfficiencyHistory].[EmployeeId] point to this entity (FK_EmployeeEfficiencyHistory_Employee)
        /// </summary>
        public virtual ICollection<EmployeeEfficiencyHistory> EmployeeEfficiencyHistories { get; set; } // EmployeeEfficiencyHistory.FK_EmployeeEfficiencyHistory_Employee

        /// <summary>
        /// Child EmployeeEntryExits where [EmployeeEntryExit].[EmployeeId] point to this entity (FK_EmployeeEntryExit_Employee)
        /// </summary>
        public virtual ICollection<EmployeeEntryExit> EmployeeEntryExits { get; set; } // EmployeeEntryExit.FK_EmployeeEntryExit_Employee

        /// <summary>
        /// Child EmployeeLongTermAbsences where [EmployeeLongTermAbsence].[EmployeeId] point to this entity (FK_EmployeeLongTermAbsence_Employee)
        /// </summary>
        public virtual ICollection<EmployeeLongTermAbsence> EmployeeLongTermAbsences { get; set; } // EmployeeLongTermAbsence.FK_EmployeeLongTermAbsence_Employee

        /// <summary>
        /// Child EmployeeTeamWorks where [EmployeeTeamWork].[EmployeeId] point to this entity (FK_EmployeeTeamWork_Employee)
        /// </summary>
        public virtual ICollection<EmployeeTeamWork> EmployeeTeamWorks { get; set; } // EmployeeTeamWork.FK_EmployeeTeamWork_Employee

        /// <summary>
        /// Child EmployeeTimeSheets where [EmployeeTimeSheet].[EmployeeId] point to this entity (FK_EmployeeTimeSheet_Employee)
        /// </summary>
        public virtual ICollection<EmployeeTimeSheet> EmployeeTimeSheets { get; set; } // EmployeeTimeSheet.FK_EmployeeTimeSheet_Employee

        /// <summary>
        /// Child EmployeeWorkGroups where [EmployeeWorkGroup].[EmployeeId] point to this entity (FK_EmployeeWorkGroup_Employee)
        /// </summary>
        public virtual ICollection<EmployeeWorkGroup> EmployeeWorkGroups { get; set; } // EmployeeWorkGroup.FK_EmployeeWorkGroup_Employee

        /// <summary>
        /// Child Mission_Requests where [Request].[StandbyEmployeeId] point to this entity (FK_Request_Employee)
        /// </summary>
        public virtual ICollection<Mission_Request> Mission_Requests { get; set; } // Request.FK_Request_Employee

        /// <summary>
        /// Child MonthTimeSheets where [MonthTimeSheet].[EmployeeId] point to this entity (FK_MonthTimeSheet_Employee)
        /// </summary>
        public virtual ICollection<MonthTimeSheet> MonthTimeSheets { get; set; } // MonthTimeSheet.FK_MonthTimeSheet_Employee

        /// <summary>
        /// Child MonthTimeSheetDrafts where [MonthTimeSheetDraft].[EmployeeId] point to this entity (FK_MonthTimeSheetDraft_Employee)
        /// </summary>
        public virtual ICollection<MonthTimeSheetDraft> MonthTimeSheetDrafts { get; set; } // MonthTimeSheetDraft.FK_MonthTimeSheetDraft_Employee

        /// <summary>
        /// Child WF_Requests where [Request].[EmployeeId] point to this entity (FK_WF_Request_Employee)
        /// </summary>
        public virtual ICollection<WF_Request> WF_Requests { get; set; } // Request.FK_WF_Request_Employee

        /// <summary>
        /// Child Emp_EmployeePaymentStatus where [EmployeePaymentStatus].[EmployeeId] point to this entity (FK_EmployeePaymentStatus_Employee)
        /// </summary>
        public virtual ICollection<EmployeePaymentStatus> EmployeePaymentStatus { get; set; } // EmployeePaymentStatus.FK_EmployeePaymentStatus_Employee
        /// <summary>
        /// Child Emp_EmployeeEducationDegrees where [EmployeeEducationDegree].[EmployeeId] point to this entity (FK_EmployeeEducationDegree_Employee)
        /// </summary>
        public virtual ICollection<EmployeeEducationDegree> EmployeeEducationDegrees { get; set; } // EmployeeEducationDegree.FK_EmployeeEducationDegree_Employee

        public virtual ICollection<EmployeeAccountBank> EmployeeAccountBanks { get; set; } // EmployeeEducationDegree.FK_EmployeeEducationDegree_Employee

        public virtual ICollection<EmployeeJobPosition> EmployeeJobPositions { get; set; } // EmployeeEducationDegree.FK_EmployeeEducationDegree_Employee

        /// <summary>
        /// Child Emp_EmployeePictures where [EmployeePicture].[EmployeeId] point to this entity (FK_EmployeePicture_Employee)
        /// </summary>
        public virtual ICollection<EmployeePicture> EmployeePictures { get; set; } // EmployeePicture.FK_EmployeePicture_Employee

        /// <summary>
        /// Child Emp_EmployeeValidOverTimes where [EmployeeValidOverTime].[EmployeeId] point to this entity (FK_EmployeeValidOverTime_Employee)
        /// </summary>
        public virtual ICollection<EmployeeValidOverTime> EmployeeValidOverTimes { get; set; } // EmployeeValidOverTime.FK_EmployeeValidOverTime_Employee

        /// <summary>
        /// Child Pay_EmployeeDeductionHeaders where [EmployeeDeductionHeader].[EmployeeId] point to this entity (FK_EmployeeDeductionHeader_Employee)
        /// </summary>
        public virtual ICollection<EmployeeDeductionHeader> EmployeeDeductionHeaders { get; set; } // EmployeeDeductionHeader.FK_EmployeeDeductionHeader_Employee



        // Foreign keys

        /// <summary>
        /// Parent City pointed by [Employee].([BirthCityId]) (FK_Employee_City2)
        /// </summary>
        public virtual City BirthCity { get; set; } // FK_Employee_City2

        /// <summary>
        /// Parent City pointed by [Employee].([CertificateCityId]) (FK_Employee_City1)
        /// </summary>
        public virtual City CertificateCity { get; set; } // FK_Employee_City1

        /// <summary>
        /// Parent City pointed by [Employee].([HomeCityId]) (FK_Employee_City)
        /// </summary>
        public virtual City HomeCity { get; set; } // FK_Employee_City

        /// <summary>
        /// Parent Dismissal_Status pointed by [Employee].([DismissalStatusId]) (FK_Employee_Status)
        /// </summary>
        public virtual Dismissal_Status Dismissal_Status { get; set; } // FK_Employee_Status

        /// <summary>
        /// Parent BloodType pointed by [Employee].([BloodTypeId]) (FK_Employee_BloodType)
        /// </summary>
        public virtual BloodType BloodType { get; set; } // FK_Employee_BloodType

        /// <summary>
        /// Parent EmploymentStatu pointed by [Employee].([EmploymentStatusId]) (FK_Employee_EmploymentStatus)
        /// </summary>
        public virtual EmploymentStatus EmploymentStatus { get; set; } // FK_Employee_EmploymentStatus

        /// <summary>
        /// Parent EmploymentType pointed by [Employee].([EmploymentTypeId]) (FK_Employee_EmploymentType)
        /// </summary>
        public virtual EmploymentType EmploymentType { get; set; } // FK_Employee_EmploymentType

        /// <summary>
        /// Parent Gender pointed by [Employee].([Gender]) (FK_Employee_Gender)
        /// </summary>
        public virtual GenderType GenderType { get; set; } // FK_Employee_Gender

        public virtual PersonalType PersonalType { get; set; }
        ///// <summary>
        ///// Parent InsuranceType pointed by [Employee].([InsuranceTypeId]) (FK_Employee_InsuranceType)
        ///// </summary>
        //public virtual InsuranceType InsuranceType { get; set; } // FK_Employee_InsuranceType
        /// <summary>
        /// Parent EmployeeBase_InsuranceList pointed by [Employee].([InsuranceListId]) (FK_Employee_InsuranceList)
        /// </summary>
        public virtual InsuranceList InsuranceList { get; set; } // FK_Employee_InsuranceList

        /// <summary>
        /// Parent MilitaryStatu pointed by [Employee].([MilitaryStatusId]) (FK_Employee_MilitaryStatus)
        /// </summary>
        public virtual MilitaryStatus MilitaryStatus { get; set; } // FK_Employee_MilitaryStatus

        /// <summary>
        /// Parent Nationality pointed by [Employee].([NationalityId]) (FK_Employee_Nationality)
        /// </summary>
        public virtual Nationality Nationality { get; set; } // FK_Employee_Nationality

        /// <summary>
        /// Parent Region pointed by [Employee].([RegionId]) (FK_Employee_Region)
        /// </summary>
        public virtual Region Region { get; set; } // FK_Employee_Region

        /// <summary>
        /// Parent EntryExitType pointed by [Employee].([EntryExitTypeId]) (FK_Employee_EntryExitType)
        /// </summary>
        public virtual EntryExitType EntryExitType { get; set; } // FK_Employee_EntryExitType

        /// <summary>
        /// Parent FloatTimeSetting pointed by [Employee].([FloatTimeSettingId]) (FK_Employee_FloatTimeSetting)
        /// </summary>
        public virtual FloatTimeSetting FloatTimeSetting { get; set; } // FK_Employee_FloatTimeSetting

        /// <summary>
        /// Parent MaritalStatu pointed by [Employee].([MaritalStatusId]) (FK_Employee_MaritalStatus)
        /// </summary>
        public virtual MaritalStatus MaritalStatus { get; set; } // FK_Employee_MaritalStatus

        /// <summary>
        /// Parent PaymentStatu pointed by [Employee].([PaymentStatusId]) (FK_Employee_PaymentStatus)
        /// </summary>
        public virtual PaymentStatus PaymentStatus { get; set; } // FK_Employee_PaymentStatus

        /// <summary>
        /// Parent SacrificeOptionSetting pointed by [Employee].([SacrificeOptionSettingId]) (FK_Employee_SacrificeOptionSetting)
        /// </summary>
        public virtual SacrificeOptionSetting SacrificeOptionSetting { get; set; } // FK_Employee_SacrificeOptionSetting

        /// <summary>
        /// Parent TeamWork pointed by [Employee].([TeamWorkId]) (FK_Employee_TeamWork)
        /// </summary>
        public virtual TeamWork TeamWork { get; set; } // FK_Employee_TeamWork

        /// <summary>
        /// Parent WorkCity pointed by [Employee].([WorkCityId]) (FK_Employee_WorkCity)
        /// </summary>
        public virtual WorkCity WorkCity { get; set; } // FK_Employee_WorkCity

        /// <summary>
        /// Parent WorkGroup pointed by [Employee].([WorkGroupId]) (FK_Employee_WorkGroup)
        /// </summary>
        public virtual WorkGroup WorkGroup { get; set; } // FK_Employee_WorkGroup

        /// <summary>
        /// Parent EmployeeBase_SavingType pointed by [Employee].([SavingTypeId]) (FK_Employee_SavingType)
        /// </summary>
        public virtual SavingType SavingType { get; set; } // FK_Employee_SavingType

        public virtual IsarStatus IsarStatus { get; set; }

        public virtual Chart_JobPosition JobPosition { get; set; }
        public virtual ICollection<EmployeeOtherPayment> EmployeeOtherPayment { get; set; }

        public virtual ICollection<InsuranceBooklet> InsuranceBooklets { get; set; }
        public virtual ICollection<EmployeeBlackList> EmployeeBlackLists { get; set; } // EmployeeBlackList.FK_EmployeeBlackList_Employee

        /// <summary>
        /// Child EmployeeVacationHistorys where [EmployeeVacationHistory].[EmployeeId] point to this entity (FK_EmployeeVacationHistory_Employee)
        /// </summary>
        public virtual ICollection<EmployeeVacationHistory> EmployeeVacationHistorys { get; set; } // EmployeeVacationHistory.FK_EmployeeVacationHistory_Employee
        public virtual ICollection<EmployeeVacationManagement> EmployeeVacationManagement { get; set; } // EmployeeVacationHistory.FK_EmployeeVacationHistory_Employee
        public virtual ICollection<StudentRewardRequest> StudentRewardRequests { get; set; } // StudentRewardRequest.FK_StudentRewardRequest_Family

        /// <summary>
        /// Child EmployeeVacationSolds where [EmployeeVacationSold].[EmployeeId] point to this entity (FK_EmployeeVacationSold_Employee)
        /// </summary>
        public virtual ICollection<EmployeeVacationSold> EmployeeVacationSolds { get; set; } // EmployeeVacationSold.FK_EmployeeVacationSold_Employee

        public virtual ICollection<EmployeeInterdict> EmployeeInterdicts { get; set; } // EmployeeInterdict.FK_EmployeeInterdict_JobPosition
        public virtual ICollection<EmployeeConditionalAbsence> EmployeeConditionalAbsences { get; set; } // EmployeeConditionalAbsence.FK_EmployeeConditionalAbsence_Employee
        public virtual ICollection<EmployeeHistoryTypeEmployement> EmployeeHistoryTypeEmployements { get; set; } // EmployeeConditionalAbsence.FK_EmployeeConditionalAbsence_Employee
        public virtual ICollection<EmployeeDisConnection> EmployeeDisConnections { get; set; } //
        public virtual ICollection<EmployeePercentMeritHistory> EmployeePercentMeritHistories { get; set; } //
        public virtual ICollection<EmployeePromotion> EmployeePromotions { get; set; } //
        public virtual ICollection<EmployeeDateInformation> EmployeeDateInformations { get; set; } //
        /// <summary>
        /// Child Pay_PaymentDetails where [PaymentDetail].[EmployeeId] point to this entity (FK_PaymentDetail_Employee)
        /// </summary>
        public virtual ICollection<PaymentDetail> PaymentDetails { get; set; } // PaymentDetail.FK_PaymentDetail_Employee
        public virtual ICollection<EmployeeReward> EmployeeRewards { get; set; } // EmployeeReward.FK_EmployeeReward_JobPosition
        /// <summary>
        /// Child Pay_PaymentAdditionalDetails where [PaymentAdditionalDetail].[EmployeeId] point to this entity (FK_PaymentAdditionalDetail_Employee)
        /// </summary>
        public virtual ICollection<PaymentAdditionalDetail> PaymentAdditionalDetails { get; set; } // PaymentAdditionalDetail.FK_PaymentAdditionalDetail_Employee
        /// <summary>
        /// Child Security_UserDefinitions where [UserDefinition].[EmployeeId] point to this entity (FK_UserDefinition_Employee1)
        /// </summary>
        public virtual ICollection<UserDefinition> UserDefinitions { get; set; } // UserDefinition.FK_UserDefinition_Employee1
        /// <summary>
        /// Child Transfer_Relocations where [Relocation].[EmployeeId] point to this entity (FK_Relocation_Employee)
        /// </summary>
        public virtual ICollection<Relocation> Relocations { get; set; } // Relocation.FK_Relocation_Employee

        /// <summary>
        /// Child Pay_EmployeeDeductionTemps where [EmployeeDeductionTemp].[EmployeeId] point to this entity (FK_EmployeeDeductionTemp_Employee)
        /// </summary>
        public virtual ICollection<EmployeeDeductionTemp> EmployeeDeductionTemps { get; set; } // EmployeeDeductionTemp.FK_EmployeeDeductionTemp_Employee
        /// <summary>
        /// Child Pay_BudgetRewardEmployees where [BudgetRewardEmployee].[EmployeeId] point to this entity (FK_BudgetRewardEmployee_Employee)
        /// </summary>
        public virtual ICollection<BudgetRewardEmployee> BudgetRewardEmployees { get; set; } // BudgetRewardEmployee.FK_BudgetRewardEmployee_Employee

        /// <summary>
        /// Child Pay_BudgetRewardEmployeeHistories where [BudgetRewardEmployeeHistory].[ConfirmedEmployeeId] point to this entity (FK_BudgetRewardEmployeeHistory_Employee)
        /// </summary>
        public virtual ICollection<BudgetRewardEmployeeHistory> BudgetRewardEmployeeHistories { get; set; } // BudgetRewardEmployeeHistory.FK_BudgetRewardEmployeeHistory_Employee

        public Employee()
        {
            BudgetRewardEmployees = new List<BudgetRewardEmployee>();
            BudgetRewardEmployeeHistories = new List<BudgetRewardEmployeeHistory>();
            EmployeeOtherPayment = new List<EmployeeOtherPayment>();
            EmployeePaymentStatus = new List<EmployeePaymentStatus>();
            EmployeePictures = new List<EmployeePicture>();
            EmployeeAttendAbsenceItems = new List<EmployeeAttendAbsenceItem>();
            EmployeeBreastfeddings = new List<EmployeeBreastfedding>();
            EmployeeEducationTimes = new List<EmployeeEducationTime>();
            EmployeeEfficiencyHistories = new List<EmployeeEfficiencyHistory>();
            EmployeeEntryExits = new List<EmployeeEntryExit>();
            EmployeeLongTermAbsences = new List<EmployeeLongTermAbsence>();
            EmployeeTeamWorks = new List<EmployeeTeamWork>();
            EmployeeTimeSheets = new List<EmployeeTimeSheet>();
            EmployeeWorkGroups = new List<EmployeeWorkGroup>();
            Families = new List<Family>();
            EmployeeValidOverTimes = new List<EmployeeValidOverTime>();
            EmployeeHistoryTypeEmployements = new List<EmployeeHistoryTypeEmployement>();
            MonthTimeSheets = new List<MonthTimeSheet>();
            MonthTimeSheetDrafts = new List<MonthTimeSheetDraft>();
            WF_Requests = new List<WF_Request>();
            Mission_Requests = new List<Mission_Request>();
            EmployeeEducationDegrees = new List<EmployeeEducationDegree>();
            EmployeeAccountBanks = new List<EmployeeAccountBank>();
            EmployeeJobPositions = new List<EmployeeJobPosition>();
            InsuranceBooklets = new List<InsuranceBooklet>();
            EmployeeBlackLists = new List<EmployeeBlackList>();
            EmployeeVacationManagement = new List<EmployeeVacationManagement>();
            EmployeeVacationHistorys = new List<EmployeeVacationHistory>();
            StudentRewardRequests = new List<StudentRewardRequest>();
            EmployeeInterdicts = new List<EmployeeInterdict>();
            EmployeeConditionalAbsences = new List<EmployeeConditionalAbsence>();
            EmployeeDisConnections = new List<EmployeeDisConnection>();
            EmployeePercentMeritHistories = new List<EmployeePercentMeritHistory>();
            EmployeePromotions = new List<EmployeePromotion>();
            EmployeeDateInformations = new List<EmployeeDateInformation>();
            PaymentDetails = new List<PaymentDetail>();
            EmployeeRewards = new List<EmployeeReward>();
            PaymentAdditionalDetails = new List<PaymentAdditionalDetail>();
            UserDefinitions = new List<UserDefinition>();
            Relocations = new List<Relocation>();
            EmployeeDeductionHeaders = new List<EmployeeDeductionHeader>();
           EmployeeDeductionTemps = new List<EmployeeDeductionTemp>();




        }
    }

}
// </auto-generated>
