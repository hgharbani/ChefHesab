// <auto-generated>
// ReSharper disable All

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using KSC.Domain;
using Ksc.HR.Domain.Entities.WorkFlow;

namespace Ksc.HR.Domain.Entities.Personal
{
    // EmployeeEntryExit
    public class EmployeeEntryExit : IEntityBase<long>
    {
        public long Id { get; set; } // Id (Primary key)
        public string PersonalNumber { get; set; } // PersonalNumber (length: 10)
        public int EmployeeId { get; set; } // EmployeeId
        public DateTime EntryExitDate { get; set; } // EntryExitDate
        public string EntryExitTime { get; set; } // EntryExitTime (length: 5)
        public int EntryExitType { get; set; } // EntryExitType
        public string MachinName { get; set; } // MachinName (length: 2)
        public bool IsCreatedManual { get; set; } // IsCreatedManual
        public DateTime? CreateDateTime { get; set; } // CreateDateTime
        public string CreateUser { get; set; } // CreateUser (length: 50)
        public DateTime? UpdateDate { get; set; } // UpdateDate
        public string UpdateUser { get; set; } // UpdateUser (length: 50)
        public DateTime? DeletedDate { get; set; } // DeletedDate
        public string DeletedUser { get; set; } // DeletedUser (length: 50)
        public bool IsDeleted { get; set; } // IsDeleted
        public string RemoteIpAddress { get; set; } // RemoteIpAddress (length: 50)
        public string CreateRemoteIpAddress { get; set; } // RemoteIpAddress (length: 50)
        public string UpdateRemoteIpAddress { get; set; } // RemoteIpAddress (length: 50)
        public string DeletedRemoteIpAddress { get; set; } // RemoteIpAddress (length: 50)
        public string CreateAuthenticateUserName { get; set; } // CreateAuthenticateUserName (length: 50)
        public string UpdateAuthenticateUserName { get; set; } // UpdateAuthenticateUserName (length: 50)
        public string DeletedAuthenticateUserName { get; set; } // DeletedAuthenticateUserName (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child EmployeeEntryExitAttendAbsences where [EmployeeEntryExitAttendAbsence].[EmployeeEntryExitId] point to this entity (FK_EmployeeEntryExitAttendAbsence_EmployeeEntryExit)
        /// </summary>
        public virtual ICollection<EmployeeEntryExitAttendAbsence> EmployeeEntryExitAttendAbsences { get; set; } // EmployeeEntryExitAttendAbsence.FK_EmployeeEntryExitAttendAbsence_EmployeeEntryExit

        // Foreign keys

        /// <summary>
        /// Parent Employee pointed by [EmployeeEntryExit].([EmployeeId]) (FK_EmployeeEntryExit_Employee)
        /// </summary>
        public virtual Employee Employee { get; set; } // FK_EmployeeEntryExit_Employee

        public EmployeeEntryExit()
        {
            EmployeeEntryExitAttendAbsences = new List<EmployeeEntryExitAttendAbsence>();
        }
    }

}
// </auto-generated>
