// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Personal;
using Ksc.HR.Domain.Entities.Workshift;
using KSC.Domain;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Ksc.HR.Domain.Entities.Personal
{
    // MonthTimeSheet
    /// <summary>
    /// تایم شیت ماهیانه
    /// </summary>
    public class MonthTimeSheet : IEntityBase<int>
    {
        public int Id { get; set; } // Id (Primary key)

        /// <summary>
        /// شناسه پرسنلی
        /// </summary>
        public int EmployeeId { get; set; } // EmployeeId

        /// <summary>
        /// سال-ماه
        /// </summary>
        public int YearMonth { get; set; } // YearMonth

        /// <summary>
        /// وضعیت اشتغال
        /// </summary>
        public int PaymentStatusId { get; set; } // PaymentStatusId

        /// <summary>
        /// گروه کاری
        /// </summary>
        public int WorkGroupId { get; set; } // WorkGroupId

        /// <summary>
        /// اضافه کار مازاد سقف
        /// </summary>
        public string ExcessOverTime { get; set; } // ExcessOverTime (length: 6)

        /// <summary>
        /// مجموع اضافه کاریهای تایید نشده در تایم شیت روزانه
        /// </summary>
        public string SumInvalidOverTimInDailyTimeSheet { get; set; } // SumInvalidOverTimInDailyTimeSheet (length: 6)

        /// <summary>
        /// اضافه کار تعدیل میانگین
        /// </summary>
        public string AverageBalanceOverTime { get; set; } // AverageBalanceOverTime (length: 6)

        /// <summary>
        /// اضافه کار مازاد سقف قبلی
        /// </summary>
        public string ExcessOverTimeOld { get; set; } // ExcessOverTimeOld (length: 6)

        /// <summary>
        /// مرخصی استفاده شده ماه جاری
        /// </summary>
        public double? UsedVacationCurrentMonth { get; set; }

        /// <summary>
        /// تعداد روزهای بیمه پذیر تایید شده
        /// </summary>
        public double? CurrentMonthMerit { get; set; }
        
        public DateTime? InsertDate { get; set; } // InsertDate
        public string InsertUser { get; set; } // InsertUser (length: 50)
        public DateTime? UpdateDate { get; set; } // UpdateDate
        public string UpdateUser { get; set; } // UpdateUser (length: 50)
        public bool IsCreatedManual { get; set; }

        // Reverse navigation

        /// <summary>
        /// Child MonthTimeSheetIncludeds where [MonthTimeSheetIncluded].[MonthTimeSheetId] point to this entity (FK_MonthTimeSheetIncluded_MonthTimeSheet)
        /// </summary>
        public virtual ICollection<MonthTimeSheetIncluded> MonthTimeSheetIncludeds { get; set; } // MonthTimeSheetIncluded.FK_MonthTimeSheetIncluded_MonthTimeSheet

        /// <summary>
        /// Child MonthTimeSheetRollCalls where [MonthTimeSheetRollCall].[MonthTimeSheetId] point to this entity (FK_MonthTimeSheetRollCall_MonthTimeSheet)
        /// </summary>
        public virtual ICollection<MonthTimeSheetRollCall> MonthTimeSheetRollCalls { get; set; } // MonthTimeSheetRollCall.FK_MonthTimeSheetRollCall_MonthTimeSheet

        /// <summary>
        /// Child MonthTimeSheetWorkTimes where [MonthTimeSheetWorkTime].[MonthTimeSheetId] point to this entity (FK_MonthTimeSheetWorkTime_MonthTimeSheet)
        /// </summary>
        public virtual ICollection<MonthTimeSheetWorkTime> MonthTimeSheetWorkTimes { get; set; } // MonthTimeSheetWorkTime.FK_MonthTimeSheetWorkTime_MonthTimeSheet

        // Foreign keys

        /// <summary>
        /// Parent Employee pointed by [MonthTimeSheet].([EmployeeId]) (FK_MonthTimeSheet_Employee)
        /// </summary>
        public virtual Employee Employee { get; set; } // FK_MonthTimeSheet_Employee

        /// <summary>
        /// Parent PaymentStatu pointed by [MonthTimeSheet].([PaymentStatusId]) (FK_MonthTimeSheet_PaymentStatus)
        /// </summary>
        public virtual PaymentStatus PaymentStatus { get; set; } // FK_MonthTimeSheet_PaymentStatus

        /// <summary>
        /// Parent WorkGroup pointed by [MonthTimeSheet].([WorkGroupId]) (FK_MonthTimeSheet_WorkGroup)
        /// </summary>
        public virtual WorkGroup WorkGroup { get; set; } // FK_MonthTimeSheet_WorkGroup

        public MonthTimeSheet()
        {
            MonthTimeSheetIncludeds = new List<MonthTimeSheetIncluded>();
            MonthTimeSheetRollCalls = new List<MonthTimeSheetRollCall>();
            MonthTimeSheetWorkTimes = new List<MonthTimeSheetWorkTime>();
        }
    }

}
// </auto-generated>
