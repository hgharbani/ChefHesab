// <auto-generated>
// ReSharper disable All

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using KSC.Domain;
using Ksc.HR.Domain.Entities.WorkFlow;
using Ksc.HR.Domain.Entities.Workshift;
using Ksc.HR.Share.General;
using System.ComponentModel;
using Ksc.HR.Domain.Entities.BusinessTrip;
using System.ComponentModel.DataAnnotations.Schema;

namespace Ksc.HR.Domain.Entities.Personal
{
    // EmployeeAttendAbsenceItem
    public class EmployeeAttendAbsenceItem : IEntityBase<long>
    {
        public long Id { get; set; } // Id (Primary key)

        /// <summary>
        /// شماره پرسنلی
        /// </summary>
        public int EmployeeId { get; set; } // EmployeeId

        /// <summary>
        /// تاریخ روز
        /// </summary>
        public int WorkCalendarId { get; set; } // WorkCalendarId


        public DateTime? StartDate { get; set; } // StartDate
        public DateTime? EndDate { get; set; } // EndDate

        /// <summary>
        /// ساعت شروع
        /// </summary>
        public string StartTime { get; set; } // StartTime (length: 5)

        /// <summary>
        /// ساعت پایان
        /// </summary>
        public string EndTime { get; set; } // EndTime (length: 5)
        /// <summary>
        /// ماموریت
        /// </summary>
        public string MissionId { get; set; } // MissionId (length: 50)

        /// <summary>
        /// ارزيابي و توسعه  کارکنان
        /// </summary>
        public string EvaluationDevelopmentId { get; set; } // EvaluationDevelopmentId (length: 50)

        /// <summary>
        /// مدت زمان
        /// </summary>
        public string TimeDuration { get; set; } // TimeDuration (length: 6)
        public int? EmployeeLongTermAbsenceId { get; set; } // EmployeeLongTermAbsenceId

        /// <summary>
        /// کد حضور غیاب
        /// </summary>
        public int RollCallDefinitionId { get; set; } // RollCallDefinitionId

        /// <summary>
        /// کد شیفت کاری
        /// </summary>
        public int ShiftConceptDetailId { get; set; } // ShiftConceptDetailId

        /// <summary>
        /// کد شیفت کاری در لوحه شیفت
        /// </summary>
        public int? ShiftConceptDetailIdInShiftBoard { get; set; } // ShiftConceptDetailIdInShiftBoard

        /// <summary>
        /// زمان کاری
        /// </summary>
        public int WorkTimeId { get; set; } // WorkTimeId

        /// <summary>
        /// نشانگر کارکرد دستی
        /// </summary>
        public bool IsManual { get; set; } // IsManual

        /// <summary>
        /// نشانگر کارکرد شناور
        /// </summary>
        public bool IsFloat { get; set; } // IsFloat

        /// <summary>
        /// رکورد که نباید مشاهده شود
        /// </summary>
        public bool InvalidRecord { get; set; } // InvalidRecord


        /// <summary>
        /// شناسه جدول آموزش
        /// </summary>
        public int? EmployeeEducationTimeId { get; set; } // EmployeeEducationTimeId

        /// <summary>
        /// علت عدم مشاهده رکورد
        /// </summary>
        public string InvalidRecordReason { get; set; } // InvalidRecordReason

        [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
        public int? TimeDurationInMinute { get; set; }
        public DateTime? InsertDate { get; set; } // InsertDate
        public string InsertUser { get; set; } // InsertUser (length: 50)
        public DateTime? UpdateDate { get; set; } // UpdateDate
        public string UpdateUser { get; set; } // UpdateUser (length: 50)
        public byte[] RowVersion { get; set; } // RowVersion (length: 8)
        public string OverTimeToken { get; set; } // OverTimeToken
        /// <summary>
        /// مدت زمان افزایش یافته
        /// </summary>
        public int? IncreasedTimeDuration { get; set; } // IncreasedTimeDuration
        public string RemoteIpAddress { get; set; } // RemoteIpAddress (length: 50)
        /// <summary>
        /// شناسه درخواست ماموریت
        /// </summary>
        public int? MissionRequestId { get; set; } // MissionRequestId
        public string AuthenticateUserName { get; set; } // AuthenticateUserName (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child EmployeeEntryExitAttendAbsences where [EmployeeEntryExitAttendAbsence].[EmployeeAttendAbsenceItemId] point to this entity (FK_EmployeeEntryExitAttendAbsence_EmployeeAttendAbsenceItem)
        /// </summary>
        public virtual ICollection<EmployeeEntryExitAttendAbsence> EmployeeEntryExitAttendAbsences { get; set; } // EmployeeEntryExitAttendAbsence.FK_EmployeeEntryExitAttendAbsence_EmployeeAttendAbsenceItem

        // Foreign keys

        /// <summary>
        /// Parent Employee pointed by [EmployeeAttendAbsenceItem].([EmployeeId]) (FK_EmployeeAttendAbsenceItem_Employee)
        /// </summary>
        public virtual Employee Employee { get; set; } // FK_EmployeeAttendAbsenceItem_Employee

        /// <summary>
        /// Parent EmployeeEducationTime pointed by [EmployeeAttendAbsenceItem].([EmployeeEducationTimeId]) (FK_EmployeeAttendAbsenceItem_EmployeeEducationTime)
        /// </summary>
        public virtual EmployeeEducationTime EmployeeEducationTime { get; set; } // FK_EmployeeAttendAbsenceItem_EmployeeEducationTime


        /// <summary>
        /// Parent EmployeeLongTermAbsence pointed by [EmployeeAttendAbsenceItem].([EmployeeLongTermAbsenceId]) (FK_EmployeeAttendAbsenceItem_EmployeeLongTermAbsence)
        /// </summary>
        public virtual EmployeeLongTermAbsence EmployeeLongTermAbsence { get; set; } // FK_EmployeeAttendAbsenceItem_EmployeeLongTermAbsence
        /// <summary>
        /// Parent Mission_Request pointed by [EmployeeAttendAbsenceItem].([MissionRequestId]) (FK_EmployeeAttendAbsenceItem_Request)
        /// </summary>
        public virtual Mission_Request Mission_Request { get; set; } // FK_EmployeeAttendAbsenceItem_Request
        /// <summary>
        /// Parent RollCallDefinition pointed by [EmployeeAttendAbsenceItem].([RollCallDefinitionId]) (FK_EmployeeAttendAbsenceItem_RollCallDefinition)
        /// </summary>
        public virtual RollCallDefinition RollCallDefinition { get; set; } // FK_EmployeeAttendAbsenceItem_RollCallDefinition

        /// <summary>
        /// Parent ShiftConceptDetail pointed by [EmployeeAttendAbsenceItem].([ShiftConceptDetailId]) (FK_EmployeeAttendAbsenceItem_ShiftConceptDetail)
        /// </summary>
        public virtual ShiftConceptDetail ShiftConceptDetail_ShiftConceptDetailId { get; set; } // FK_EmployeeAttendAbsenceItem_ShiftConceptDetail

        /// <summary>
        /// Parent ShiftConceptDetail pointed by [EmployeeAttendAbsenceItem].([ShiftConceptDetailIdInShiftBoard]) (FK_EmployeeAttendAbsenceItem_ShiftConceptDetailFromShiftBoard)
        /// </summary>
        public virtual ShiftConceptDetail ShiftConceptDetail_ShiftConceptDetailIdInShiftBoard { get; set; } // FK_EmployeeAttendAbsenceItem_ShiftConceptDetailFromShiftBoard

        /// <summary>
        /// Parent WorkCalendar pointed by [EmployeeAttendAbsenceItem].([WorkCalendarId]) (FK_EmployeeAttendAbsenceItem_WorkCalendar)
        /// </summary>
        public virtual WorkCalendar WorkCalendar { get; set; } // FK_EmployeeAttendAbsenceItem_WorkCalendar

        /// <summary>
        /// Parent WorkTime pointed by [EmployeeAttendAbsenceItem].([WorkTimeId]) (FK_EmployeeAttendAbsenceItem_WorkTime)
        /// </summary>
        public virtual WorkTime WorkTime { get; set; } // FK_EmployeeAttendAbsenceItem_WorkTime

        public EmployeeAttendAbsenceItem()
        {
            EmployeeEntryExitAttendAbsences = new List<EmployeeEntryExitAttendAbsence>();
        }
    }

}
// </auto-generated>
