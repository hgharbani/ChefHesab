// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using KSC.Domain;
using Ksc.HR.Domain.Entities.Oncall;
using Ksc.HR.Domain.Entities.Personal;
using System;
using System.Collections.Generic;
using Ksc.HR.Domain.Entities.Transfer;

namespace Ksc.HR.Domain.Entities.Workshift
{
    /// <summary>
    /// زمان کاری
    /// </summary>
    public partial class WorkTime : IEntityBase<int>
    {
        public int Id { get; set; } // Id (Primary key)
        public string Title { get; set; } // Title (length: 200)
        public string Code { get; set; } // Code (length: 50)
        public int WorkTimeCategoryId { get; set; } // WorkTimeCategoryId
        public int RepetitionPeriod { get; set; } // RepetitionPeriod

        /// <summary>
        /// درصد شیفت کاری
        /// </summary>
        public double? PercentageWorkTime { get; set; } // PercentageWorkTime

        /// <summary>
        /// چک کردن تنظیمات از لوحه شیفت باشد؟
        /// </summary>
        public bool ShiftSettingFromShiftboard { get; set; } // ShiftSettingFromShiftboard
        public string MaximumForcedOverTime { get; set; } // MaximumForcedOverTime (length: 5)

        /// <summary>
        /// تعطیلات رسمی و غیر رسمی از تقویم کاری باشد?
        /// </summary>
        public bool OfficialUnOfficialHolidayFromWorkCalendar { get; set; } // OfficialUnOfficialHolidayFromWorkCalendar
        public DateTime? InsertDate { get; set; } // InsertDate
        public string InsertUser { get; set; } // InsertUser (length: 50)
        public DateTime? UpdateDate { get; set; } // UpdateDate
        public string UpdateUser { get; set; } // UpdateUser (length: 50)
        public string DomainName { get; set; } // DomainName (length: 50)
        public bool IsActive { get; set; } // IsActive
        public byte[] RowVersion { get; set; } // RowVersion (length: 8)
        public int? IdTemp { get; set; } // IdTemp
        public bool? IsValidPlanningOnCall { get; set; } // IsValidPlanningOnCall
        // Reverse navigation

        /// <summary>
        /// Child EmployeeAttendAbsenceItems where [EmployeeAttendAbsenceItem].[WorkTimeId] point to this entity (FK_EmployeeAttendAbsenceItem_WorkTime)
        /// </summary>
        public virtual ICollection<EmployeeAttendAbsenceItem> EmployeeAttendAbsenceItems { get; set; } // EmployeeAttendAbsenceItem.FK_EmployeeAttendAbsenceItem_WorkTime

        /// <summary>
        /// Child MonthTimeSheetDrafts where [MonthTimeSheetDraft].[WorkTimeId] point to this entity (FK_MonthTimeSheetDraft_WorkTime)
        /// </summary>
        public virtual ICollection<MonthTimeSheetDraft> MonthTimeSheetDrafts { get; set; } // MonthTimeSheetDraft.FK_MonthTimeSheetDraft_WorkTime

        /// <summary>
        /// Child MonthTimeSheetWorkTimes where [MonthTimeSheetWorkTime].[WorkTimeId] point to this entity (FK_MonthTimeSheetWorkTime_WorkTime)
        /// </summary>
        public virtual ICollection<MonthTimeSheetWorkTime> MonthTimeSheetWorkTimes { get; set; } // MonthTimeSheetWorkTime.FK_MonthTimeSheetWorkTime_WorkTime

        /// <summary>
        /// Child OnCall_WorkTimes where [WorkTime].[WorkTimeId] point to this entity (FK_OnCallWorkTime_WorkTime)
        /// </summary>
        public virtual ICollection<OnCall_WorkTime> OnCall_WorkTimes { get; set; } // WorkTime.FK_OnCallWorkTime_WorkTime

        /// <summary>
        /// Child RollCallWorkTimeDayTypes where [RollCallWorkTimeDayType].[WorkTimeId] point to this entity (FK_RollCallWorkTimeDayType_WorkTime)
        /// </summary>
        public virtual ICollection<RollCallWorkTimeDayType> RollCallWorkTimeDayTypes { get; set; } // RollCallWorkTimeDayType.FK_RollCallWorkTimeDayType_WorkTime

        /// <summary>
        /// Child WorkDayTimeSettings where [WorkDayTimeSetting].[WorkTimeId] point to this entity (FK_WorkDayShiftSetting_WorkTime)
        /// </summary>
        public virtual ICollection<WorkDayTimeSetting> WorkDayTimeSettings { get; set; } // WorkDayTimeSetting.FK_WorkDayShiftSetting_WorkTime

        /// <summary>
        /// Child WorkGroups where [WorkGroup].[WorkTimeId] point to this entity (FK_WorkGroup_WorkTime)
        /// </summary>
        public virtual ICollection<WorkGroup> WorkGroups { get; set; } // WorkGroup.FK_WorkGroup_WorkTime

        /// <summary>
        /// Child WorkTimeShiftConcepts where [WorkTimeShiftConcept].[WorkTimeId] point to this entity (FK_WorkTimeShiftConcept_WorkTime)
        /// </summary>
        public virtual ICollection<WorkTimeShiftConcept> WorkTimeShiftConcepts { get; set; } // WorkTimeShiftConcept.FK_WorkTimeShiftConcept_WorkTime

        // Foreign keys

        /// <summary>
        /// Parent WorkTimeCategory pointed by [WorkTime].([WorkTimeCategoryId]) (FK_WorkTime_WorkTimeCategory)
        /// </summary>
        public virtual WorkTimeCategory WorkTimeCategory { get; set; } // FK_WorkTime_WorkTimeCategory
        /// <summary>
        /// Child Transfer_Relocations where [Relocation].[DestinationEmployeeWorkTimeId] point to this entity (FK_Relocation_Destination_WorkTime)
        /// </summary>
        public virtual ICollection<Relocation> Relocations_DestinationEmployeeWorkTimeId { get; set; } // Relocation.FK_Relocation_Destination_WorkTime

        /// <summary>
        /// Child Transfer_Relocations where [Relocation].[SourceEmployeeWorkTimeId] point to this entity (FK_Relocation_Source_WorkTime)
        /// </summary>
        public virtual ICollection<Relocation> Relocations_SourceEmployeeWorkTimeId { get; set; } // Relocation.FK_Relocation_Source_WorkTime


        /// <summary>
        /// Child RollCallWorkTimeMonthSettings where [RollCallWorkTimeMonthSetting].[WorkTimeId] point to this entity (FK_RollCallWorkTimeMonthSetting_WorkTime)
        /// </summary>
        public virtual ICollection<RollCallWorkTimeMonthSetting> RollCallWorkTimeMonthSettings { get; set; } // RollCallWorkTimeMonthSetting.FK_RollCallWorkTimeMonthSetting_WorkTime
        /// <summary>
        /// Child InvalidDayTypeInForcedOvertimes where [InvalidDayTypeInForcedOvertime].[WorkTimeId] point to this entity (FK_InvalidDayTypeInForcedOvertime_WorkTime)
        /// </summary>
        public virtual ICollection<InvalidDayTypeInForcedOvertime> InvalidDayTypeInForcedOvertimes { get; set; } // InvalidDayTypeInForcedOvertime.FK_InvalidDayTypeInForcedOvertime_WorkTime
        public WorkTime()
        {
            InvalidDayTypeInForcedOvertimes = new List<InvalidDayTypeInForcedOvertime>();
            EmployeeAttendAbsenceItems = new List<EmployeeAttendAbsenceItem>();
            MonthTimeSheetDrafts = new List<MonthTimeSheetDraft>();
            MonthTimeSheetWorkTimes = new List<MonthTimeSheetWorkTime>();
            Relocations_DestinationEmployeeWorkTimeId = new List<Relocation>();
            Relocations_SourceEmployeeWorkTimeId = new List<Relocation>();
            RollCallWorkTimeDayTypes = new List<RollCallWorkTimeDayType>();
            WorkDayTimeSettings = new List<WorkDayTimeSetting>();
            WorkGroups = new List<WorkGroup>();
            OnCall_WorkTimes = new List<OnCall_WorkTime>();
            WorkTimeShiftConcepts = new List<WorkTimeShiftConcept>();
            RollCallWorkTimeMonthSettings = new List<RollCallWorkTimeMonthSetting>();
        }
    }
}