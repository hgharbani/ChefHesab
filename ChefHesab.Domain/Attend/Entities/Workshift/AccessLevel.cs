// <auto-generated>
// ReSharper disable All

using Ksc.Hr.Domain.Entities;
using Ksc.HR.Domain.Entities.BusinessTrip;
using Ksc.HR.Domain.Entities.Stepper;
using KSC.Domain;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Ksc.HR.Domain.Entities.Workshift
{
    // ****************************************************************************************************
    // This is not a commercial licence, therefore only a few tables/views/stored procedures are generated.
    // ****************************************************************************************************

    // AccessLevel
    /// <summary>
    /// سطوح دسترسی
    /// </summary>
    public class AccessLevel : IEntityBase<int>
    {
        public int Id { get; set; } // Id (Primary key)

        /// <summary>
        /// عنوان
        /// </summary>
        public string Title { get; set; } // Title (length: 500)

        /// <summary>
        /// کد
        /// </summary>
        public string Code { get; set; } // Code (length: 50)

        /// <summary>
        /// نقش در سیستم احراز هویت زیرساخت
        /// </summary>
        public string RoleInIdentityService { get; set; } // RoleInIdentityService (length: 500)
        public DateTime? InsertDate { get; set; } // InsertDate
        public string InsertUser { get; set; } // InsertUser (length: 50)
        public DateTime? UpdateDate { get; set; } // UpdateDate
        public string UpdateUser { get; set; } // UpdateUser (length: 50)
        public string DomainName { get; set; } // DomainName (length: 50)
        public bool IsActive { get; set; } // IsActive
        public byte[] RowVersion { get; set; } // RowVersion (length: 8)

        // Reverse navigation

        /// <summary>
        /// Child Mission_TypeAccessLevels where [TypeAccessLevel].[AccessLevelId] point to this entity (FK_TypeAccessLevel_AccessLevel)
        /// </summary>
        public virtual ICollection<Mission_TypeAccessLevel> Mission_TypeAccessLevels { get; set; } // TypeAccessLevel.FK_TypeAccessLevel_AccessLevel
        /// <summary>
        /// Child Stepper_ProcedureAccessLevels where [ProcedureAccessLevel].[AccessLevelId] point to this entity (FK_ProcedureAccessLevel_AccessLevel)
        /// </summary>
        public virtual ICollection<Stepper_ProcedureAccessLevel> Stepper_ProcedureAccessLevels { get; set; } // ProcedureAccessLevel.FK_ProcedureAccessLevel_AccessLevel
        /// <summary>
        /// Child RollCallDefinitions where [RollCallDefinition].[AccessLevelId] point to this entity (FK_RollCallDefinition_AccessLevel)
        /// </summary>
        public virtual ICollection<RollCallDefinition> RollCallDefinitions { get; set; } // RollCallDefinition.FK_RollCallDefinition_AccessLevel


        /// <summary>
        /// Child EmployeeBase_PaymentStatusAccesses where [PaymentStatusAccess].[AccessLevelId] point to this entity (FK_PaymentStatusAccess_AccessLevel)
        /// </summary>
        public virtual ICollection<PaymentStatusAccess> EmployeeBase_PaymentStatusAccesses { get; set; } // PaymentStatusAccess.FK_PaymentStatusAccess_AccessLevel

        public AccessLevel()
        {
            RollCallDefinitions = new List<RollCallDefinition>();
            Mission_TypeAccessLevels = new List<Mission_TypeAccessLevel>();
            Stepper_ProcedureAccessLevels = new List<Stepper_ProcedureAccessLevel>();
            EmployeeBase_PaymentStatusAccesses = new List<PaymentStatusAccess>();

        }

    }

}
// </auto-generated>
