// <auto-generated>
// ReSharper disable All

using KSC.Domain;
using System;
using System.Collections.Generic;

namespace Ksc.HR.Domain.Entities.Workshift
{
    // WorkCompanyUnOfficialHolidaySetting
    public class WorkCompanyUnOfficialHolidaySetting : IEntityBase<int>
    {
        public int Id { get; set; } // Id (Primary key)
        public int WorkCompanySettingId { get; set; } // WorkCompanySettingId
        public int WorkCalendarId { get; set; } // WorkCalendarId

        /// <summary>
        /// تعطیل است؟
        /// </summary>
        public bool IsHoliday { get; set; } // IsHoliday

        /// <summary>
        /// دلیل تعطیلی
        /// </summary>
        public int? UnofficialHolidayReasonId { get; set; } // UnofficialHolidayReasonId

        /// <summary>
        /// اضافه کار تعلق میگیرد؟
        /// </summary>
        public bool IsValidExtraWork { get; set; } // IsValidExtraWork

        /// <summary>
        /// اضافه کاری برای تمام رده های شغلی معتبر است؟
        /// </summary>
        public bool IsValidExtraWorkForAllCategoryCode { get; set; } // IsValidExtraWorkForAllCategoryCode
        public DateTime? InsertDate { get; set; } // InsertDate
        public string InsertUser { get; set; } // InsertUser (length: 50)
        public DateTime? UpdateDate { get; set; } // UpdateDate
        public string UpdateUser { get; set; } // UpdateUser (length: 50)
        public string DomainName { get; set; } // DomainName (length: 50)
        public bool IsActive { get; set; } // IsActive
        public byte[] RowVersion { get; set; } // RowVersion (length: 8)

        // Reverse navigation

        /// <summary>
        /// Child WorkCompanyUnOfficialHolidayJobCategories where [WorkCompanyUnOfficialHolidayJobCategory].[WorkCompanyUnOfficialHolidaySettingId] point to this entity (FK_WorkCompanyUnOfficialHolidayJobCategory_WorkCompanyUnOfficialHolidaySetting)
        /// </summary>
        public virtual ICollection<WorkCompanyUnOfficialHolidayJobCategory> WorkCompanyUnOfficialHolidayJobCategories { get; set; } // WorkCompanyUnOfficialHolidayJobCategory.FK_WorkCompanyUnOfficialHolidayJobCategory_WorkCompanyUnOfficialHolidaySetting

        // Foreign keys

        /// <summary>
        /// Parent UnofficialHolidayReason pointed by [WorkCompanyUnOfficialHolidaySetting].([UnofficialHolidayReasonId]) (FK_WorkCompanyUnOfficialHolidaySetting_UnofficialHolidayReason)
        /// </summary>
        public virtual UnofficialHolidayReason UnofficialHolidayReason { get; set; } // FK_WorkCompanyUnOfficialHolidaySetting_UnofficialHolidayReason

        /// <summary>
        /// Parent WorkCalendar pointed by [WorkCompanyUnOfficialHolidaySetting].([WorkCalendarId]) (FK_WorkCompanyUnOfficialHolidaySetting_WorkCalendar)
        /// </summary>
        public virtual WorkCalendar WorkCalendar { get; set; } // FK_WorkCompanyUnOfficialHolidaySetting_WorkCalendar

        /// <summary>
        /// Parent WorkCompanySetting pointed by [WorkCompanyUnOfficialHolidaySetting].([WorkCompanySettingId]) (FK_WorkCompanyUnOfficialHolidaySetting_WorkCompanySetting)
        /// </summary>
        public virtual WorkCompanySetting WorkCompanySetting { get; set; } // FK_WorkCompanyUnOfficialHolidaySetting_WorkCompanySetting

        public WorkCompanyUnOfficialHolidaySetting()
        {
            WorkCompanyUnOfficialHolidayJobCategories = new List<WorkCompanyUnOfficialHolidayJobCategory>();
        }
    }

}
// </auto-generated>
