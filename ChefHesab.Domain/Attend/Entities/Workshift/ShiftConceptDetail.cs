// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using KSC.Domain;
using Ksc.HR.Domain.Entities.Personal;
using System;
using System.Collections.Generic;

namespace Ksc.HR.Domain.Entities.Workshift
{
    /// <summary>
    /// کدهای شیفت
    /// </summary>
    public partial class ShiftConceptDetail : IEntityBase<int>
    {
        public int Id { get; set; } // Id (Primary key)
        public string Title { get; set; } // Title (length: 200)
        public string Code { get; set; } // Code (length: 50)
        public int ShiftConceptId { get; set; } // ShiftConceptId
        public bool OncallCheckBeforeShiftStart { get; set; } // OncallCheckBeforeShiftStart
        public bool OncallCheckAfterShiftEnd { get; set; } // OncallCheckAfterShiftEnd
        public bool OncallCheckAfterShiftStart { get; set; } // OncallCheckAfterShiftStart
        public bool OncallCheckFree { get; set; } // OncallCheckFree

        /// <summary>
        /// مدت زمان قبل از شروع شیفت
        /// </summary>
        public string DurationTimeBeforeShiftStartTime { get; set; } // DurationTimeBeforeShiftStartTime (length: 5)

        /// <summary>
        /// مدت زمان بعد از پایان شیفت
        /// </summary>
        public string DurationTimeAfterShiftEndTime { get; set; } // DurationTimeAfterShiftEndTime (length: 5)
        /// <summary>
        /// معتبر بودن محاسبه اضافه کاری روزهای تعطیلی مشخص شده
        /// </summary>
        public bool IsValidSpecialOverTimeTimeSheet { get; set; } // IsValidSpecialOverTimeTimeSheet
        public DateTime? InsertDate { get; set; } // InsertDate
        public string InsertUser { get; set; } // InsertUser (length: 50)
        public DateTime? UpdateDate { get; set; } // UpdateDate
        public string UpdateUser { get; set; } // UpdateUser (length: 50)
        public string DomainName { get; set; } // DomainName (length: 50)
        public bool IsActive { get; set; } // IsActive
        public byte[] RowVersion { get; set; } // RowVersion (length: 8)

        // Reverse navigation

        /// <summary>
        /// Child EmployeeAttendAbsenceItems where [EmployeeAttendAbsenceItem].[ShiftConceptDetailId] point to this entity (FK_EmployeeAttendAbsenceItem_ShiftConceptDetail)
        /// </summary>
        public virtual ICollection<EmployeeAttendAbsenceItem> EmployeeAttendAbsenceItems_ShiftConceptDetailId { get; set; } // EmployeeAttendAbsenceItem.FK_EmployeeAttendAbsenceItem_ShiftConceptDetail

        /// <summary>
        /// Child EmployeeAttendAbsenceItems where [EmployeeAttendAbsenceItem].[ShiftConceptDetailIdInShiftBoard] point to this entity (FK_EmployeeAttendAbsenceItem_ShiftConceptDetailFromShiftBoard)
        /// </summary>
        public virtual ICollection<EmployeeAttendAbsenceItem> EmployeeAttendAbsenceItems_ShiftConceptDetailIdInShiftBoard { get; set; } // EmployeeAttendAbsenceItem.FK_EmployeeAttendAbsenceItem_ShiftConceptDetailFromShiftBoard

        /// <summary>
        /// Child ShiftBoards where [ShiftBoard].[ShiftConceptDetailId] point to this entity (FK_ShiftBoard_ShiftConceptDetail)
        /// </summary>
        public virtual ICollection<ShiftBoard> ShiftBoards { get; set; } // ShiftBoard.FK_ShiftBoard_ShiftConceptDetail

        // Foreign keys

        /// <summary>
        /// Parent ShiftConcept pointed by [ShiftConceptDetail].([ShiftConceptId]) (FK_ShiftConceptDetail_ShiftConcept)
        /// </summary>
        public virtual ShiftConcept ShiftConcept { get; set; } // FK_ShiftConceptDetail_ShiftConcept

        public ShiftConceptDetail()
        {
            EmployeeAttendAbsenceItems_ShiftConceptDetailId = new List<EmployeeAttendAbsenceItem>();
            EmployeeAttendAbsenceItems_ShiftConceptDetailIdInShiftBoard = new List<EmployeeAttendAbsenceItem>();
            ShiftBoards = new List<ShiftBoard>();
        }
    }
}