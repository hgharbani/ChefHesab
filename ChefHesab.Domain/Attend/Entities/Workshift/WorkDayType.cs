// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using KSC.Domain;
using System;
using System.Collections.Generic;

namespace Ksc.HR.Domain.Entities.Workshift
{
    /// <summary>
    /// نوع روز کاری
    /// </summary>
    public partial class WorkDayType : IEntityBase<int>
    {
        public int Id { get; set; } // Id (Primary key)
        public string Title { get; set; } // Title (length: 200)
        public string Code { get; set; } // Code (length: 50)

        /// <summary>
        /// قابل استفاده در کدهای حضور غیاب
        /// </summary>
        public bool UseInRollCall { get; set; } // UseInRollCall

        /// <summary>
        /// تعطیل است؟
        /// </summary>
        public bool IsHoliday { get; set; } // IsHoliday

        /// <summary>
        /// تعطیل رسمی کشوری است؟
        /// </summary>
        public bool IsOfficialHoliday { get; set; } // IsOfficialHoliday
        public DateTime? InsertDate { get; set; } // InsertDate
        public string InsertUser { get; set; } // InsertUser (length: 50)
        public DateTime? UpdateDate { get; set; } // UpdateDate
        public string UpdateUser { get; set; } // UpdateUser (length: 50)
        public string DomainName { get; set; } // DomainName (length: 50)
        public bool IsActive { get; set; } // IsActive
        public byte[] RowVersion { get; set; } // RowVersion (length: 8)

        // Reverse navigation

        /// <summary>
        /// Child CompatibleRollCalls where [CompatibleRollCall].[WorkDayTypeId] point to this entity (FK_CompatibleRollCall_WorkDayType)
        /// </summary>
        public virtual ICollection<CompatibleRollCall> CompatibleRollCalls { get; set; } // CompatibleRollCall.FK_CompatibleRollCall_WorkDayType

        /// <summary>
        /// Child RollCallWorkTimeDayTypes where [RollCallWorkTimeDayType].[WorkDayTypeId] point to this entity (FK_RollCallWorkTimeDayType_WorkDayType)
        /// </summary>
        public virtual ICollection<RollCallWorkTimeDayType> RollCallWorkTimeDayTypes { get; set; } // RollCallWorkTimeDayType.FK_RollCallWorkTimeDayType_WorkDayType

        /// <summary>
        /// Child WorkCalendars where [WorkCalendar].[WorkDayTypeId] point to this entity (FK_WorkCalendar_WorkDayType)
        /// </summary>
        public virtual ICollection<WorkCalendar> WorkCalendars { get; set; } // WorkCalendar.FK_WorkCalendar_WorkDayType

        /// <summary>
        /// Child WorkDayTimeSettings where [WorkDayTimeSetting].[WorkDayTypeId] point to this entity (FK_WorkDayTimeSetting_WorkDayType)
        /// </summary>
        public virtual ICollection<WorkDayTimeSetting> WorkDayTimeSettings { get; set; } // WorkDayTimeSetting.FK_WorkDayTimeSetting_WorkDayType
        /// <summary>
        /// Child InvalidDayTypeInForcedOvertimes where [InvalidDayTypeInForcedOvertime].[WorkDayTypeId] point to this entity (FK_InvalidDayTypeInForcedOvertime_WorkDayType)
        /// </summary>
        public virtual ICollection<InvalidDayTypeInForcedOvertime> InvalidDayTypeInForcedOvertimes { get; set; } // InvalidDayTypeInForcedOvertime.FK_InvalidDayTypeInForcedOvertime_WorkDayType
        public WorkDayType()
        {
            InvalidDayTypeInForcedOvertimes = new List<InvalidDayTypeInForcedOvertime>();
            CompatibleRollCalls = new List<CompatibleRollCall>();
            RollCallWorkTimeDayTypes = new List<RollCallWorkTimeDayType>();
            WorkCalendars = new List<WorkCalendar>();
            WorkDayTimeSettings = new List<WorkDayTimeSetting>();
        }

    }
}