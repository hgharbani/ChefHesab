// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.BusinessTrip;
using Ksc.HR.Domain.Entities.Pay;
using Ksc.HR.Domain.Entities.Personal;
using Ksc.HR.Domain.Entities.Rule;
using KSC.Domain;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Ksc.HR.Domain.Entities.Workshift
{
    // WorkCity
    public class WorkCity : IEntityBase<int>
    {
        public int Id { get; set; } // Id (Primary key)
        public int CityId { get; set; } // CityId
        public int CompanyId { get; set; } // CompanyId

        /// <summary>
        /// آیا شهر مرکزی شرکت است؟
        /// </summary>
        public bool IsCompanyCentralCity { get; set; } // IsCompanyCentralCity

        // Reverse navigation

        /// <summary>
        /// Child Employees where [Employee].[WorkCityId] point to this entity (FK_Employee_WorkCity)
        /// </summary>
        public virtual ICollection<Employee> Employees { get; set; } // Employee.FK_Employee_WorkCity

        /// <summary>
        /// Child WorkCompanySettings where [WorkCompanySetting].[WorkCityId] point to this entity (FK_WorkCompanySetting_WorkCity)
        /// </summary>
        public virtual ICollection<WorkCompanySetting> WorkCompanySettings { get; set; } // WorkCompanySetting.FK_WorkCompanySetting_WorkCity

        // Foreign keys

        /// <summary>
        /// Parent City pointed by [WorkCity].([CityId]) (FK_WorkCity_City)
        /// </summary>
        public virtual City City { get; set; } // FK_WorkCity_City

        /// <summary>
        /// Parent Company pointed by [WorkCity].([CompanyId]) (FK_WorkCity_Company)
        /// </summary>
        public virtual Company Company { get; set; } // FK_WorkCity_Company
        /// <summary>
        /// Child Mission_TypeLocationWorkCities where [TypeLocationWorkCity].[WorkCityId] point to this entity (FK_TypeLocationWorkCity_WorkCity)
        /// </summary>
        public virtual ICollection<Mission_TypeLocationWorkCity> Mission_TypeLocationWorkCities { get; set; } // TypeLocationWorkCity.FK_TypeLocationWorkCity_WorkCity

        /// <summary>
        /// Child Rule_InterdictWeathers where [InterdictWeather].[WorkCityId] point to this entity (FK_InterdictWeather_WorkCity)
        /// </summary>
        public virtual ICollection<InterdictWeather> InterdictWeathers { get; set; } // InterdictWeather.FK_InterdictWeather_WorkCity
        /// <summary>
        /// Child Pay_PaymentAdditionalSettingWorkCities where [PaymentAdditionalSettingWorkCity].[WorkCityId] point to this entity (FK_PaymentAdditionalSettingWorkCity_WorkCity)
        /// </summary>
        public virtual ICollection<PaymentAdditionalSettingWorkCity> PaymentAdditionalSettingWorkCities { get; set; } // PaymentAdditionalSettingWorkCity.FK_PaymentAdditionalSettingWorkCity_WorkCity
        public virtual ICollection<IncreaseSalaryDetail> IncreaseSalaryDetails { get; set; } // 
        /// <summary>
        /// Child RollCallWorkCities where [RollCallWorkCity].[WorkCityId] point to this entity (FK_RollCallWorkCity_WorkCity)
        /// </summary>
        public virtual ICollection<RollCallWorkCity> RollCallWorkCities { get; set; } // RollCallWorkCity.FK_RollCallWorkCity_WorkCity
        public WorkCity()
        {
            Employees = new List<Employee>();
            WorkCompanySettings = new List<WorkCompanySetting>();
            Mission_TypeLocationWorkCities = new List<Mission_TypeLocationWorkCity>();
            InterdictWeathers = new List<InterdictWeather>();
            PaymentAdditionalSettingWorkCities = new List<PaymentAdditionalSettingWorkCity>();
            IncreaseSalaryDetails = new List<IncreaseSalaryDetail>();
            RollCallWorkCities = new List<RollCallWorkCity>();

        }

    }

}
// </auto-generated>
