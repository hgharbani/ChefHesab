// <auto-generated>
// ReSharper disable All

using Ksc.Hr.Domain.Entities;
using Ksc.HR.Domain.Entities.Chart;
using Ksc.HR.Domain.Entities.EmployeeBase;
using Ksc.HR.Domain.Entities.Personal;
using KSC.Domain;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Threading;
using System.Threading.Tasks;

namespace Ksc.HR.Domain.Entities.Rule
{
    // EmployeeInterdict
    public class EmployeeInterdict : IEntityBase<int>
    {

        public EmployeeInterdict()
        {
            EmployeeInterdictDetails = new List<EmployeeInterdictDetail>();
            Interdicts = new List<EmployeePromotionInterdicts>();
            IncreaseSalaryDetails = new List<IncreaseSalaryDetail>();  
        }


        public int Id { get; set; } // Id (Primary key)

        /// <summary>
        /// شناسه پرسنل
        /// </summary>
        public int? EmployeeId { get; set; } // EmployeeId

        /// <summary>
        /// نوع حکم
        /// </summary>
        public int? InterdictTypeId { get; set; } // InterdictTypeId

        /// <summary>
        /// تاریخ اجرا
        /// </summary>
        public DateTime? ExecuteDate { get; set; } // ExecuteDate

        /// <summary>
        /// تاریخ اجرا YYYYMM سال ماه شمسی
        /// </summary>
        public int? ExecuteDateYearMonth { get; set; } // ExecuteDateYearMonth

        /// <summary>
        /// تاریخ صدور حکم
        /// </summary>
        public DateTime? IssuanceDate { get; set; } // IssuanceDate

        /// <summary>
        /// شماره حکم
        /// </summary>
        public string InterdictNumber { get; set; } // InterdictNumber (length: 50)

        /// <summary>
        /// نوع استخدام
        /// </summary>
        public int? EmploymentTypeId { get; set; } // EmploymentTypeId

        /// <summary>
        /// تاریخ شروع حکم
        /// </summary>
        public DateTime? InterdictStartDate { get; set; } // InterdictStartDate

        /// <summary>
        /// تاریخ پایان حکم
        /// </summary>
        public DateTime? InterdictEndDate { get; set; } // InterdictEndDate

        /// <summary>
        /// شناسه جدید گروه
        /// </summary>
        public int? CurrentJobGroupId { get; set; } // CurrentJobGroupId

        /// <summary>
        /// شناسه پست سازمانی
        /// </summary>
        public int? JobPositionId { get; set; } // JobPositionId

        /// <summary>
        /// امتیاز سرپرستی
        /// </summary>
        public double? SupervisionScore { get; set; } // SupervisionScore

        /// <summary>
        /// امتیاز مسئولیت خاص
        /// </summary>
        public double? SpecialLiabilityScore { get; set; } // SpecialLiabilityScore

        /// <summary>
        /// امتیاز سختی کار
        /// </summary>
        public double? HardWorkScore { get; set; } // HardWorkScore

        /// <summary>
        /// درصد اشعه
        /// </summary>
        public double? RadiationPercentage { get; set; } // RadiationPercentage

        /// <summary>
        /// درصد شایستگی
        /// </summary>
        public double? MeritPercentage { get; set; } // MeritPercentage

        /// <summary>
        /// درصد بسیج
        /// </summary>
        public double? BasijPercentage { get; set; } // BasijPercentage

        /// <summary>
        /// شناسه شرح
        /// </summary>
        public int? InterdictDescriptionId { get; set; } // InterdictDescriptionId

        /// <summary>
        /// شناسه امضا
        /// </summary>
        public int? SignatureImageId { get; set; } // SignatureImageId

        /// <summary>
        /// دلیل جابه جایی
        /// </summary>
        public int? ReasonJobMovingId { get; set; } // ReasonJobMovingId

        /// <summary>
        /// جمع مبلغ مزد مبنا
        /// </summary>
        public long? SumPriceBasisSalary { get; set; } // SumPriceBasisSalary

        /// <summary>
        /// جمع مبلغ مزایای مستقل از مبنا
        /// </summary>
        public long? SumPriceIndependentBasisSalary { get; set; } // SumPriceIndependentBasisSalary

        /// <summary>
        /// وضعیت حکم
        /// </summary>
        public int? InterdictStatusId { get; set; } // InterdictStatusId

        /// <summary>
        /// تایید نهایی برای پورتال
        /// </summary>
        public bool? PortalFinalConfirmFlag { get; set; } // PortalFinalConfirmFlag

        /// <summary>
        /// تاریخ درج
        /// </summary>
        public DateTime? InsertDate { get; set; } // InsertDate

        /// <summary>
        /// کاربر درج کننده
        /// </summary>
        public string InsertUser { get; set; } // InsertUser (length: 50)

        /// <summary>
        /// تاریخ ویرایش
        /// </summary>
        public DateTime? UpdateDate { get; set; } // UpdateDate

        /// <summary>
        /// کاربر ویرایش کننده
        /// </summary>
        public string UpdateUser { get; set; } // UpdateUser (length: 50)


        /// <summary>
        /// تاریخ ارسال به MIS
        /// </summary>
        public DateTime? SendMISDate { get; set; } // SendMISDate

        /// <summary>
        /// سال ماه ارسال  به MIS
        /// </summary>
        public int? SendMISYearMonth { get; set; } // SendMISYearMonth

        /// <summary>
        /// از طریق عملیات های دسته جمعی برای تمام پرسنل بوده؟
        /// </summary>
        public bool? IsCollective { get; set; }

        //// Reverse navigation

        ///// <summary>
        ///// Child Rule_EmployeeInterdictDetails where [EmployeeInterdictDetail].[EmployeeInterdictId] point to this entity (FK_EmployeeInterdictDetail_EmployeeInterdict)
        ///// </summary>
        public virtual ICollection<EmployeeInterdictDetail> EmployeeInterdictDetails { get; set; } // EmployeeInterdictDetail.FK_EmployeeInterdictDetail_EmployeeInterdict



        // Foreign keys

        /// <summary>
        /// Parent Chart_JobGroup pointed by [EmployeeInterdict].([CurrentJobGroupId]) (FK_EmployeeInterdict_JobGroupNew)
        /// </summary>
        public virtual JobGroup CurrentJobGroup { get; set; } // FK_EmployeeInterdict_JobGroupNew


        /// <summary>
        /// Parent Chart_JobPosition pointed by [EmployeeInterdict].([JobPositionId]) (FK_EmployeeInterdict_JobPosition)
        /// </summary>
        public virtual Chart_JobPosition Chart_JobPosition { get; set; } // FK_EmployeeInterdict_JobPosition

        /// <summary>
        /// Parent Employee pointed by [EmployeeInterdict].([EmployeeId]) (FK_EmployeeInterdict_Employee)
        /// </summary>
        public virtual Employee Employee { get; set; } // FK_EmployeeInterdict_Employee

        /// <summary>
        /// Parent EmployeeBase_EmploymentType pointed by [EmployeeInterdict].([EmploymentTypeId]) (FK_EmployeeInterdict_EmploymentType)
        /// </summary>
        public virtual EmploymentType EmployeeBase_EmploymentType { get; set; } // FK_EmployeeInterdict_EmploymentType

        /// <summary>
        /// Parent InterdictDescription pointed by [EmployeeInterdict].([InterdictDescriptionId]) (FK_EmployeeInterdict_InterdictDescription)
        /// </summary>
        public virtual InterdictDescription InterdictDescription { get; set; } // FK_EmployeeInterdict_InterdictDescription

        /// <summary>
        /// Parent InterdictStatu pointed by [EmployeeInterdict].([InterdictStatusId]) (FK_EmployeeInterdict_InterdictStatus)
        /// </summary>
        public virtual InterdictStatus InterdictStatus { get; set; } // FK_EmployeeInterdict_InterdictStatus

        /// <summary>
        /// Parent InterdictType pointed by [EmployeeInterdict].([InterdictTypeId]) (FK_EmployeeInterdict_InterdictType)
        /// </summary>
        public virtual InterdictType InterdictType { get; set; } // FK_EmployeeInterdict_InterdictType
        public virtual IEnumerable<EmployeePromotionInterdicts> Interdicts { get; set; }
        public virtual ICollection<IncreaseSalaryDetail> IncreaseSalaryDetails { get; set; } // IncreaseSalaryHeader.FK_IncreaseSalaryHeader_InterdictType
        public virtual ICollection<ConfirmInterdict> ConfirmInterdicts { get; set; }
    }

}
// </auto-generated>
