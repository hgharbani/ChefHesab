// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Pay;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.Hr.Data.Persistant.Configurations
{
    // OtherPaymentSettingParameterValue
    public class OtherPaymentSettingParameterValueConfiguration : IEntityTypeConfiguration<OtherPaymentSettingParameterValue>
    {
        public void Configure(EntityTypeBuilder<OtherPaymentSettingParameterValue> builder)
        {
            builder.ToTable("OtherPaymentSettingParameterValue", "Pay");
            builder.HasKey(x => x.Id).HasName("PK_OtherPaymentSettingParameterValue").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.OtherPaymentSettingParameterId).HasColumnName(@"OtherPaymentSettingParameterId").HasColumnType("int").IsRequired();
            builder.Property(x => x.ParameterValue).HasColumnName(@"ParameterValue").HasColumnType("nvarchar(20)").IsRequired(false).HasMaxLength(20);
            builder.Property(x => x.OtherPaymentSettingId).HasColumnName(@"OtherPaymentSettingId").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.OtherPaymentSetting).WithMany(b => b.OtherPaymentSettingParameterValues).HasForeignKey(c => c.OtherPaymentSettingId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_OtherPaymentSettingParameterValue_OtherPaymentSettingParameter");
            builder.HasOne(a => a.OtherPaymentSettingParameter).WithMany(b => b.OtherPaymentSettingParameterValues).HasForeignKey(c => c.OtherPaymentSettingParameterId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_OtherPaymentSettingParameterValue_OtherPaymentSettingParameterValue");
        }
    }

}
// </auto-generated>
