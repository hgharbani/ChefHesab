// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Pay;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.Hr.Data.Persistant.Configurations.Pay

{
    // EmployeeLoanDeductionHeader
    public class EmployeeLoanDeductionHeaderConfiguration : IEntityTypeConfiguration<EmployeeLoanDeductionHeader>
    {
        public void Configure(EntityTypeBuilder<EmployeeLoanDeductionHeader> builder)
        {
            builder.ToTable("EmployeeLoanDeductionHeader", "Pay");
            builder.HasKey(x => x.Id).HasName("PK_EmployeeLoanDeductionHeader").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.StartDate).HasColumnName(@"StartDate").HasColumnType("date").IsRequired();
            builder.Property(x => x.EndDate).HasColumnName(@"EndDate").HasColumnType("date").IsRequired(false);
            builder.Property(x => x.IncreasePercent).HasColumnName(@"IncreasePercent").HasColumnType("float").HasPrecision(53).IsRequired();
            builder.Property(x => x.PaymentAccountCodeId).HasColumnName(@"PaymentAccountCodeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.InstallmentAccountCodeId).HasColumnName(@"InstallmentAccountCodeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.InstallmentNumber).HasColumnName(@"InstallmentNumber").HasColumnType("int").IsRequired();
            builder.Property(x => x.FirstTimeInstallmentNumber).HasColumnName(@"FirstTimeInstallmentNumber").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.FirstTimeLoanAmount).HasColumnName(@"FirstTimeLoanAmount").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.FirstTimePercent).HasColumnName(@"FirstTimePercent").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.NextInstallmentNumber).HasColumnName(@"NextInstallmentNumber").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.OutOfTurnInstallmentNumber).HasColumnName(@"OutOfTurnInstallmentNumber").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.MinWorkDay).HasColumnName(@"MinWorkDay").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.DomainName).HasColumnName(@"DomainName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);

            // Foreign keys
            builder.HasOne(a => a.InstallmentAccountCode).WithMany(b => b.EmployeeLoanDeductionHeaders_InstallmentAccountCodeId).HasForeignKey(c => c.InstallmentAccountCodeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeeLoanDeductionHeader_AccountCode1");
            builder.HasOne(a => a.PaymentAccountCode).WithMany(b => b.EmployeeLoanDeductionHeaders_PaymentAccountCodeId).HasForeignKey(c => c.PaymentAccountCodeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeeLoanDeductionHeader_AccountCode");
        }
    }

}
// </auto-generated>
