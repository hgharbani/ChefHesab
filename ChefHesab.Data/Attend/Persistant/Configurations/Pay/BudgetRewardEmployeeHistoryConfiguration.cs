// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Pay;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.Hr.Data.Persistant.Configurations.Pay

{
    // BudgetRewardEmployeeHistory
    public class BudgetRewardEmployeeHistoryConfiguration : IEntityTypeConfiguration<BudgetRewardEmployeeHistory>
    {
        public void Configure(EntityTypeBuilder<BudgetRewardEmployeeHistory> builder)
        {
            builder.ToTable("BudgetRewardEmployeeHistory", "Pay");
            builder.HasKey(x => x.Id).HasName("PK_BudgetRewardRecipientHistory").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.BudgetRewardEmployeeId).HasColumnName(@"BudgetRewardEmployeeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.BudgetRewardStatusId).HasColumnName(@"BudgetRewardStatusId").HasColumnType("int").IsRequired();
            builder.Property(x => x.Amount).HasColumnName(@"Amount").HasColumnType("bigint").IsRequired();
            builder.Property(x => x.ConfirmedJobPositionId).HasColumnName(@"ConfirmedJobPositionId").HasColumnType("int").IsRequired();
            builder.Property(x => x.ConfirmedEmployeeId).HasColumnName(@"ConfirmedEmployeeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.DomainName).HasColumnName(@"DomainName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);

            // Foreign keys
            builder.HasOne(a => a.Chart_JobPosition).WithMany(b => b.BudgetRewardEmployeeHistories).HasForeignKey(c => c.ConfirmedJobPositionId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_BudgetRewardEmployeeHistory_JobPosition");
            builder.HasOne(a => a.Employee).WithMany(b => b.BudgetRewardEmployeeHistories).HasForeignKey(c => c.ConfirmedEmployeeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_BudgetRewardEmployeeHistory_Employee");
            builder.HasOne(a => a.BudgetRewardEmployee).WithMany(b => b.BudgetRewardEmployeeHistories).HasForeignKey(c => c.BudgetRewardEmployeeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_BudgetRewardEmployeeHistory_BudgetRewardEmployee");
            builder.HasOne(a => a.BudgetRewardStatus).WithMany(b => b.BudgetRewardEmployeeHistories).HasForeignKey(c => c.BudgetRewardStatusId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_BudgetRewardEmployeeHistory_BudgetRewardStatus");
        }
    }

}
// </auto-generated>
