// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Pay;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.Hr.Data.Persistant.Configurations
{
    // PaymentAdditionalSettingWorkCity
    public class PaymentAdditionalSettingWorkCityConfiguration : IEntityTypeConfiguration<PaymentAdditionalSettingWorkCity>
    {
        public void Configure(EntityTypeBuilder<PaymentAdditionalSettingWorkCity> builder)
        {
            builder.ToTable("PaymentAdditionalSettingWorkCity", "Pay");
            builder.HasKey(x => x.Id).HasName("PK_PaymentAdditionalSettingWorkCity").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.PaymentAdditionalSettingId).HasColumnName(@"PaymentAdditionalSettingId").HasColumnType("int").IsRequired();
            builder.Property(x => x.WorkCityId).HasColumnName(@"WorkCityId").HasColumnType("int").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.PaymentAdditionalSetting).WithMany(b => b.PaymentAdditionalSettingWorkCities).HasForeignKey(c => c.PaymentAdditionalSettingId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_PaymentAdditionalSettingWorkCity_PaymentAdditionalSetting");
            builder.HasOne(a => a.WorkCity).WithMany(b => b.PaymentAdditionalSettingWorkCities).HasForeignKey(c => c.WorkCityId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_PaymentAdditionalSettingWorkCity_WorkCity");
        }
    }

}
// </auto-generated>
