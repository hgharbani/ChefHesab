// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Pay;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.Hr.Data.Persistant.Configurations
{
    // PaymentDetail
    public class PaymentDetailConfiguration : IEntityTypeConfiguration<PaymentDetail>
    {
        public void Configure(EntityTypeBuilder<PaymentDetail> builder)
        {
            builder.ToTable("PaymentDetail", "Pay");
            builder.HasKey(x => x.Id).HasName("PK_PaymentDetail").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.PaymentHeaderId).HasColumnName(@"PaymentHeaderId").HasColumnType("int").IsRequired();
            builder.Property(x => x.AccountCodeId).HasColumnName(@"AccountCodeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.EmployeeId).HasColumnName(@"EmployeeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CostCenterCode).HasColumnName(@"CostCenterCode").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.OtherCompanyCode).HasColumnName(@"OtherCompanyCode").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CreditAmount).HasColumnName(@"CreditAmount").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.DebitAmount).HasColumnName(@"DebitAmount").HasColumnType("bigint").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.Employee).WithMany(b => b.PaymentDetails).HasForeignKey(c => c.EmployeeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_PaymentDetail_Employee");
            builder.HasOne(a => a.PaymentHeader).WithMany(b => b.PaymentDetails).HasForeignKey(c => c.PaymentHeaderId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_PaymentDetail_PaymentHeader");
            builder.HasOne(a => a.AccountCode).WithMany(b => b.PaymentDetails).HasForeignKey(c => c.AccountCodeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_PaymentDetail_AccountCode");
        }
    }

}
// </auto-generated>
