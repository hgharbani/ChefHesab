// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Pay;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.Hr.Data.Persistant.Configurations.Pay
{
    // OtherPaymentHeaderType
    public class OtherPaymentHeaderTypeConfiguration : IEntityTypeConfiguration<OtherPaymentHeaderType>
    {
        public void Configure(EntityTypeBuilder<OtherPaymentHeaderType> builder)
        {
            builder.ToTable("OtherPaymentHeaderType", "Pay");
            builder.HasKey(x => x.Id).HasName("PK_OtherPaymentHeaderType").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.OtherPaymentHeaderId).HasColumnName(@"OtherPaymentHeaderId").HasColumnType("int").IsRequired();
            builder.Property(x => x.OtherPaymentTypeId).HasColumnName(@"OtherPaymentTypeId").HasColumnType("int").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.OtherPaymentHeader).WithMany(b => b.OtherPaymentHeaderTypes).HasForeignKey(c => c.OtherPaymentHeaderId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_OtherPaymentHeaderType_OtherPaymentHeader");
            builder.HasOne(a => a.OtherPaymentType).WithMany(b => b.OtherPaymentHeaderTypes).HasForeignKey(c => c.OtherPaymentTypeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_OtherPaymentHeaderType_OtherPaymentType");
        }
    }

}
// </auto-generated>
