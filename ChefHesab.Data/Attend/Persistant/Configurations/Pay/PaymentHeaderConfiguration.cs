// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Pay;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.Hr.Data.Persistant.Configurations
{
    // PaymentHeader
    public class PaymentHeaderConfiguration : IEntityTypeConfiguration<PaymentHeader>
    {
        public void Configure(EntityTypeBuilder<PaymentHeader> builder)
        {
            builder.ToTable("PaymentHeader", "Pay");
            builder.HasKey(x => x.Id).HasName("PK_PaymentHeader").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.PaymentProcessId).HasColumnName(@"PaymentProcessId").HasColumnType("int").IsRequired();
            builder.Property(x => x.OtherPaymentStatusId).HasColumnName(@"OtherPaymentStatusId").HasColumnType("int").IsRequired();
            builder.Property(x => x.PaymentYearMonth).HasColumnName(@"PaymentYearMonth").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PaymentDescription).HasColumnName(@"PaymentDescription").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Amount).HasColumnName(@"Amount").HasColumnType("bigint").IsRequired();
            builder.Property(x => x.AccountingDocumentNumber).HasColumnName(@"AccountingDocumentNumber").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.AccountingDocumentDate).HasColumnName(@"AccountingDocumentDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);

            // Foreign keys
            builder.HasOne(a => a.OtherPaymentStatus).WithMany(b => b.PaymentHeaders).HasForeignKey(c => c.OtherPaymentStatusId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_PaymentHeader_OtherPaymentStatus");
            builder.HasOne(a => a.PaymentProcess).WithMany(b => b.PaymentHeaders).HasForeignKey(c => c.PaymentProcessId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_PaymentHeader_PaymentProcess");
        }
    }

}
// </auto-generated>
