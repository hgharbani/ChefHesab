// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Pay;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.HR.Data.Persistant.Configurations.Pay
{
    // StudentRewardRequest
    public class StudentRewardRequestConfiguration : IEntityTypeConfiguration<StudentRewardRequest>
    {
        public void Configure(EntityTypeBuilder<StudentRewardRequest> builder)
        {
            builder.ToTable("StudentRewardRequest", "Pay");
            builder.HasKey(x => x.Id).HasName("PK_StudentRewardRequest").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.EmployeeId).HasColumnName(@"EmployeeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.FamilyId).HasColumnName(@"FamilyId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.StudentRewardSettingId).HasColumnName(@"StudentRewardSettingId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Amount).HasColumnName(@"Amount").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.CostCenterCode).HasColumnName(@"CostCenterCode").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false); 
            builder.Property(x => x.ConfirmUser).HasColumnName(@"ConfirmUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.ConfirmDate).HasColumnName(@"ConfirmDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.IsConfirm).HasColumnName(@"IsConfirm").HasColumnType("bit").IsRequired();
            builder.Property(x => x.AverageEducation).HasColumnName(@"AverageEducation").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.FirstTermAverageEducation).HasColumnName(@"FirstTermAverageEducation").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.SecondTermAverageEducation).HasColumnName(@"SecondTermAverageEducation").HasColumnType("float").HasPrecision(53).IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.Family).WithMany(b => b.StudentRewardRequests).HasForeignKey(c => c.FamilyId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_StudentRewardRequest_Family");
            builder.HasOne(a => a.Employee).WithMany(b => b.StudentRewardRequests).HasForeignKey(c => c.EmployeeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_StudentRewardRequest_Employee");
            builder.HasOne(a => a.StudentRewardSetting).WithMany(b => b.StudentRewardRequests).HasForeignKey(c => c.StudentRewardSettingId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_StudentRewardRequest_StudentRewardSetting");
        }
    }

}
// </auto-generated>
