// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Pay;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.Hr.Data.Persistant.Configurations.Pay
{
    // BudgetRewardHeader
    public class BudgetRewardHeaderConfiguration : IEntityTypeConfiguration<BudgetRewardHeader>
    {
        public void Configure(EntityTypeBuilder<BudgetRewardHeader> builder)
        {
            builder.ToTable("BudgetRewardHeader", "Pay");
            builder.HasKey(x => x.Id).HasName("PK_BudgetRewardHeader").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.StartYearMonth).HasColumnName(@"StartYearMonth").HasColumnType("int").IsRequired();
            builder.Property(x => x.EndYearMonth).HasColumnName(@"EndYearMonth").HasColumnType("int").IsRequired();
            builder.Property(x => x.MinRewardPerPerson).HasColumnName(@"MinRewardPerPerson").HasColumnType("bigint").IsRequired();
            builder.Property(x => x.MaxRewardPerPerson).HasColumnName(@"MaxRewardPerPerson").HasColumnType("bigint").IsRequired();
            builder.Property(x => x.BudgetRewardTypeId).HasColumnName(@"BudgetRewardTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsConfirmed).HasColumnName(@"IsConfirmed").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.DomainName).HasColumnName(@"DomainName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);

            // Foreign keys
            builder.HasOne(a => a.BudgetRewardType).WithMany(b => b.BudgetRewardHeaders).HasForeignKey(c => c.BudgetRewardTypeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_BudgetRewardHeader_BudgetRewardType");
        }
    }

}
// </auto-generated>
