// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Pay;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.Hr.Data.Persistant.Configurations.Pay

{
    // EmployeeDeductionHeader
    public class EmployeeDeductionHeaderConfiguration : IEntityTypeConfiguration<EmployeeDeductionHeader>
    {
        public void Configure(EntityTypeBuilder<EmployeeDeductionHeader> builder)
        {
            builder.ToTable("EmployeeDeductionHeader", "Pay");
            builder.HasKey(x => x.Id).HasName("PK_EmployeeDeductionHeader").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.EmployeeId).HasColumnName(@"EmployeeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.EmployeeDeductionTypeId).HasColumnName(@"EmployeeDeductionTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.TotalDeductionAmount).HasColumnName(@"TotalDeductionAmount").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.TotalSaveAmount).HasColumnName(@"TotalSaveAmount").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.LoanAmount).HasColumnName(@"LoanAmount").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.PayableLoanAmount).HasColumnName(@"PayableLoanAmount").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.InstallmentCount).HasColumnName(@"InstallmentCount").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.DomainName).HasColumnName(@"DomainName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.EndDate).HasColumnName(@"EndDate").HasColumnType("date").IsRequired(false);
            builder.Property(x => x.AccountCodeId).HasColumnName(@"AccountCodeId").HasColumnType("int").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.Employee).WithMany(b => b.EmployeeDeductionHeaders).HasForeignKey(c => c.EmployeeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeeDeductionHeader_Employee");
            builder.HasOne(a => a.EmployeeDeductionType).WithMany(b => b.EmployeeDeductionHeaders).HasForeignKey(c => c.EmployeeDeductionTypeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeeDeductionHeader_EmployeeDeductionType");
            builder.HasOne(a => a.AccountCode).WithMany(b => b.EmployeeDeductionHeaders).HasForeignKey(c => c.AccountCodeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeeDeductionHeader_AccountCode");

        }
    }

}
// </auto-generated>
