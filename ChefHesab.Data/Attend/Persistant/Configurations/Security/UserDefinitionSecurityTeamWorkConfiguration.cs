// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Security;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.HR.Data.Persistant.Configurations

{
    // UserDefinitionSecurityTeamWork
    public class UserDefinitionSecurityTeamWorkConfiguration : IEntityTypeConfiguration<UserDefinitionSecurityTeamWork>
    {
        public void Configure(EntityTypeBuilder<UserDefinitionSecurityTeamWork> builder)
        {
            builder.ToTable("UserDefinitionSecurityTeamWork", "Security");
            builder.HasKey(x => x.Id).HasName("PK_EmployeeSecurityTeamWork").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.TeamWorkId).HasColumnName(@"TeamWorkId").HasColumnType("int").IsRequired();
            builder.Property(x => x.UserDefinitionSecurityPriorityStatusId).HasColumnName(@"UserDefinitionSecurityPriorityStatusId").HasColumnType("int").IsRequired();
            builder.Property(x => x.UserDefinitionId).HasColumnName(@"UserDefinitionId").HasColumnType("int").IsRequired();
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.UserDefinition).WithMany(b => b.UserDefinitionSecurityTeamWorks).HasForeignKey(c => c.UserDefinitionId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_UserDefinitionSecurityTeamWork_UserDefinition");
            builder.HasOne(a => a.UserDefinitionSecurityPriorityStatus).WithMany(b => b.UserDefinitionSecurityTeamWorks).HasForeignKey(c => c.UserDefinitionSecurityPriorityStatusId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_UserDefinitionSecurityTeamWork_UserDefinitionSecurityPriorityStatus");
            builder.HasOne(a => a.TeamWork).WithMany(b => b.UserDefinitionSecurityTeamWorks).HasForeignKey(c => c.TeamWorkId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_UserDefinitionSecurityTeamWork_TeamWork");
        }
    }

}
// </auto-generated>
