// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.EmployeeBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.Hr.Data.Persistant.Configurations.EmployeeBase
{
    // ConditionalAbsenceSubjectType
    public class ConditionalAbsenceSubjectTypeConfiguration : IEntityTypeConfiguration<ConditionalAbsenceSubjectType>
    {
        public void Configure(EntityTypeBuilder<ConditionalAbsenceSubjectType> builder)
        {
            builder.ToTable("ConditionalAbsenceSubjectType", "EmployeeBase");
            builder.HasKey(x => x.Id).HasName("PK_ConditionalAbsenceSubjectType").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.ConditionalAbsenceTypeId).HasColumnName(@"ConditionalAbsenceTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.ConditionalAbsenceSubjectId).HasColumnName(@"ConditionalAbsenceSubjectId").HasColumnType("int").IsRequired();
            builder.Property(x => x.RollCallDefinitionId).HasColumnName(@"RollCallDefinitionId").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.HasForcedOvertime).HasColumnName(@"HasForcedOvertime").HasColumnType("bit").IsRequired();
            // Foreign keys
            builder.HasOne(a => a.ConditionalAbsenceSubject).WithMany(b => b.ConditionalAbsenceSubjectTypes).HasForeignKey(c => c.ConditionalAbsenceSubjectId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ConditionalAbsenceSubjectType_ConditionalAbsenceSubject");
            builder.HasOne(a => a.ConditionalAbsenceType).WithMany(b => b.ConditionalAbsenceSubjectTypes).HasForeignKey(c => c.ConditionalAbsenceTypeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ConditionalAbsenceSubjectType_ConditionalAbsenceType");
            builder.HasOne(a => a.RollCallDefinition).WithMany(b => b.ConditionalAbsenceSubjectTypes).HasForeignKey(c => c.RollCallDefinitionId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ConditionalAbsenceSubjectType_RollCallDefinition");
        }
    }

}
// </auto-generated>
