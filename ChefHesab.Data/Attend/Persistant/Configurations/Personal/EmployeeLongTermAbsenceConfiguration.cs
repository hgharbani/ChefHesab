// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Personal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;


namespace Ksc.HR.Data.Persistant.Configurations
{
    // EmployeeLongTermAbsence
    public class EmployeeLongTermAbsenceConfiguration : IEntityTypeConfiguration<EmployeeLongTermAbsence>
    {
        public void Configure(EntityTypeBuilder<EmployeeLongTermAbsence> builder)
        {
            builder.ToTable("EmployeeLongTermAbsence", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_EpmloyeeLongTermAbsence").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.EmployeeId).HasColumnName(@"EmployeeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.AbsenceStartDate).HasColumnName(@"AbsenceStartDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.AbsenceEndDate).HasColumnName(@"AbsenceEndDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.AbsenceDayCount).HasColumnName(@"AbsenceDayCount").HasColumnType("int").IsRequired();
            builder.Property(x => x.RollCallDefinitionId).HasColumnName(@"RollCallDefinitionId").HasColumnType("int").IsRequired();
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);

            // Foreign keys
            builder.HasOne(a => a.Employee).WithMany(b => b.EmployeeLongTermAbsences).HasForeignKey(c => c.EmployeeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeeLongTermAbsence_Employee");
            builder.HasOne(a => a.RollCallDefinition).WithMany(b => b.EmployeeLongTermAbsences).HasForeignKey(c => c.RollCallDefinitionId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeeLongTermAbsence_RollCallDefinition");
        }
    }

}
// </auto-generated>
