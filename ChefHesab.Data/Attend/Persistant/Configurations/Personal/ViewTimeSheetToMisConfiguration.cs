// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Personal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.HR.Data.Persistant.Configurations
{
    // View_TimeSheetToMIS
    public class ViewTimeSheetToMisConfiguration : IEntityTypeConfiguration<ViewTimeSheetToMis>
    {
        public void Configure(EntityTypeBuilder<ViewTimeSheetToMis> builder)
        {
            builder.ToView("View_TimeSheetToMIS", "dbo");
            builder.HasKey(x => x.Id);
            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.EmployeeNumber).HasColumnName(@"EmployeeNumber").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.IncludedDefinitionId).HasColumnName(@"IncludedDefinitionId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DurationInHour).HasColumnName(@"DurationInHour").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DurationInDay).HasColumnName(@"DurationInDay").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DurationInHourFormatted).HasColumnName(@"DurationInHourFormatted").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.WorkTimeId).HasColumnName(@"WorkTimeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DayCount).HasColumnName(@"DayCount").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ShiftBenefitInMinute).HasColumnName(@"ShiftBenefitInMinute").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.RollCallDefinitionId).HasColumnName(@"RollCallDefinitionId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DurationInMinut).HasColumnName(@"DurationInMinut").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DayCountInDailyTimeSheet).HasColumnName(@"DayCountInDailyTimeSheet").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Duration).HasColumnName(@"Duration").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.SalaryAccountCode).HasColumnName(@"SalaryAccountCode").HasColumnType("numeric(4,0)").HasPrecision(4,0).IsRequired();
            builder.Property(x => x.EmployeeId).HasColumnName(@"EmployeeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.YearMonth).HasColumnName(@"YearMonth").HasColumnType("int").IsRequired();
            builder.Property(x => x.PaymentStatusId).HasColumnName(@"PaymentStatusId").HasColumnType("int").IsRequired();
            builder.Property(x => x.WorkGroupId).HasColumnName(@"WorkGroupId").HasColumnType("int").IsRequired();
            builder.Property(x => x.ExcessOverTime).HasColumnName(@"ExcessOverTime").HasColumnType("char(6)").IsRequired(false).IsFixedLength().IsUnicode(false).HasMaxLength(6);
            builder.Property(x => x.SumInvalidOverTimInDailyTimeSheet).HasColumnName(@"SumInvalidOverTimInDailyTimeSheet").HasColumnType("char(6)").IsRequired(false).IsFixedLength().IsUnicode(false).HasMaxLength(6);
            builder.Property(x => x.AverageBalanceOverTime).HasColumnName(@"AverageBalanceOverTime").HasColumnType("char(6)").IsRequired(false).IsFixedLength().IsUnicode(false).HasMaxLength(6);
            builder.Property(x => x.ExcessOverTimeOld).HasColumnName(@"ExcessOverTimeOld").HasColumnType("char(6)").IsRequired(false).IsFixedLength().IsUnicode(false).HasMaxLength(6);
            builder.Property(x => x.EmploymentTypeId).HasColumnName(@"EmploymentTypeId").HasColumnType("int").IsRequired(false);
            
        }
    }

}
// </auto-generated>
