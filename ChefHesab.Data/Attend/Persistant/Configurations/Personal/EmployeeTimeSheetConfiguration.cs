// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Personal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.HR.Data.Persistant.Configurations
{
    // EmployeeTimeSheet
    public class EmployeeTimeSheetConfiguration : IEntityTypeConfiguration<EmployeeTimeSheet>
    {
        public void Configure(EntityTypeBuilder<EmployeeTimeSheet> builder)
        {
            builder.ToTable("EmployeeTimeSheet", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_EmployeeTimeSheet").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.EmployeeId).HasColumnName(@"EmployeeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.YearMonth).HasColumnName(@"YearMonth").HasColumnType("int").IsRequired();
            builder.Property(x => x.CeilingOvertime).HasColumnName(@"CeilingOvertime").HasColumnType("int").IsRequired();
            builder.Property(x => x.ExcessOverTime).HasColumnName(@"ExcessOverTime").HasColumnType("int").IsRequired();
            builder.Property(x => x.ExcessOverTimeDuration).HasColumnName(@"ExcessOverTimeDuration").HasColumnType("char(6)").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(6);
            builder.Property(t => t.AverageBalanceOverTime).HasColumnName("AverageBalanceOverTime");
            builder.Property(t => t.AverageBalanceOverTimeDuration).HasColumnName("AverageBalanceOverTimeDuration");
            builder.Property(t => t.TrainingOverTime).HasColumnName("TrainingOverTime");
            builder.Property(t => t.TrainingOverTimeDuration).HasColumnName("TrainingOverTimeDuration");
            builder.Property(x => x.CompensatoryOverTime).HasColumnName(@"CompensatoryOverTime").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);


            // Foreign keys
            builder.HasOne(a => a.Employee).WithMany(b => b.EmployeeTimeSheets).HasForeignKey(c => c.EmployeeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeeTimeSheet_Employee");
        }
    }

}
// </auto-generated>
