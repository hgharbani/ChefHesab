// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ksc.HR.Domain.Entities.Workshift;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ksc.HR.Data.Persistant.Configurations
{
    public class WorkCompanySettingConfiguration : IEntityTypeConfiguration<WorkCompanySetting>
    {
        public void Configure(EntityTypeBuilder<WorkCompanySetting> builder)
        {
            builder.ToTable("WorkCompanySetting", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_WorkCompanyGroup").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.WorkTimeShiftConceptId).HasColumnName(@"WorkTimeShiftConceptId").HasColumnType("int").IsRequired();
            builder.Property(x => x.WorkCityId).HasColumnName(@"WorkCityId").HasColumnType("int").IsRequired();
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.DomainName).HasColumnName(@"DomainName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.RowVersion).HasColumnName(@"RowVersion").HasColumnType("timestamp(8)").IsRequired().IsFixedLength().HasMaxLength(8).IsRowVersion().IsConcurrencyToken();

            // Foreign keys
            builder.HasOne(a => a.WorkCity).WithMany(b => b.WorkCompanySettings).HasForeignKey(c => c.WorkCityId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_WorkCompanySetting_WorkCity");
            builder.HasOne(a => a.WorkTimeShiftConcept).WithMany(b => b.WorkCompanySettings).HasForeignKey(c => c.WorkTimeShiftConceptId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_WorkCompanySetting_WorkTimeShiftConcept");
        }
    }
}
