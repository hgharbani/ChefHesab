// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Workshift;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.HR.Data.Persistant.Configurations
{
    // RollCallWorkTimeMonthSetting
    public class RollCallWorkTimeMonthSettingConfiguration : IEntityTypeConfiguration<RollCallWorkTimeMonthSetting>
    {
        public void Configure(EntityTypeBuilder<RollCallWorkTimeMonthSetting> builder)
        {
            builder.ToTable("RollCallWorkTimeMonthSetting", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_RollCallWorkTimeMonthSetting").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.RollCallDefinitionId).HasColumnName(@"RollCallDefinitionId").HasColumnType("int").IsRequired();
            builder.Property(x => x.WorkTimeId).HasColumnName(@"WorkTimeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.DurationInMinute).HasColumnName(@"DurationInMinute").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.RollCallDefinition).WithMany(b => b.RollCallWorkTimeMonthSettings).HasForeignKey(c => c.RollCallDefinitionId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_RollCallWorkTimeMonthSetting_RollCallDefinition");
            builder.HasOne(a => a.WorkTime).WithMany(b => b.RollCallWorkTimeMonthSettings).HasForeignKey(c => c.WorkTimeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_RollCallWorkTimeMonthSetting_WorkTime");
        }
    }

}
// </auto-generated>
