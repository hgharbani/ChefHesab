// <auto-generated>
// ReSharper disable All


using Ksc.HR.Domain.Entities.Workshift;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

#nullable disable

namespace Ksc.HR.Data.Persistant.Configurations
{
    // WorkCompanyUnOfficialHolidayJobCategory
    public class WorkCompanyUnOfficialHolidayJobCategoryConfiguration : IEntityTypeConfiguration<WorkCompanyUnOfficialHolidayJobCategory>
    {
        public void Configure(EntityTypeBuilder<WorkCompanyUnOfficialHolidayJobCategory> builder)
        {
            builder.ToTable("WorkCompanyUnOfficialHolidayJobCategory", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_WorkCompanyUnOfficialHolidayJobCategory").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.WorkCompanyUnOfficialHolidaySettingId).HasColumnName(@"WorkCompanyUnOfficialHolidaySettingId").HasColumnType("int").IsRequired();
            builder.Property(x => x.CodeCategoryJobCategory).HasColumnName(@"CodeCategoryJobCategory").HasColumnType("nvarchar(2)").IsRequired().HasMaxLength(2);

            // Foreign keys
            builder.HasOne(a => a.WorkCompanyUnOfficialHolidaySetting).WithMany(b => b.WorkCompanyUnOfficialHolidayJobCategories).HasForeignKey(c => c.WorkCompanyUnOfficialHolidaySettingId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_WorkCompanyUnOfficialHolidayJobCategory_WorkCompanyUnOfficialHolidaySetting");
        }
    }

}
// </auto-generated>
