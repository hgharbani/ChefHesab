// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Workshift;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.HR.Data.Persistant.Configurations
{
    // InvalidDayTypeInForcedOvertime
    public class InvalidDayTypeInForcedOvertimeConfiguration : IEntityTypeConfiguration<InvalidDayTypeInForcedOvertime>
    {
        public void Configure(EntityTypeBuilder<InvalidDayTypeInForcedOvertime> builder)
        {
            builder.ToTable("InvalidDayTypeInForcedOvertime", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_InvalidDayTypeInForcedOvertime").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.WorkDayTypeId).HasColumnName(@"WorkDayTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.WorkTimeId).HasColumnName(@"WorkTimeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.DomainName).HasColumnName(@"DomainName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.WorkDayType).WithMany(b => b.InvalidDayTypeInForcedOvertimes).HasForeignKey(c => c.WorkDayTypeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_InvalidDayTypeInForcedOvertime_WorkDayType");
            builder.HasOne(a => a.WorkTime).WithMany(b => b.InvalidDayTypeInForcedOvertimes).HasForeignKey(c => c.WorkTimeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_InvalidDayTypeInForcedOvertime_WorkTime");
        }
    }

}
// </auto-generated>
