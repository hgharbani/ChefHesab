// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ksc.HR.Domain.Entities.Workshift;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ksc.HR.Data.Persistant.Configurations
{
    public class WorkTimeConfiguration : IEntityTypeConfiguration<WorkTime>
    {
        public void Configure(EntityTypeBuilder<WorkTime> builder)
        {
            builder.ToTable("WorkTime", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_WorkTime").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.Title).HasColumnName(@"Title").HasColumnType("nvarchar(200)").IsRequired().HasMaxLength(200);
            builder.Property(x => x.Code).HasColumnName(@"Code").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.WorkTimeCategoryId).HasColumnName(@"WorkTimeCategoryId").HasColumnType("int").IsRequired();
            builder.Property(x => x.RepetitionPeriod).HasColumnName(@"RepetitionPeriod").HasColumnType("int").IsRequired();
            builder.Property(x => x.PercentageWorkTime).HasColumnName(@"PercentageWorkTime").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.ShiftSettingFromShiftboard).HasColumnName(@"ShiftSettingFromShiftboard").HasColumnType("bit").IsRequired();
            builder.Property(x => x.MaximumForcedOverTime).HasColumnName(@"MaximumForcedOverTime").HasColumnType("char(5)").IsRequired(false).IsFixedLength().IsUnicode(false).HasMaxLength(5);
            builder.Property(x => x.OfficialUnOfficialHolidayFromWorkCalendar).HasColumnName(@"OfficialUnOfficialHolidayFromWorkCalendar").HasColumnType("bit").IsRequired();
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.DomainName).HasColumnName(@"DomainName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.RowVersion).HasColumnName(@"RowVersion").HasColumnType("timestamp(8)").IsRequired().IsFixedLength().HasMaxLength(8).IsRowVersion().IsConcurrencyToken();
            builder.Property(x => x.IdTemp).HasColumnName(@"IdTemp").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IsValidPlanningOnCall).HasColumnName(@"IsValidPlanningOnCall").HasColumnType("bit").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.WorkTimeCategory).WithMany(b => b.WorkTimes).HasForeignKey(c => c.WorkTimeCategoryId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_WorkTime_WorkTimeCategory");
        }
    }
}
