// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ksc.HR.Domain.Entities.Workshift;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ksc.HR.Data.Persistant.Configurations
{
    public partial class WorkCalendarConfiguration : IEntityTypeConfiguration<WorkCalendar>
    {
        public void Configure(EntityTypeBuilder<WorkCalendar> builder)
        {
            builder.ToTable("WorkCalendar", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_WorkCalendar").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.DateKey).HasColumnName(@"DateKey").HasColumnType("int").IsRequired();
            builder.Property(x => x.DayOfYear).HasColumnName(@"DayOfYear").HasColumnType("int").IsRequired();
            builder.Property(x => x.DayOfWeek).HasColumnName(@"DayOfWeek").HasColumnType("int").IsRequired();
            builder.Property(x => x.WeekOfYear).HasColumnName(@"WeekOfYear").HasColumnType("int").IsRequired();
            builder.Property(x => x.Month).HasColumnName(@"Month").HasColumnType("int").IsRequired();
            builder.Property(x => x.YearMonthV1).HasColumnName(@"YearMonthV1").HasColumnType("int").IsRequired();
            builder.Property(x => x.YearMonthV2).HasColumnName(@"YearMonthV2").HasColumnType("nvarchar(7)").IsRequired().HasMaxLength(7);
            builder.Property(x => x.SeasonName).HasColumnName(@"SeasonName").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.SeasonNumber).HasColumnName(@"SeasonNumber").HasColumnType("int").IsRequired();
            builder.Property(x => x.HalfYearName).HasColumnName(@"HalfYearName").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.HalfYearNumber).HasColumnName(@"HalfYearNumber").HasColumnType("int").IsRequired();
            builder.Property(x => x.ShamsiDateV1).HasColumnName(@"ShamsiDateV1").HasColumnType("nvarchar(10)").IsRequired().HasMaxLength(10);
            builder.Property(x => x.ShamsiDateV2).HasColumnName(@"ShamsiDateV2").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.MiladiDateV1).HasColumnName(@"MiladiDateV1").HasColumnType("date").IsRequired();
            builder.Property(x => x.MiladiDateV2).HasColumnName(@"MiladiDateV2").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.HijriDateV1).HasColumnName(@"HijriDateV1").HasColumnType("nvarchar(10)").IsRequired().HasMaxLength(10);
            builder.Property(x => x.HijriDateV2).HasColumnName(@"HijriDateV2").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.DayNameShamsi).HasColumnName(@"DayNameShamsi").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.DayNameMiladi).HasColumnName(@"DayNameMiladi").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.DayNameHijri).HasColumnName(@"DayNameHijri").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.MonthNameShamsiV1).HasColumnName(@"MonthNameShamsiV1").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.MonthNameMiladiV1).HasColumnName(@"MonthNameMiladiV1").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.MonthNameMiladiV2).HasColumnName(@"MonthNameMiladiV2").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.MonthNameHijriV1).HasColumnName(@"MonthNameHijriV1").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.DayOfMonthShamsi).HasColumnName(@"DayOfMonthShamsi").HasColumnType("int").IsRequired();
            builder.Property(x => x.DayOfMonthHijri).HasColumnName(@"DayOfMonthHijri").HasColumnType("int").IsRequired();
            builder.Property(x => x.DayOfMonthMiladi).HasColumnName(@"DayOfMonthMiladi").HasColumnType("int").IsRequired();
            builder.Property(x => x.MmddShamsi).HasColumnName(@"MMDDShamsi").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.MmddMiladi).HasColumnName(@"MMDDMiladi").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.MmddHijri).HasColumnName(@"MMDDHijri").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.YyyymmShamsi).HasColumnName(@"YYYYMMShamsi").HasColumnType("int").IsRequired();
            builder.Property(x => x.YyyymmMiladi).HasColumnName(@"YYYYMMMiladi").HasColumnType("int").IsRequired();
            builder.Property(x => x.YyyymmHijri).HasColumnName(@"YYYYMMHijri").HasColumnType("int").IsRequired();
            builder.Property(x => x.YyyyShamsi).HasColumnName(@"YYYYShamsi").HasColumnType("int").IsRequired();
            builder.Property(x => x.YyyyHijri).HasColumnName(@"YYYYHijri").HasColumnType("int").IsRequired();
            builder.Property(x => x.YyyyMiladi).HasColumnName(@"YYYYMiladi").HasColumnType("int").IsRequired();
            builder.Property(x => x.WorkDayTypeId).HasColumnName(@"WorkDayTypeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.SystemSequenceStatusId).HasColumnName(@"SystemSequenceStatusId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.RowVersion).HasColumnName(@"RowVersion").HasColumnType("timestamp(8)").IsRequired().IsFixedLength().HasMaxLength(8).IsRowVersion().IsConcurrencyToken();
            builder.HasOne(a => a.SystemSequenceStatus).WithMany(b => b.WorkCalendars).HasForeignKey(c => c.SystemSequenceStatusId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_WorkCalendar_SystemSequenceStatus");
            builder.HasOne(d => d.WorkDayType).WithMany(p => p.WorkCalendars).HasForeignKey(d => d.WorkDayTypeId).HasConstraintName("FK_WorkCalendar_WorkDayType");

            OnConfigurePartial(builder);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<WorkCalendar> entity);
    }
}
