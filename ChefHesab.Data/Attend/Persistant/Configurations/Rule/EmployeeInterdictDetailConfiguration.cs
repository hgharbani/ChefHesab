// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Rule;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.HR.Data.Persistant.Configurations
{
    // EmployeeInterdictDetail
    public class EmployeeInterdictDetailConfiguration : IEntityTypeConfiguration<EmployeeInterdictDetail>
    {
        public void Configure(EntityTypeBuilder<EmployeeInterdictDetail> builder)
        {
            builder.ToTable("EmployeeInterdictDetail", "Rule");
            builder.HasKey(x => x.Id).HasName("PK_EmployeeInterdictDetail").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.EmployeeInterdictId).HasColumnName(@"EmployeeInterdictId").HasColumnType("int").IsRequired();
            builder.Property(x => x.AccountCodeId).HasColumnName(@"AccountCodeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.Amount).HasColumnName(@"Amount").HasColumnType("bigint").IsRequired();
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.EmployeeInterdict).WithMany(b => b.EmployeeInterdictDetails).HasForeignKey(c => c.EmployeeInterdictId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeeInterdictDetail_EmployeeInterdict");
            builder.HasOne(a => a.AccountCode).WithMany(b => b.EmployeeInterdictDetails).HasForeignKey(c => c.AccountCodeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeeInterdictDetail_AccountCode");
        }
    }

}
// </auto-generated>
