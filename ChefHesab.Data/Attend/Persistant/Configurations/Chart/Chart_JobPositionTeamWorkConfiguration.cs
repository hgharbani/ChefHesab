// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Chart;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace testhr
{
    // JobPositionTeamWork
    public class Chart_JobPositionTeamWorkConfiguration : IEntityTypeConfiguration<Chart_JobPositionTeamWork>
    {
        public void Configure(EntityTypeBuilder<Chart_JobPositionTeamWork> builder)
        {
            builder.ToTable("JobPositionTeamWork", "Chart");
            builder.HasKey(x => x.Id).HasName("PK_JobPositionTeamWork").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.TeamWorkId).HasColumnName(@"TeamWorkId").HasColumnType("int").IsRequired();
            builder.Property(x => x.JobPositionId).HasColumnName(@"JobPositionId").HasColumnType("int").IsRequired();
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.DomainName).HasColumnName(@"DomainName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.Chart_JobPosition).WithMany(b => b.Chart_JobPositionTeamWorks).HasForeignKey(c => c.JobPositionId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_JobPositionTeamWork_JobPosition");

            builder.HasOne(a => a.TeamWork).WithMany(b => b.Chart_JobPositionTeamWorks).HasForeignKey(c => c.TeamWorkId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_JobPositionTeamWork_TeamWork");
        }
    }

}
// </auto-generated>
