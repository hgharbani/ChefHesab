// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Ksc.HR.Domain.Entities.Chart;

namespace Ksc.HR.Data.Persistant.Configurations.Chart
{
    // Structure
    public class Chart_StructureConfiguration : IEntityTypeConfiguration<Chart_Structure>
    {
        public void Configure(EntityTypeBuilder<Chart_Structure> builder)
        {
            builder.ToTable("Structure", "Chart");
            builder.HasKey(x => x.Id).HasName("PK_Structure").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.StructureTypeId).HasColumnName(@"StructureTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.ParentId).HasColumnName(@"ParentId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Title).HasColumnName(@"Title").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Code).HasColumnName(@"Code").IsRequired(false);
            builder.Property(x => x.MinCode).HasColumnName(@"MinCode").IsRequired(false);
            builder.Property(x => x.MaxCode).HasColumnName(@"MaxCode").IsRequired(false);
            builder.Property(x => x.StartDate).HasColumnName(@"StartDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.EndDate).HasColumnName(@"EndDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.MisJobPositionCode).HasColumnName(@"MisJobPositionCode").HasColumnType("nvarchar(100)").IsRequired(false);
            builder.Property(x => x.CodeRelations).HasColumnName(@"CodeRelations").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.NewCodeRelation).HasColumnName(@"NewCodeRelation").HasColumnType("nvarchar(max)").IsRequired(false);

            
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.LevelNumber).HasColumnName(@"LevelNumber").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.OldCode).HasColumnName(@"OldCode").HasColumnType("nvarchar(max)").IsRequired(false);
            // Foreign keys
            builder.HasOne(a => a.Chart_StructureType).WithMany(b => b.Chart_Structures).HasForeignKey(c => c.StructureTypeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Structure_StructureType");
            builder.HasOne(a => a.Parent).WithMany(b => b.Chart_Structures).HasForeignKey(c => c.ParentId).OnDelete(DeleteBehavior.ClientSetNull);

        }
    }

}
// </auto-generated>
