// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Ksc.HR.Domain.Entities.Chart;

namespace Ksc.HR.Data.Persistant.Configurations.Chart
{
    // JobPositionIncreasePercent
    public class Chart_JobPositionIncreasePercentConfiguration : IEntityTypeConfiguration<Chart_JobPositionIncreasePercent>
    {
        public void Configure(EntityTypeBuilder<Chart_JobPositionIncreasePercent> builder)
        {
            builder.ToTable("JobPositionIncreasePercent", "Chart");
            builder.HasKey(x => x.Id).HasName("PK_JobPositionIncreasePercent").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.CoefficientYearsDay).HasColumnName(@"CoefficientYearsDay").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.CoefficientYearsShift).HasColumnName(@"CoefficientYearsShift").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.StartDate).HasColumnName(@"StartDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.EndDate).HasColumnName(@"EndDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.JobPositioinId).HasColumnName(@"JobPositioinId").HasColumnType("int").IsRequired();

            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.Chart_JobPosition).WithMany(b => b.Chart_JobPositionIncreasePercents).HasForeignKey(c => c.JobPositioinId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_JobPositionIncreasePerson_JobPosition");
        }
    }

}
// </auto-generated>
