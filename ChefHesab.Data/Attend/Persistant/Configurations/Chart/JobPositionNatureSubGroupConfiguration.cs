// <auto-generated>
// ReSharper disable All
using Ksc.HR.Domain.Entities.Chart;

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.HR.Data.Persistant.Configurations.Chart
{
    // Education
    public class JobPositionNatureSubGroupConfiguration : IEntityTypeConfiguration<Chart_JobPositionNatureSubGroup>
    {
        public void Configure(EntityTypeBuilder<Chart_JobPositionNatureSubGroup> builder)
        {
            builder.ToTable("JobPositionNatureSubGroup", "Chart");
            builder.HasKey(x => x.Id).HasName("PK_JobPositionNatureSubGroup").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.JobPositionNatureId).HasColumnName(@"JobPositionNatureId").HasColumnType("int").IsRequired();
            builder.Property(x => x.Title).HasColumnName(@"Title").HasColumnType("nvarchar(200)").IsRequired().HasMaxLength(200);
            builder.Property(x => x.Code).HasColumnName(@"Code").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.GPercent).HasColumnName(@"GPercent").HasColumnType("decimal(18,2)").HasPrecision(18, 2).IsRequired(false);

            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.Chart_JobPositionNature).WithMany(b => b.Chart_JobPositionNatureSubGroups).HasForeignKey(c => c.JobPositionNatureId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_JobPositionNatureSubGroup_JobPositionNature");

        }
    }

}
// </auto-generated>
