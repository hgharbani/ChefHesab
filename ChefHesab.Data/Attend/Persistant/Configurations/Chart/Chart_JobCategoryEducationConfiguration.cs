// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Ksc.HR.Domain.Entities.Chart;

namespace Ksc.HR.Data.Persistant.Configurations.Chart
{
    // JobCategoryEducation
    public class Chart_JobCategoryEducationConfiguration : IEntityTypeConfiguration<Chart_JobCategoryEducation>
    {
        public void Configure(EntityTypeBuilder<Chart_JobCategoryEducation> builder)
        {
            builder.ToTable("JobCategoryEducation", "Chart");
            builder.HasKey(x => x.Id).HasName("PK_JobCategoryEducation").IsClustered();

            builder.Property(t => t.EducationCategoryId).HasColumnName("EducationCategoryId");
            builder.Property(t => t.JobCategoryId).HasColumnName("JobCategoryId");
            builder.Property(t => t.Experience).HasColumnName("Experience");
            builder.Property(t => t.InsertDate).HasColumnName("InsertDate");
            builder.Property(t => t.InsertUser).HasColumnName("InsertUser");
            builder.Property(t => t.UpdateDate).HasColumnName("UpdateDate");
            builder.Property(t => t.UpdateUser).HasColumnName("UpdateUser");
            builder.Property(t => t.IsActive).HasColumnName("IsActive");
            builder.Property(t => t.LevelNumber).HasColumnName("LevelNumber");
            builder.Property(t => t.GradeNumber).HasColumnName("GradeNumber");


            builder.HasOne(t => t.EducationCategory)
           .WithMany(t => t.Chart_JobCategoryEducations)
         .HasForeignKey(d => d.EducationCategoryId);

            builder.HasOne(t => t.Chart_JobCategory)
           .WithMany(t => t.Chart_JobCategoryEducations)
         .HasForeignKey(d => d.JobCategoryId);
        }
    }

}
// </auto-generated>
