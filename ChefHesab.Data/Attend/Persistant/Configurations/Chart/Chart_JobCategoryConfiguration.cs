// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Ksc.HR.Domain.Entities.Chart;

namespace Ksc.HR.Data.Persistant.Configurations.Chart
{
    // JobCategory
    public class Chart_JobCategoryConfiguration : IEntityTypeConfiguration<Chart_JobCategory>
    {
        public void Configure(EntityTypeBuilder<Chart_JobCategory> builder)
        {
            builder.ToTable("JobCategory", "Chart");
            builder.HasKey(x => x.Id).HasName("PK_JobCategory").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.Title).HasColumnName(@"Title").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.JobCategoryDefinationId).HasColumnName(@"JobCategoryDefinationId").HasColumnType("int").IsRequired();
            builder.Property(x => x.MinLevel).HasColumnName(@"MinLevel").HasColumnType("int").IsRequired();
            builder.Property(x => x.MaxLevel).HasColumnName(@"MaxLevel").HasColumnType("int").IsRequired();
            builder.Property(x => x.Code).HasColumnName(@"Code").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.AllowTransfer).HasColumnName(@"AllowTransfer").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            
            // Foreign keys
            builder.HasOne(a => a.Chart_JobCategoryDefination).WithMany(b => b.Chart_JobCategories).HasForeignKey(c => c.JobCategoryDefinationId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_JobCategory_JobCategoryDefination");
        }
    }

}
// </auto-generated>
