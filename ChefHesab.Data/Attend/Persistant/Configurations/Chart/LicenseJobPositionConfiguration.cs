// <auto-generated>
// ReSharper disable All
using Ksc.Hr.Domain.Entities;
using Ksc.HR.Domain.Entities.Chart;

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.HR.Data.Persistant.Configurations.Chart
{
    // LicenseJobPosition
    public class LicenseJobPositionConfiguration : IEntityTypeConfiguration<LicenseJobPosition>
    {
        public void Configure(EntityTypeBuilder<LicenseJobPosition> builder)
        {
            builder.ToTable("LicenseJobPosition", "Chart");
            builder.HasKey(x => x.Id).HasName("PK_LicenseJobPosition").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.LicenseTypeId).HasColumnName(@"LicenseTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.JobPositionId).HasColumnName(@"JobPositionId").HasColumnType("int").IsRequired();
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.CreateRemoteIpAddress).HasColumnName(@"CreateRemoteIpAddress").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.UpdateRemoteIpAddress).HasColumnName(@"UpdateRemoteIpAddress").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.CreateAuthenticateUserName).HasColumnName(@"CreateAuthenticateUserName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateAuthenticateUserName).HasColumnName(@"UpdateAuthenticateUserName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);

            //// Foreign keys
            builder.HasOne(a => a.JobPosition).WithMany(b => b.LicenseJobPositions).HasForeignKey(c => c.JobPositionId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_LicenseJobPosition_JobPosition");
            builder.HasOne(a => a.LicenseType).WithMany(b => b.LicenseJobPositions).HasForeignKey(c => c.LicenseTypeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_LicenseJobPosition_LicenseType");
        }
    }

}
// </auto-generated>
