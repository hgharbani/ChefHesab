// <auto-generated>
// ReSharper disable All
using Ksc.HR.Domain.Entities.Chart;

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.HR.Data.Persistant.Configurations.Chart
{
    // StructureTypeQuickAccess
    public class Chart_StructureTypeQuickAccessConfiguration : IEntityTypeConfiguration<Chart_StructureTypeQuickAccess>
    {
        public void Configure(EntityTypeBuilder<Chart_StructureTypeQuickAccess> builder)
        {
            builder.ToTable("StructureTypeQuickAccess", "Chart");
            builder.HasKey(x => x.Id).HasName("PK_StructureTypeQuickAccess").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.StructureTypeId).HasColumnName(@"StructureTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.Title).HasColumnName(@"Title").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.Chart_StructureType).WithMany(b => b.Chart_StructureTypeQuickAccesses).HasForeignKey(c => c.StructureTypeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_StructureTypeQuickAccess_StructureType");
        }
    }

}
// </auto-generated>
