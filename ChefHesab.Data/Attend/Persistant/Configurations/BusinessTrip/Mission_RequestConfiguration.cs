// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.BusinessTrip;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.HR.Data.Persistant.Configurations.BusinessTrip
{
    // Request
    public class Mission_RequestConfiguration : IEntityTypeConfiguration<Mission_Request>
    {
        public void Configure(EntityTypeBuilder<Mission_Request> builder)
        {
            builder.ToTable("Request", "Mission");
            builder.HasKey(x => x.Id).HasName("PK_Request_2").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.MissionStartDate).HasColumnName(@"MissionStartDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.MissionEndDate).HasColumnName(@"MissionEndDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.MissionSubject).HasColumnName(@"MissionSubject").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.MissionNumber).HasColumnName(@"MissionNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.MissionNumberOld).HasColumnName(@"MissionNumberOld").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.IssuanceMissionDate).HasColumnName(@"IssuanceMissionDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.IssuanceMissionDateOld).HasColumnName(@"IssuanceMissionDateOld").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.MissionDuration).HasColumnName(@"MissionDuration").HasColumnType("int").IsRequired();
            builder.Property(x => x.StandbyEmployeeId).HasColumnName(@"StandbyEmployeeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.WfRequestId).HasColumnName(@"WFRequestId").HasColumnType("int").IsRequired();
            builder.Property(x => x.MissionTypeId).HasColumnName(@"MissionTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.MissionCityId).HasColumnName(@"MissionCityId").HasColumnType("int").IsRequired();
            builder.Property(x => x.NeededTicket).HasColumnName(@"NeededTicket").HasColumnType("bit");
            builder.Property(x => x.NeededHotel).HasColumnName(@"NeededHotel").HasColumnType("bit").IsRequired();
            builder.Property(x => x.NeededEntryTicket).HasColumnName(@"NeededEntryTicket").HasColumnType("bit").IsRequired();
            builder.Property(x => x.NeededExitTicket).HasColumnName(@"NeededExitTicket").HasColumnType("bit").IsRequired();
            builder.Property(x => x.EntryDayTimeSettingId).HasColumnName(@"EntryDayTimeSettingId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ExitDayTimeSettingId).HasColumnName(@"ExitDayTimeSettingId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.NeededCar).HasColumnName(@"NeededCar").HasColumnType("bit").IsRequired();
            builder.Property(x => x.MissionLocationId).HasColumnName(@"MissionLocationId").HasColumnType("int").IsRequired();
            builder.Property(x => x.CostTravelInside).HasColumnName(@"CostTravelInside").HasColumnType("decimal(18,0)").HasPrecision(18, 0).IsRequired(false);
            builder.Property(x => x.CostHotel).HasColumnName(@"CostHotel").HasColumnType("decimal(18,0)").HasPrecision(18, 0).IsRequired(false);
            builder.Property(x => x.CostTicket).HasColumnName(@"CostTicket").HasColumnType("decimal(18,0)").HasPrecision(18, 0).IsRequired(false);
            builder.Property(x => x.UsedHotel).HasColumnName(@"UsedHotel").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.UsedEntryTicket).HasColumnName(@"UsedEntryTicket").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.UsedExitTicket).HasColumnName(@"UsedExitTicket").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.UsedBreakfast).HasColumnName(@"UsedBreakfast").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.UsedLunch).HasColumnName(@"UsedLunch").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.UsedDinner).HasColumnName(@"UsedDinner").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.TicketCount).HasColumnName(@"TicketCount").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TicketPrice).HasColumnName(@"TicketPrice").HasColumnType("decimal(18,0)").HasPrecision(18, 0).IsRequired(false);
            builder.Property(x => x.PlacePrice).HasColumnName(@"PlacePrice").HasColumnType("decimal(18,0)").HasPrecision(18, 0).IsRequired(false);
            builder.Property(x => x.TravelPrice).HasColumnName(@"TravelPrice").HasColumnType("decimal(18,0)").HasPrecision(18, 0).IsRequired(false);

            builder.Property(x => x.DestinationCity).HasColumnName(@"DestinationCity").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.SumCostTravel).HasColumnName(@"SumCostTravel").HasColumnType("decimal(18,0)").HasPrecision(18, 0).IsRequired(false);
            builder.Property(x => x.SumOtherCost).HasColumnName(@"SumOtherCost").HasColumnType("decimal(18,0)").HasPrecision(18, 0).IsRequired(false);
            builder.Property(x => x.ClassId).HasColumnName(@"ClassId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.MissionSummary).HasColumnName(@"MissionSummary").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.MissionCreateDirectly).HasColumnName(@"MissionCreateDirectly").HasColumnType("bit").IsRequired();
            builder.Property(x => x.HasMissionCost).HasColumnName(@"HasMissionCost").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.HasNoMissionReport).HasColumnName(@"HasNoMissionReport").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.DocumentCostStatusCode).HasColumnName(@"DocumentCostStatusCode").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PeymentDate).HasColumnName(@"PeymentDate").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IsPaid).HasColumnName(@"IsPaid").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.PaidDate).HasColumnName(@"PaidDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.NotPayStartDate).HasColumnName(@"NotPayStartDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.NotPayEndDate).HasColumnName(@"NotPayEndDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.MissionPaymentDayCount).HasColumnName(@"MissionPaymentDayCount").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ChangeRollCallMissionUser).HasColumnName(@"ChangeRollCallMissionUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.ChangeRollCallMissionDate).HasColumnName(@"ChangeRollCallMissionDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.ChangeRollCallMissionAuthenticateUserName).HasColumnName(@"ChangeRollCallMissionAuthenticateUserName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.ConfirmMissionPaymentOverMaxDay).HasColumnName(@"ConfirmMissionPaymentOverMaxDay").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.UserConfirmMissionPaymentOverMaxDay).HasColumnName(@"UserConfirmMissionPaymentOverMaxDay").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            // Foreign keys
            builder.HasOne(a => a.City).WithMany(b => b.Mission_Requests).HasForeignKey(c => c.MissionCityId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Request_City");
            builder.HasOne(a => a.Employee).WithMany(b => b.Mission_Requests).HasForeignKey(c => c.StandbyEmployeeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Request_Employee");
            builder.HasOne(a => a.EntryDayTimeSetting).WithMany(b => b.Mission_Requests_EntryDayTimeSettingId).HasForeignKey(c => c.EntryDayTimeSettingId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Request_EntryDayTimeSetting");
            builder.HasOne(a => a.ExitDayTimeSetting).WithMany(b => b.Mission_Requests_ExitDayTimeSettingId).HasForeignKey(c => c.ExitDayTimeSettingId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Request_ExitDayTimeSetting");
            builder.HasOne(a => a.Mission_Location).WithMany(b => b.Mission_Requests).HasForeignKey(c => c.MissionLocationId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Request_Location");
            builder.HasOne(a => a.Mission_Goal).WithMany(b => b.Mission_Requests).HasForeignKey(c => c.MissionGoalId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Request_Goal");
            builder.HasOne(a => a.Mission_Type).WithMany(b => b.Mission_Requests).HasForeignKey(c => c.MissionTypeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Request_Type");
            builder.HasOne(a => a.WF_Request).WithMany(b => b.Mission_Requests).HasForeignKey(c => c.WfRequestId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Request_WfRequest");

        }
    }

}
// </auto-generated>
