// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Log;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace sc.HR.Data.Persistant.Configurations.Log
{
    // LogData
    public class LogDataConfiguration : IEntityTypeConfiguration<LogData>
    {
        public void Configure(EntityTypeBuilder<LogData> builder)
        {
            builder.ToTable("LogData", "Log");
            builder.HasKey(x => x.Id).HasName("PK_Log").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.EntityId).HasColumnName(@"EntityId").HasColumnType("bigint").IsRequired();
            builder.Property(x => x.EntityTypeId).HasColumnName(@"EntityTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.Value).HasColumnName(@"Value").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.OperationTypeId).HasColumnName(@"OperationTypeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.AuthenticateUser).HasColumnName(@"AuthenticateUser").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.AuthorizeUser).HasColumnName(@"AuthorizeUser").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.EntityType).WithMany(b => b.LogDatas).HasForeignKey(c => c.EntityTypeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_LogData_EntityType");
            builder.HasOne(a => a.OperationType).WithMany(b => b.LogDatas).HasForeignKey(c => c.OperationTypeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_LogData_OperationType");
        }
    }

}
// </auto-generated>
