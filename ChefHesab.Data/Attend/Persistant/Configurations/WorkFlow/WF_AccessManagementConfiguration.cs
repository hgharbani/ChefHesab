// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.WorkFlow;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.HR.Data.Persistant.Configurations
{
    // AccessManagement
    public class WF_AccessManagementConfiguration : IEntityTypeConfiguration<WF_AccessManagement>
    {
        public void Configure(EntityTypeBuilder<WF_AccessManagement> builder)
        {
            builder.ToTable("AccessManagement", "WF");
            builder.HasKey(x => x.Id).HasName("PK_WF_AccessManagement").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.PersonId).HasColumnName(@"PersonId").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.RoleId).HasColumnName(@"RoleId").HasColumnType("int").IsRequired();
            builder.Property(x => x.StartDate).HasColumnName(@"StartDate").HasColumnType("date").IsRequired();
            builder.Property(x => x.EndDate).HasColumnName(@"EndDate").HasColumnType("date").IsRequired(false);
            builder.Property(x => x.ProcessId).HasColumnName(@"ProcessId").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.EnableSignatureImage).HasColumnName(@"EnableSignatureImage").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.DeletedUser).HasColumnName(@"DeletedUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.DeActiveDate).HasColumnName(@"DeActiveDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.DeActiveUser).HasColumnName(@"DeActiveUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.JobPositionCode).HasColumnName(@"JobPositionCode").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);

            // Foreign keys
            builder.HasOne(a => a.WF_Process).WithMany(b => b.WF_AccessManagements).HasForeignKey(c => c.ProcessId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_WF_AccessManagement_WF_Process");
            builder.HasOne(a => a.WF_Role).WithMany(b => b.WF_AccessManagements).HasForeignKey(c => c.RoleId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_WF_AccessManagement_WF_Role");
        }
    }

}
// </auto-generated>
