// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Emp;
using Ksc.HR.Domain.Entities.Personal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.HR.Data.Persistant.Configurations.Emp

{
    // EmployeePaymentStatus
    public class EmployeePaymentStatusConfiguration : IEntityTypeConfiguration<EmployeePaymentStatus>
    {
        public void Configure(EntityTypeBuilder<EmployeePaymentStatus> builder)
        {
            builder.ToTable("EmployeePaymentStatus", "Emp");
            builder.HasKey(x => new { x.Id, x.EmployeeId, x.PaymentStatusId, x.YearMonth });

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.EmployeeId).HasColumnName(@"EmployeeId").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.PaymentStatusId).HasColumnName(@"PaymentStatusId").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.YearMonth).HasColumnName(@"YearMonth").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);

            // Foreign keys

            builder.HasOne(a => a.Employee).WithMany(b => b.EmployeePaymentStatus).HasForeignKey(c => c.EmployeeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeePaymentStatus_Employee");
            builder.HasOne(a => a.PaymentStatus).WithMany(b => b.EmployeePaymentStatus).HasForeignKey(c => c.PaymentStatusId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeePaymentStatus_PaymentStatus");
        }
    }

}
// </auto-generated>
