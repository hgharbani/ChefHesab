//// <auto-generated>
//// ReSharper disable All

//using Microsoft.EntityFrameworkCore;
//using Microsoft.EntityFrameworkCore.Metadata.Builders;

//namespace testhr
//{
//    // EmployeeVacationSold
//    public class EmployeeVacationSoldConfiguration : IEntityTypeConfiguration<EmployeeVacationSold>
//    {
//        public void Configure(EntityTypeBuilder<EmployeeVacationSold> builder)
//        {
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Ksc.Hr.Domain.Entities;
namespace Ksc.Hr.Data.Persistant.Configurations
{
    public class EmployeeVacationSoldMap : IEntityTypeConfiguration<EmployeeVacationSold>
    {
        public void Configure(EntityTypeBuilder<EmployeeVacationSold> builder)
        {
            builder.ToTable("EmployeeVacationSold", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_EmployeeVacationSold").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn(); builder.Property(x => x.EmployeeId).HasColumnName(@"EmployeeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.DaysSold).HasColumnName(@"DaysSold").HasColumnType("int").IsRequired();
            builder.Property(x => x.PriceSold).HasColumnName(@"PriceSold").HasColumnType("decimal(12,0)").HasPrecision(12,0).IsRequired();
            builder.Property(x => x.PricePerDay).HasColumnName(@"PricePerDay").HasColumnType("decimal(12,0)").HasPrecision(12,0).IsRequired();
            builder.Property(x => x.YearMonth).HasColumnName(@"YearMonth").HasColumnType("int").IsRequired();
            builder.Property(x => x.RemoteIpAddress).HasColumnName(@"RemoteIpAddress").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.AuthenticateUserName).HasColumnName(@"AuthenticateUserName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(t => t.RemainingLastYear).HasColumnName("RemainingLastYear");
            builder.Property(t => t.RemainingLastYearDuration).HasColumnType("float").HasColumnName("RemainingLastYearDuration");
            builder.Property(t => t.RemainingCurrentYear).HasColumnName("RemainingCurrentYear");
            builder.Property(t => t.RemainingCurrentYearDuration).HasColumnType("float").HasColumnName("RemainingCurrentYearDuration");
            // Foreign keys
            builder.HasOne(a => a.Employee).WithMany(b => b.EmployeeVacationSolds).HasForeignKey(c => c.EmployeeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeeVacationSold_Employee");
        }
    }

}
// </auto-generated>
