// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Emp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.Hr.Data.Persistant.Configurations
{
    // EmployeeHistoryTypeEmployement
    public class EmployeeHistoryTypeEmployementConfiguration : IEntityTypeConfiguration<EmployeeHistoryTypeEmployement>
    {
        public void Configure(EntityTypeBuilder<EmployeeHistoryTypeEmployement> builder)
        {
            builder.ToTable("EmployeeHistoryTypeEmployement", "Emp");
            builder.HasKey(x => x.Id).HasName("PK_EmployeeHistoryTypeEmployement").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.EmployeeId).HasColumnName(@"EmployeeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.HistoryTypeEmployementId).HasColumnName(@"HistoryTypeEmployementId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Duration).HasColumnName(@"Duration").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.Employee).WithMany(b => b.EmployeeHistoryTypeEmployements).HasForeignKey(c => c.EmployeeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeeHistoryTypeEmployement_Employee");
            builder.HasOne(a => a.HistoryTypeEmployement).WithMany(b => b.EmployeeHistoryTypeEmployements).HasForeignKey(c => c.HistoryTypeEmployementId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeeHistoryTypeEmployement_HistoryTypeEmployement");
        }
    }

}
// </auto-generated>
