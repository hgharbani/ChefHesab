// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.Hr.Data.Persistant.Configurations
{
    // EmployeeVacationHistory
    public class EmployeeVacationHistoryConfiguration : IEntityTypeConfiguration<EmployeeVacationHistory>
    {
        public void Configure(EntityTypeBuilder<EmployeeVacationHistory> builder)
        {

            builder.ToTable("EmployeeVacationHistory", "Emp");
            builder.HasKey(x => x.Id).HasName("PK_EmployeeVacationHistory").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.EmployeeId).HasColumnName(@"EmployeeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.YearMonth).HasColumnName(@"YearMonth").HasColumnType("int").IsRequired();
            builder.Property(x => x.LastYearVacationRemaining).HasColumnName(@"LastYearVacationRemaining").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CurrentYearMerit).HasColumnName(@"CurrentYearMerit").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CurrentMonthMerit).HasColumnName(@"CurrentMonthMerit").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.UsedCurrentYear).HasColumnName(@"UsedCurrentYear").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.UsedCurrentMonth).HasColumnName(@"UsedCurrentMonth").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.MeritVacationRemaining).HasColumnName(@"MeritVacationRemaining").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.UvVacation).HasColumnName(@"UVVacation").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.YearExtraVacation).HasColumnName(@"YearExtraVacation").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CurrentMonthVacationRemaining).HasColumnName(@"CurrentMonthVacationRemaining").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.JanbaziMonthMeritVacation).HasColumnName(@"JanbaziMonthMeritVacation").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.JanbaziCurrentYearMerit).HasColumnName(@"JanbaziCurrentYearMerit").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IsComplete).HasColumnName(@"IsComplete").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.UvRatio).HasColumnName(@"UVRatio").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.UvFinalVacation).HasColumnName(@"UVFinalVacation").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BuyBackVacation).HasColumnName(@"BuyBackVacation").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);

            // Foreign keys
            builder.HasOne(a => a.Employee).WithMany(b => b.EmployeeVacationHistorys).HasForeignKey(c => c.EmployeeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeeVacationHistory_Employee");

            builder.HasIndex(x => new { x.EmployeeId, x.YearMonth }).HasDatabaseName("uq_EmployeeVacationHistory").IsUnique();
        }
    }

}
// </auto-generated>
