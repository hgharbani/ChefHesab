// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Emp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.Hr.Data.Persistant.Configurations.Emp
{
    // EmployeeEducationDegree
    public class EmployeeEducationDegreeConfiguration : IEntityTypeConfiguration<EmployeeEducationDegree>
    {
        public void Configure(EntityTypeBuilder<EmployeeEducationDegree> builder)
        {
            builder.ToTable("EmployeeEducationDegree", "Emp");
            builder.HasKey(x => x.Id).HasName("PK_EmployeeAccountBank").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.EmployeeId).HasColumnName(@"EmployeeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.EducationId).HasColumnName(@"EducationId").HasColumnType("int").IsRequired();
            builder.Property(x => x.StudyFieldId).HasColumnName(@"StudyFieldId").HasColumnType("int").IsRequired();
            builder.Property(x => x.EducationDate).HasColumnName(@"EducationDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.Education).WithMany(b => b.EmployeeEducationDegrees).HasForeignKey(c => c.EducationId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeeEducationDegree_Education");
            builder.HasOne(a => a.Employee).WithMany(b => b.EmployeeEducationDegrees).HasForeignKey(c => c.EmployeeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeeEducationDegree_Employee");
            builder.HasOne(a => a.StudyField).WithMany(b => b.EmployeeEducationDegrees).HasForeignKey(c => c.StudyFieldId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeeEducationDegree_StudyField");
        }
    }

}
// </auto-generated>
