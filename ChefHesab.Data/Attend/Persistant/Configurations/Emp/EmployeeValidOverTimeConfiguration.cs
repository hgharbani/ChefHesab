// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities;
using Ksc.HR.Domain.Entities.Emp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.Hr.Data.Persistant.Configurations
{
    // EmployeeValidOverTime
    public class EmployeeValidOverTimeConfiguration : IEntityTypeConfiguration<EmployeeValidOverTime>
    {
        public void Configure(EntityTypeBuilder<EmployeeValidOverTime> builder)
        {
            builder.ToTable("EmployeeValidOverTime", "Emp");
            builder.HasKey(x => x.Id).HasName("PK_EmployeeValidOverTime").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.EmployeeId).HasColumnName(@"EmployeeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.WorkCalendarId).HasColumnName(@"WorkCalendarId").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            builder.Property(x => x.CreateUser).HasColumnName(@"CreateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.DeletedUser).HasColumnName(@"DeletedUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CreateRemoteIpAddress).HasColumnName(@"CreateRemoteIpAddress").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.UpdateRemoteIpAddress).HasColumnName(@"UpdateRemoteIpAddress").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.DeletedRemoteIpAddress).HasColumnName(@"DeletedRemoteIpAddress").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.CreateAuthenticateUserName).HasColumnName(@"CreateAuthenticateUserName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateAuthenticateUserName).HasColumnName(@"UpdateAuthenticateUserName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.DeletedAuthenticateUserName).HasColumnName(@"DeletedAuthenticateUserName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);

            // Foreign keys
            builder.HasOne(a => a.Employee).WithMany(b => b.EmployeeValidOverTimes).HasForeignKey(c => c.EmployeeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeeValidOverTime_Employee");
            builder.HasOne(a => a.WorkCalendar).WithMany(b => b.EmployeeValidOverTimes).HasForeignKey(c => c.WorkCalendarId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeeValidOverTime_WorkCalendar");
        }
    }

}
// </auto-generated>
