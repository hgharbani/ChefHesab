// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Emp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.Hr.Data.Persistant.Configurations
{
    // EmployeeDateInformation
    public class EmployeeDateInformationConfiguration : IEntityTypeConfiguration<EmployeeDateInformation>
    {
        public void Configure(EntityTypeBuilder<EmployeeDateInformation> builder)
        {
            builder.ToTable("EmployeeDateInformation", "Emp");
            builder.HasKey(x => x.Id).HasName("PK_EmployeeDateInformation").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();

            builder.Property(x => x.EmployeeId).HasColumnName(@"EmployeeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.LastUpgradeDate).HasColumnName(@"LastUpgradeDate").HasColumnType("date").IsRequired(false);
            builder.Property(x => x.EducationConvertDate).HasColumnName(@"EducationConvertDate").HasColumnType("date").IsRequired(false);
            builder.Property(x => x.UpgrateCategoryJobDate).HasColumnName(@"UpgrateCategoryJobDate").HasColumnType("date").IsRequired(false);
            builder.Property(x => x.UpgrateGroupDateByChangePost).HasColumnName(@"UpgrateGroupDateByChangePost").HasColumnType("date").IsRequired(false);
            builder.Property(x => x.ValidEmploymentHistoryAsDays).HasColumnName(@"ValidEmploymentHistoryAsDays").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DisconnectDurationAsDays).HasColumnName(@"DisconnectDurationAsDays").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.MilitaryDurationAsDays).HasColumnName(@"MilitaryDurationAsDays").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.OutCompanyDurationAsDays).HasColumnName(@"OutCompanyDurationAsDays").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.InCompanyDurationAsDays).HasColumnName(@"InCompanyDurationAsDays").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.StatusMatch).HasColumnName(@"StatusMatch").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.UnPaidDisconnectDurationAsDays).HasColumnName(@"UnPaidDisconnectDurationAsDays").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DeductionOfFourYearsOutCompanyAsDays).HasColumnName(@"DeductionOfFourYearsOutCompanyAsDays").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.AbsenceDisconnectDurationAsDays).HasColumnName(@"AbsenceDisconnectDurationAsDays").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IncreasesYearsAsDays).HasColumnName(@"IncreasesYearsAsDays").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UpdateUser).HasColumnName(@"UpdateUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);

            // Foreign keys
            builder.HasOne(a => a.Employee).WithMany(b => b.EmployeeDateInformations).HasForeignKey(c => c.EmployeeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EmployeeDateInformation_Employee");
        }
    }

}
// </auto-generated>
