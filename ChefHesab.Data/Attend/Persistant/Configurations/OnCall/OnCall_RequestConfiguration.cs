// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Oncall;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.HR.Data.Persistant.Configurations
{
    // Request
    public class OnCall_RequestConfiguration : IEntityTypeConfiguration<OnCall_Request>
    {
        public void Configure(EntityTypeBuilder<OnCall_Request> builder)
        {
            builder.ToTable("Request", "OnCall");
            builder.HasKey(x => x.Id).HasName("PK_OnCallRequest").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.OnCallTypeIdPrev).HasColumnName(@"OnCallTypeIdPrev").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.OnCallTypeId).HasColumnName(@"OnCallTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.RequestId).HasColumnName(@"RequestId").HasColumnType("int").IsRequired();
            builder.Property(x => x.JobPositionCode).HasColumnName(@"JobPositionCode").HasColumnType("nvarchar(13)").IsRequired().HasMaxLength(13);
            builder.Property(x => x.WorkTimeId).HasColumnName(@"WorkTimeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.OnCallDate).HasColumnName(@"OnCallDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.OnCallReason).HasColumnName(@"OnCallReason").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.CallingCostCenter).HasColumnName(@"CallingCostCenter").HasColumnType("numeric(6,0)").HasPrecision(6,0).IsRequired();
            builder.Property(x => x.CallingSubFunctionCode).HasColumnName(@"CallingSubFunctionCode").HasColumnType("numeric(4,0)").HasPrecision(4,0).IsRequired();
            builder.Property(x => x.OnCallStartDate).HasColumnName(@"OnCallStartDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.OnCallStartTime).HasColumnName(@"OnCallStartTime").HasColumnType("char(5)").IsRequired(false).IsFixedLength().IsUnicode(false).HasMaxLength(5);
            builder.Property(x => x.OnCallEndDate).HasColumnName(@"OnCallEndDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.OnCallEndTime).HasColumnName(@"OnCallEndTime").HasColumnType("char(5)").IsRequired(false).IsFixedLength().IsUnicode(false).HasMaxLength(5);
            builder.Property(x => x.OnCallDuration).HasColumnName(@"OnCallDuration").HasColumnType("char(5)").IsRequired(false).IsFixedLength().IsUnicode(false).HasMaxLength(5);
            builder.Property(x => x.OnCallDurationInMinute).HasColumnName(@"OnCallDurationInMinute").HasColumnType("int").IsRequired(false);
            //builder.Property(x => x.SuperiorJobPositionCode).HasColumnName(@"SuperiorJobPositionCode").HasColumnType("nvarchar(13)").IsRequired(false).HasMaxLength(13);

            // Foreign keys
            builder.HasOne(a => a.OnCall_Type).WithMany(b => b.OnCall_Requests).HasForeignKey(c => c.OnCallTypeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_OnCallRequest_OnCallType");
            builder.HasOne(a => a.WF_Request).WithMany(b => b.OnCall_Requests).HasForeignKey(c => c.RequestId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_OnCallRequest_WF_Request");
        }
    }

}
// </auto-generated>
