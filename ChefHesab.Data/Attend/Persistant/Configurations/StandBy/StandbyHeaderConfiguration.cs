// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.ScheduledLoger;
using Ksc.HR.Domain.Entities.StandBy;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.HR.Data.Persistant.Configurations
{
    // StandbyHeader
    public class StandbyHeaderConfiguration : IEntityTypeConfiguration<StandbyHeader>
    {
        public void Configure(EntityTypeBuilder<StandbyHeader> builder)
        {
            builder.ToTable("StandbyHeader", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_StandbyHeader").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.WfRequestId).HasColumnName(@"WfRequestId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.YearMonth).HasColumnName(@"YearMonth").HasColumnType("int").IsRequired();
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.InsertAuthenticateUserName).HasColumnName(@"InsertAuthenticateUserName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);

            // Foreign keys
            builder.HasOne(a => a.WF_Request).WithMany(b => b.StandbyHeaders).HasForeignKey(c => c.WfRequestId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_StandbyHeader_Request");
        }
    }
}
// </auto-generated>







