// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Stepper;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace sc.HR.Data.Persistant.Configurations.Stepper
{
    // ProcedureAccessLevel
    public class Stepper_ProcedureAccessLevelConfiguration : IEntityTypeConfiguration<Stepper_ProcedureAccessLevel>
    {
        public void Configure(EntityTypeBuilder<Stepper_ProcedureAccessLevel> builder)
        {
            builder.ToTable("ProcedureAccessLevel", "Stepper");
            builder.HasKey(x => x.Id).HasName("PK_ProcedureAccessLevel").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.AccessLevelId).HasColumnName(@"AccessLevelId").HasColumnType("int").IsRequired();
            builder.Property(x => x.ProcedureId).HasColumnName(@"ProcedureId").HasColumnType("int").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.AccessLevel).WithMany(b => b.Stepper_ProcedureAccessLevels).HasForeignKey(c => c.AccessLevelId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ProcedureAccessLevel_AccessLevel");
            builder.HasOne(a => a.Stepper_Procedure).WithMany(b => b.Stepper_ProcedureAccessLevels).HasForeignKey(c => c.ProcedureId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ProcedureAccessLevel_Procedure");
        }
    }

}
// </auto-generated>
