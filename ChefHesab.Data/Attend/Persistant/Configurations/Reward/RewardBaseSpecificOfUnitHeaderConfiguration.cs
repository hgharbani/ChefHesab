// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Reward;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.HR.Data.Persistant.Configurations

{
    // RewardBaseSpecificOfUnitHeader
    public class RewardBaseSpecificOfUnitHeaderConfiguration : IEntityTypeConfiguration<RewardBaseSpecificOfUnitHeader>
    {
        public void Configure(EntityTypeBuilder<RewardBaseSpecificOfUnitHeader> builder)
        {
            builder.ToTable("RewardBaseSpecificOfUnitHeader", "Reward");
            builder.HasKey(x => x.Id).HasName("PK_RewardBaseSpecificOfUnitHeader").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.YearMonth).HasColumnName(@"YearMonth").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BaseAmountCapacity).HasColumnName(@"BaseAmountCapacity").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.WeightBaseCapacity).HasColumnName(@"WeightBaseCapacity").HasColumnType("decimal(18,3)").IsRequired(false);
            builder.Property(x => x.BaseAmountPlan).HasColumnName(@"BaseAmountPlan").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.WeightBasePlan).HasColumnName(@"WeightBasePlan").HasColumnType("decimal(18,3)").IsRequired(false);
            builder.Property(x => x.WeightBaseActual).HasColumnName(@"WeightBaseActual").HasColumnType("decimal(18,3)").IsRequired(false);
            builder.Property(x => x.RewardUnitTypeId).HasColumnName(@"RewardUnitTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.RewardBaseSpecificId).HasColumnName(@"RewardBaseSpecificId").HasColumnType("int").IsRequired();
            //builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsMonthly).HasColumnName(@"IsMonthly").HasColumnType("bit").IsRequired();
            builder.Property(x => x.BasePercent).HasColumnName(@"BasePercent").HasColumnType("float").HasPrecision(53).IsRequired();
            //builder.Property(x => x.IsMonthly).HasColumnName(@"IsMonthly").HasColumnType("bit").IsRequired();
            builder.Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.InsertUser).HasColumnName(@"InsertUser").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);

            // Foreign keys
            builder.HasOne(a => a.RewardBaseSpecific).WithMany(b => b.RewardBaseSpecificOfUnitHeaders).HasForeignKey(c => c.RewardBaseSpecificId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_RewardBaseSpecificOfUnitHeader_RewardBaseSpecific");
            builder.HasOne(a => a.RewardUnitType).WithMany(b => b.RewardBaseSpecificOfUnitHeaders).HasForeignKey(c => c.RewardUnitTypeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_RewardBaseSpecificOfUnitHeader_RewardUnitType");
        }
    }

}
// </auto-generated>
