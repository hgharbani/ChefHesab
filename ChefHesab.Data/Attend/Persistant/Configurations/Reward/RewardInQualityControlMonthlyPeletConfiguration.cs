// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Reward;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.HR.Data.Persistant.Configurations
{
    // RewardInQualityControlMonthlyPelet
    public class RewardInQualityControlMonthlyPeletConfiguration : IEntityTypeConfiguration<RewardInQualityControlMonthlyPelet>
    {
        public void Configure(EntityTypeBuilder<RewardInQualityControlMonthlyPelet> builder)
        {
            builder.ToTable("RewardInQualityControlMonthlyPelet", "Reward");
            builder.HasKey(x => x.Id).HasName("PK_RewardInPeletMonthlyQualityControl").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.RewardInId).HasColumnName(@"RewardInId").HasColumnType("int").IsRequired();
            builder.Property(x => x.PeletPlantName).HasColumnName(@"PeletPlantName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.B4Percent).HasColumnName(@"B4Percent").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.AiPercent).HasColumnName(@"AiPercent").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.PorosPercent).HasColumnName(@"PorosPercent").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.CcsPercent).HasColumnName(@"CcsPercent").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.SizePercent).HasColumnName(@"SizePercent").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.RawPeletPercent).HasColumnName(@"RawPeletPercent").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.Spare4).HasColumnName(@"Spare4").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.CSuggestionFactorPelet).HasColumnName(@"CSuggestionFactorPelet").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.ProductionEfficiencyId).HasColumnName(@"ProductionEfficiencyId").HasColumnType("int").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.RewardIn).WithMany(b => b.RewardInQualityControlMonthlyPelets).HasForeignKey(c => c.RewardInId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_RewardInQualityControlMonthlyPelet_RewardIn");
        }
    }

}
// </auto-generated>
