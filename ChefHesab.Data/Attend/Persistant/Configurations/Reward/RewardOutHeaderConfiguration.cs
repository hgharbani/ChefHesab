// <auto-generated>
// ReSharper disable All

using Ksc.HR.Domain.Entities.Reward;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.HR.Data.Persistant.Configurations
{
    // RewardOutHeader
    public class RewardOutHeaderConfiguration : IEntityTypeConfiguration<RewardOutHeader>
    {
        public void Configure(EntityTypeBuilder<RewardOutHeader> builder)
        {
            builder.ToTable("RewardOutHeader", "Reward");
            builder.HasKey(x => x.Id).HasName("PK_RewardOutHeader").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.YearMonth).HasColumnName(@"YearMonth").HasColumnType("int").IsRequired();
            builder.Property(x => x.RewardCategoryId).HasColumnName(@"RewardCategoryId").HasColumnType("int").IsRequired();
            builder.Property(x => x.CPrimPercent).HasColumnName(@"CPrimPercent").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.EqualProduction).HasColumnName(@"EqualProduction").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.ConfirmingUser).HasColumnName(@"ConfirmingUser").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.ConfirmingDate).HasColumnName(@"ConfirmingDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.ConfirmingTime).HasColumnName(@"ConfirmingTime").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.HostNameConfirmingUser).HasColumnName(@"HostNameConfirmingUser").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.LostProducation).HasColumnName(@"LostProducation").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.RemoteIpAddressConfirmingUser).HasColumnName(@"RemoteIpAddressConfirmingUser").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.IsFinalHeader).HasColumnName(@"IsFinalHeader").HasColumnType("bit").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.RewardCategory).WithMany(b => b.RewardOutHeaders).HasForeignKey(c => c.RewardCategoryId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_RewardOutHeader_RewardCategory");
        }
    }

}
// </auto-generated>
