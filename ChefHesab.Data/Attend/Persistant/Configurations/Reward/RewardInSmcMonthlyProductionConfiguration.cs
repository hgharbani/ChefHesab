// <auto-generated>
// ReSharper disable All

using Ksc.Hr.Domain.Entities;
using Ksc.HR.Domain.Entities.Reward;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Ksc.HR.Data.Persistant.Configurations
{
    // RewardInSmcMonthlyProduction
    public class RewardInSmcMonthlyProductionConfiguration : IEntityTypeConfiguration<RewardInSmcMonthlyProduction>
    {
        public void Configure(EntityTypeBuilder<RewardInSmcMonthlyProduction> builder)
        {
            builder.ToTable("RewardInSmcMonthlyProduction", "Reward");
            builder.HasKey(x => x.Id).HasName("PK_MonthlyProductionRewardIn").IsClustered();
            
            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.RewardInId).HasColumnName(@"RewardInId").HasColumnType("int").IsRequired();
            builder.Property(x => x.ProductionEfficiencyId).HasColumnName(@"ProductionEfficiencyId").HasColumnType("int").IsRequired(false);

            builder.Property(x => x.PlantName).HasColumnName(@"PlantName").HasColumnType("nvarchar(500)").IsRequired().HasMaxLength(500);
            builder.Property(x => x.ActualWeight).HasColumnName(@"ActualWeight").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.PlanWeight).HasColumnName(@"PlanWeight").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.PerformanceSuggestionFactor).HasColumnName(@"PerformanceSuggestionFactor").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.PerformanceFactor).HasColumnName(@"PerformanceFactor").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.Spare1).HasColumnName(@"Spare1").HasColumnType("int").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.RewardIn).WithMany(b => b.RewardInSmcMonthlyProductions).HasForeignKey(c => c.RewardInId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_RewardInMonthlyProduction_RewardIn");
        }
    }

}
// </auto-generated>
