// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>

using ChefHesab.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace ChefHesab.Data.Configurations
{
    public partial class AdditionalCostConfiguration : IEntityTypeConfiguration<AdditionalCost>
    {
        public void Configure(EntityTypeBuilder<AdditionalCost> builder)
        {
            builder.ToTable("AdditionalCosts", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_AdditionalCosts").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("uniqueidentifier").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.Title).HasColumnName(@"Title").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.FoodCategoryId).HasColumnName(@"FoodCategoryId").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.IsShowRatio).HasColumnName(@"IsShowRatio").HasColumnType("bit").IsRequired();
            builder.Property(x => x.PersonalId).HasColumnName(@"PersonalId").HasColumnType("uniqueidentifier").IsRequired(false);
            builder.Property(x => x.CompanyId).HasColumnName(@"CompanyId").HasColumnType("uniqueidentifier").IsRequired(false);
            builder.Property(x => x.Price).HasColumnName(@"Price").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.ContractingCompany).WithMany(b => b.AdditionalCosts).HasForeignKey(c => c.CompanyId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_AdditionalCosts_ContractingCompanies");
            builder.HasOne(a => a.FoodCategory).WithMany(b => b.AdditionalCosts).HasForeignKey(c => c.FoodCategoryId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_AdditionalCosts_FoodCategory");
            builder.HasOne(a => a.Personal).WithMany(b => b.AdditionalCosts).HasForeignKey(c => c.PersonalId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_AdditionalCosts_Personal");
            OnConfigurePartial(builder);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<AdditionalCost> entity);
    }
}
