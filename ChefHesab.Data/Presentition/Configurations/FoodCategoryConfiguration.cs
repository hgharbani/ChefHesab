// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>

using ChefHesab.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace ChefHesab.Data.Configurations
{
    public partial class FoodCategoryConfiguration : IEntityTypeConfiguration<FoodCategory>
    {
        public void Configure(EntityTypeBuilder<FoodCategory> builder)
        {

            builder.ToTable("FoodCategory", "dbo");
            builder.HasKey(x => x.CategoryId).HasName("PK_FoodCategory").IsClustered();

            builder.Property(x => x.CategoryId).HasColumnName(@"CategoryId").HasColumnType("bigint").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.Title).HasColumnName(@"Title").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Code).HasColumnName(@"Code").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Active).HasColumnName(@"active").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.ParentId).HasColumnName(@"ParentId").HasColumnType("bigint").IsRequired(false);


            // Foreign keys
            builder.HasOne(a => a.Parent).WithMany(b => b.FoodCategories).HasForeignKey(c => c.ParentId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_FoodCategory_FoodCategory");

            OnConfigurePartial(builder);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<FoodCategory> entity);
    }
}
